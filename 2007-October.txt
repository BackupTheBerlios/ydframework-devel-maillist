From ximian at mail.berlios.de  Tue Oct  2 00:00:31 2007
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Tue, 2 Oct 2007 00:00:31 +0200
Subject: [ydf-devel] r2490 -
	YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements
Message-ID: <200710012200.l91M0VQV019919@sheep.berlios.de>

Author: ximian
Date: 2007-10-02 00:00:11 +0200 (Tue, 02 Oct 2007)
New Revision: 2490

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php
Log:
on checkboxgroup:
 - added support values that are imploded strings

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php	2007-09-29 18:32:15 UTC (rev 2489)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php	2007-10-01 22:00:11 UTC (rev 2490)
@@ -145,9 +145,19 @@
                         $this->_items[$k]->setValue( $v );
                     }
                 }
+
+            // check if val is a string key/checkbox name
             }elseif( isset( $this->_items[ strval( $val ) ] ) ){
-				$this->_items[ strval( $val ) ]->setValue( 1 );
-			}
+                $this->_items[ strval( $val ) ]->setValue( 1 );
+
+            // if value is a string (that is not a key/checkbox), explode it
+            }elseif( is_string( $val ) ){
+                foreach( explode( ';', $val ) as $v ){
+                    if ( isset( $this->_items[$v] ) ){
+                        $this->_items[$v]->setValue( 1 );
+                    }
+                }
+            }
         }
 
 



From ximian at mail.berlios.de  Wed Oct  3 23:18:24 2007
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Wed, 3 Oct 2007 23:18:24 +0200
Subject: [ydf-devel] r2491 - in YDFramework2.0/trunk/YDFramework2:
	3rdparty/smarty/libs/plugins YDClasses
Message-ID: <200710032118.l93LIOrL023510@sheep.berlios.de>

Author: ximian
Date: 2007-10-03 23:17:48 +0200 (Wed, 03 Oct 2007)
New Revision: 2491

Added:
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/resource.string.php
Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php
Log:
on YDTemplate:
 NEW: support for smarty resources
 NEW: added resource 'string'. Now it's possible to parse string content (and not only files):
        eg,  $template->display( 'string:This is a string that will be parsed with {$YD_FW_NAME}' );

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/resource.string.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/resource.string.php	2007-10-01 22:00:11 UTC (rev 2490)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/resource.string.php	2007-10-03 21:17:48 UTC (rev 2491)
@@ -0,0 +1,24 @@
+<?php
+
+function smarty_resource_string_source($tpl_name, &$tpl_source, &$smarty){
+
+   $tpl_source = $tpl_name;
+   return true;
+}
+
+function smarty_resource_string_timestamp($tpl_name, &$tpl_timestamp, &$smarty){
+
+  $tpl_timestamp = time();
+  return true;
+}
+
+function smarty_resource_string_secure($tpl_name, &$smarty){
+
+  return true;
+}
+
+function smarty_resource_string_trusted($tpl_name, &$smarty){
+
+  return true;
+}
+?> 

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php	2007-10-01 22:00:11 UTC (rev 2490)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php	2007-10-03 21:17:48 UTC (rev 2491)
@@ -156,6 +156,17 @@
                 $this->assign( 'YD_FW_REVISION', YD_FW_REVISION );
                 $this->assign( 'YD_ACTION', YDRequest::getActionName() );
 
+                // check if a custom resource is defined
+                if ( strpos( $file, ':' ) !== false ){
+
+                    // display or return the result
+                    if ( $display == true ) {
+                        echo( parent::fetch( $file ) );
+                        return;
+                    }
+                    return parent::fetch( $file );
+                }
+
                 // Add custom javascript
                 $this->register_outputfilter( array( &$this, "__assignHeadCode") );
 



From ximian at mail.berlios.de  Sat Oct 13 01:35:23 2007
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 13 Oct 2007 01:35:23 +0200
Subject: [ydf-devel] r2492 - in YDFramework2.0/trunk/YDFramework2/YDClasses:
	. YDFormRenderers
Message-ID: <200710122335.l9CNZNEB000587@sheep.berlios.de>

Author: ximian
Date: 2007-10-13 01:35:09 +0200 (Sat, 13 Oct 2007)
New Revision: 2492

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormRenderers/YDFormRenderer_html.php
Log:
NEW: form compare rule: 'diff' that returns true if all element values are different
NEW: form element simple contextual help

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php	2007-10-03 21:17:48 UTC (rev 2491)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php	2007-10-12 23:35:09 UTC (rev 2492)
@@ -648,7 +648,7 @@
         function addCompareRule( $elements, $rule, $error ) {
 
             // Check if we have a valid rule
-            if ( ! in_array( strtolower( $rule ), array( 'equal', 'asc', 'desc' ) ) ) {
+            if ( ! in_array( strtolower( $rule ), array( 'equal', 'diff', 'asc', 'desc' ) ) ) {
                 trigger_error( 'Unknown compare rule "' . $rule . '"', YD_ERROR );
             }
 
@@ -992,8 +992,9 @@
                 // Check the type of the rule
                 switch ( $rule['rule'] ) {
 
-                    // Equal rule
+                    // Equal and Different rule
                     case 'equal':
+                    case 'diff':
 
                         // Get the values for each element
                         $values = array();
@@ -1007,11 +1008,17 @@
                         }
                         
                         // Check if the value is the same for each element
-                        if ( sizeof( array_unique( $values ) ) > 1 ) {
+                        if ( $rule['rule'] == 'equal' && sizeof( array_unique( $values ) ) > 1 ) {
                             $this->_errors[ $rule['elements'][0] ] =  $rule['error'];
                             return false;
                         }
 
+                        // Check if the value is the same for each element
+                        if ( $rule['rule'] == 'diff' && sizeof( array_unique( $values ) ) != count( $rule['elements'] ) ) {
+                            $this->_errors[ $rule['elements'][0] ] =  $rule['error'];
+                            return false;
+                        }
+
                         // Rule passed
                         break;
 
@@ -1359,6 +1366,7 @@
             $this->_raw_default = false;
             $this->_isButton = false;
 			$this->_label_attributes = array();
+            $this->_help = '';
 
             // Initialize options
             if ( is_array( $options ) ){      
@@ -1638,6 +1646,26 @@
 
 
         /**
+         *  Function to set the help string of a form element
+         *
+         *  @param  $help    The help string
+         */
+        function setHelp( $help ) {
+            $this->_help = $help;
+        }
+
+
+        /**
+         *      Gets the help string of the form element.
+         *
+         *      @returns        The help string of the form element.
+         */
+        function getHelp() {
+            return $this->_help;
+        }
+
+
+        /**
          *      Sets label attribute
          *
          *      @param  $attribute	Attribute name
@@ -1703,6 +1731,7 @@
                 'placeLabel'  => $this->_placeLabel,
                 'html'        => $this->toHtml(),
                 'isButton'    => $this->isButton(),
+                'help'        => $this->_help
             );
         }
 

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormRenderers/YDFormRenderer_html.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormRenderers/YDFormRenderer_html.php	2007-10-03 21:17:48 UTC (rev 2491)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormRenderers/YDFormRenderer_html.php	2007-10-12 23:35:09 UTC (rev 2492)
@@ -139,7 +139,7 @@
                         }
                         $html .= $element['html'];
                     }
-                    $html .= '</p>' . YD_CRLF;
+                    $html .= ' ' . $element['help'] . '</p>' . YD_CRLF;
                 }
             }
 



From ximian at mail.berlios.de  Sat Oct 13 01:36:44 2007
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 13 Oct 2007 01:36:44 +0200
Subject: [ydf-devel] r2493 - YDFramework2.0/trunk/YDFramework2/addons/YDAjax
Message-ID: <200710122336.l9CNaiNJ000624@sheep.berlios.de>

Author: ximian
Date: 2007-10-13 01:36:35 +0200 (Sat, 13 Oct 2007)
New Revision: 2493

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDAjax/YDAjax.php
Log:
on YDAjax is now possible to customize the url used for all calls

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDAjax/YDAjax.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDAjax/YDAjax.php	2007-10-12 23:35:09 UTC (rev 2492)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDAjax/YDAjax.php	2007-10-12 23:36:35 UTC (rev 2493)
@@ -70,7 +70,7 @@
          *
          *	@param $template		Template object.
          */
-        function YDAjax( & $template ){
+        function YDAjax( & $template, $url_string = null ){
 
             // Setup the module
             $this->_author = 'Francisco Azevedo';
@@ -105,9 +105,13 @@
 			// init wysiwyg editors
 			$this->wysiwyg_forms = array();
 
+			// check url
+			if( is_null( $url_string ) ){
+				$url_string = YDRequest::getNormalizedUri();
+			}
 
 			// compute default ajax header
-			$html  = "var xajaxRequestUri     = \"" . YDRequest::getNormalizedUri() . "\";";
+			$html  = "var xajaxRequestUri     = \"" . $url_string . "\";";
 
 			$debug = YDConfig::get( 'YD_AJAX_DEBUG' ) ? "true" : "false";
 



From ximian at mail.berlios.de  Mon Oct 15 14:47:00 2007
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Mon, 15 Oct 2007 14:47:00 +0200
Subject: [ydf-devel] r2494 - YDFramework2.0/trunk/YDFramework2/addons/YDAjax
Message-ID: <200710151247.l9FCl0hM003153@sheep.berlios.de>

Author: ximian
Date: 2007-10-15 14:46:44 +0200 (Mon, 15 Oct 2007)
New Revision: 2494

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDAjax/YDAjax.php
Log:
NEW: support for custom editors in YDAjax

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDAjax/YDAjax.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDAjax/YDAjax.php	2007-10-12 23:36:35 UTC (rev 2493)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDAjax/YDAjax.php	2007-10-15 12:46:44 UTC (rev 2494)
@@ -102,8 +102,10 @@
 			$this->autocompleterCss  = '';
 			$this->autocompleterCodeFunctions = array();
 
-			// init wysiwyg editors
-			$this->wysiwyg_forms = array();
+            // init wysiwyg editors
+            $this->wysiwyg_editorpath  = dirname( __FILE__ ) . '/editors/YDAjaxEditor.php';
+            $this->wysiwyg_editorclass = 'YDAjaxEditor';
+            $this->wysiwyg_forms       = array();
 
 			// check url
 			if( is_null( $url_string ) ){
@@ -622,12 +624,12 @@
 			// check if form has wysiwyg editors
 			if ( isset( $this->wysiwyg_forms[ $formName ] ) ){
 
-				// include editor lib
-				require_once( dirname( __FILE__ ) . '/editors/YDAjaxEditor.php' );
+                // include editor lib
+                require_once( $this->wysiwyg_editorpath );
 
-				// wysiwyg editors require to copy their html to a textarea before submit
-				foreach( $this->wysiwyg_forms[ $formName ] as $formElementID )
-					$js .= YDAjaxEditor::JScopy( $formElementID );
+                // wysiwyg editors require to copy their html to a textarea before submit. Use JScopy static method
+                foreach( $this->wysiwyg_forms[ $formName ] as $formElementID )
+                    $js .= call_user_func( array( $this->wysiwyg_editorclass, 'JScopy' ), $formElementID );//YDAjaxEditor::JScopy( $formElementID );
 			}
 	
 			// now return form values
@@ -812,21 +814,22 @@
 
 
         /**
-         *	This method will process all results added in a response
+         *	This method defined the path and classname to editor JScopy static method
+         *
+         *	@param $path		File path
+         *	@param $classname	Class name to invoke
          */	
-		function processResults(){
+        function setEditor( $path, $classname ){
 
-			// include support for wysiwyg editors
-			if ( ! empty( $this->wysiwyg_ids ) || ! empty( $this->wysiwyg_forms ) ){
+            $this->wysiwyg_editorpath  = $path;
+            $this->wysiwyg_editorclass = $classname;
+        }
 
-				require_once( dirname( __FILE__ ) . '/editors/YDAjaxEditor.php' );
 
-				// add support for wysiwyg editors applyed to form elements
-				// foreach form, cycle all wysiwyg elements to compute their initialization
-				foreach( $this->wysiwyg_forms as $formName => $formElements )
-					foreach( $formElements as $formElementID )
-						$this->response->addScript( YDAjaxEditor::JSinit( $formElementID ) );
-			}
+        /**
+         *	This method will process all results added in a response
+         */	
+		function processResults(){
 
 			// return XML to client browser
 			return $this->response->getXML();



From ximian at mail.berlios.de  Thu Oct 18 00:34:46 2007
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Thu, 18 Oct 2007 00:34:46 +0200
Subject: [ydf-devel] r2495 - YDFramework2.0/trunk/YDFramework2/YDClasses
Message-ID: <200710172234.l9HMYkv1024575@sheep.berlios.de>

Author: ximian
Date: 2007-10-18 00:34:36 +0200 (Thu, 18 Oct 2007)
New Revision: 2495

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php
Log:
NEW: validation rule 'safe' to check XSS code

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php	2007-10-15 12:46:44 UTC (rev 2494)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php	2007-10-17 22:34:36 UTC (rev 2495)
@@ -196,6 +196,7 @@
             $this->registerRule( 'country', array( 'YDValidateRules', 'country' ), 'YDValidateRules.php' );
             $this->registerRule( 'state', array( 'YDValidateRules', 'state' ), 'YDValidateRules.php' );
             $this->registerRule( 'checkboxgroupvalues', array( 'YDValidateRules', 'checkboxgroupvalues' ), 'YDValidateRules.php' );
+            $this->registerRule( 'safe', array( 'YDValidateRules', 'safe' ), 'YDValidateRules.php' );
 
             // Add the filters
             $this->registerFilter( 'trim', 'trim' );

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php	2007-10-15 12:46:44 UTC (rev 2494)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php	2007-10-17 22:34:36 UTC (rev 2495)
@@ -890,6 +890,19 @@
             }
         }
 
+
+        /**
+         *	This function returns true if the variable value is a safe html (do not contain possible XSS html code).
+         *
+         *	@param $val		The value to test.
+         *	@param $opts	No options.
+         */
+        function safe( $val, $opts = array() ) {
+            require_once( YD_DIR_HOME . '/3rdparty/safehtml/classes/safehtml.php' );
+            $_safehtml = new safehtml();
+            return ( $_safehtml->parse( $val ) === $val );
+        }
+
     }
 
 ?>
\ No newline at end of file



From ximian at mail.berlios.de  Fri Oct 19 00:35:48 2007
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Fri, 19 Oct 2007 00:35:48 +0200
Subject: [ydf-devel] r2496 - YDFramework2.0/trunk/YDFramework2/YDClasses
Message-ID: <200710182235.l9IMZmJh025063@sheep.berlios.de>

Author: ximian
Date: 2007-10-19 00:35:40 +0200 (Fri, 19 Oct 2007)
New Revision: 2496

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php
Log:
FIX: YDTemplate is now fully compatible with custom resources (smarty override to fix filename generation)

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php	2007-10-17 22:34:36 UTC (rev 2495)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php	2007-10-18 22:35:40 UTC (rev 2496)
@@ -161,10 +161,10 @@
 
                     // display or return the result
                     if ( $display == true ) {
-                        echo( parent::fetch( $file ) );
+                        echo( parent::fetch( $file, $cache_id, $compile_id ) );
                         return;
                     }
-                    return parent::fetch( $file );
+                    return parent::fetch( $file, $cache_id, $compile_id );
                 }
 
                 // Add custom javascript
@@ -396,6 +396,49 @@
                 return $tplName;
             }
 
+
+            /**
+             * This method overrides Smarty method to make file names compatible with 'string:' resource
+             * using the filename md5 in name (instead of real filename) because on 'string:' resources, the content 
+             * is passed as filename. So, if we use the Smarty method, filenames will be ugly and the resource limited 
+             * to a tiny text ( because of filesystem filenames limit ).
+             *
+             * get a concrete filename for automagically created content
+             *
+             * @param string $auto_base
+             * @param string $auto_source
+             * @param string $auto_id
+             * @return string
+             * @staticvar string|null
+             * @staticvar string|null
+             */
+        
+            function _get_auto_filename($auto_base, $auto_source = null, $auto_id = null)
+            {
+                $_compile_dir_sep =  $this->use_sub_dirs ? DIRECTORY_SEPARATOR : '^';
+                $_return = $auto_base . DIRECTORY_SEPARATOR;
+        
+                if(isset($auto_id)) {
+                    // make auto_id safe for directory names
+                    $auto_id = str_replace('%7C',$_compile_dir_sep,(urlencode($auto_id)));
+                    // split into separate directories
+                    $_return .= $auto_id . $_compile_dir_sep;
+                }
+        
+                if(isset($auto_source)) {
+                    // make source name safe for filename
+                    $_filename = urlencode(basename($auto_source));
+                    $_crc32 = sprintf('%08X', crc32($auto_source));
+                    // prepend %% to avoid name conflicts with
+                    // with $params['auto_id'] names
+                    $_crc32 = substr($_crc32, 0, 2) . $_compile_dir_sep .
+                              substr($_crc32, 0, 3) . $_compile_dir_sep . $_crc32;
+                    $_return .= '%%' . $_crc32 . '%%' . md5( $_filename );
+                }
+        
+                return $_return;
+            }
+
         }
 
     // Use PHP templates



From ximian at mail.berlios.de  Sat Oct 20 18:40:57 2007
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 20 Oct 2007 18:40:57 +0200
Subject: [ydf-devel] r2497 -
	YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements
Message-ID: <200710201640.l9KGevSq003582@sheep.berlios.de>

Author: ximian
Date: 2007-10-20 18:40:50 +0200 (Sat, 20 Oct 2007)
New Revision: 2497

Removed:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Grid.php
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Grid.tpl
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_SwitchMenu.php
Log:
DEL: deleted old (deprecated and not supported any more) form elements

Deleted: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Grid.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Grid.php	2007-10-18 22:35:40 UTC (rev 2496)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Grid.php	2007-10-20 16:40:50 UTC (rev 2497)
@@ -1,174 +0,0 @@
-<?php
-
-    /*
-
-        Yellow Duck Framework version 2.1
-        (c) Copyright 2002-2007 Pieter Claerhout
-
-        This library is free software; you can redistribute it and/or
-        modify it under the terms of the GNU Lesser General Public
-        License as published by the Free Software Foundation; either
-        version 2.1 of the License, or (at your option) any later version.
-
-        This library is distributed in the hope that it will be useful,
-        but WITHOUT ANY WARRANTY; without even the implied warranty of
-        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
-        Lesser General Public License for more details.
-
-        You should have received a copy of the GNU Lesser General Public
-        License along with this library; if not, write to the Free Software
-        Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-
-    */
-
-    /**
-     *  @addtogroup YDForm Core - Form
-     */
-
-    // Check if the framework is loaded
-    if ( ! defined( 'YD_FW_NAME' ) ) {
-        die( 'Yellow Duck Framework is not loaded.' );
-    }
-
-    // Includes
-    include_once( YD_DIR_HOME_CLS . '/YDForm.php');
-    include_once( YD_DIR_HOME_CLS . '/YDTemplate.php');
-
-    /**
-     *        This is the class that defines a simple ajax grid element
-     *
-     *  @ingroup YDForm
-     */
-    class YDFormElement_Grid extends YDFormElement {
-
-        /**
-         *        This is the class constructor for the YDFormElement_Grid class.
-         *
-         *        @param $form                The name of the form to which this element is connected.
-         *        @param $name                The name of the form element.
-         *        @param $label                (optional) The label for the form element.
-         *        @param $attributes        (optional) The attributes for the form element.
-         *        @param $options                (optional) The options for the elment.
-         */
-        function YDFormElement_Grid( $form = '', $name = 'gr', $label='', $attributes=array(), $options=array() ) {
-
-            // Initialize the parent
-            $this->YDFormElement( $form, $name, $label, $attributes, $options );
-
-            // Set the type
-            $this->_type = 'grid';
-
-            // Set the value correctly
-            $this->_placeLabel = 'none';
-
-            // Indicate if filters need to be applied
-            $this->_applyFilters = false;
-
-            // Indicate we are a button type
-            $this->_isButton = false;
-
-			// column names
-			$this->columns = array();
-			
-			// default values
-//			$this->defaults = array();
-			
-			$this->form = new YDForm( 'gridform' . $name );
-			$this->form->addElement( 'hidden', 'gr_column',    '', array('id' => 'gr_column') );
-			$this->form->addElement( 'hidden', 'gr_direction', '', array('id' => 'gr_direction') );
-			$this->form->addElement( 'hidden', 'gr_page',      '', array('id' => 'gr_page') );
-        }
-
-
-        /**
-         *      This function returns a boolean indicating if the element value was
-         *      modified from it's default value.
-         *
-         *      @returns        Boolean indicating if the element was modified.
-         */
-        function isModified() {
-            return false;
-        }
-
-
-        /**
-         *      This function adds a ajax event to handle header calls
-         *
-         *      @param $ajax    YDAjax object to assign grid events
-         *      @param $method  Method name where to send events
-         *
-         */
-		function setAjax( &$ajax, $method = 'PHCMHelpdesk_reload' ){
-		
-			$ajax->addForm( $this->form );
-			$ajax->addEvent( 'ticketReload()', $method, $this->form->getName() );
-		}
-
-
-        /**
-         *      This function returns the grid form object
-         */
-		function getForm(){
-
-			// return form object
-			return $this->form;
-		}
-
-
-        /**
-         *      This function defines all columns
-         *
-         *      @param $columns    Column names
-         *
-         */
-		function setColumns( $columns ){
-
-			$this->columns = $columns;
-		}
-
-
-        /**
-         *      This function defines all columns
-         *
-         *      @param $defaults    Default details for grid columns
-         *
-         */
-		function setDefaults( $defaults ){
-
-			$this->defaults = $defaults;
-		}
-
-
-        /**
-         *        This function will return the element as HTML.
-         *
-         *        @returns        The form element as HTML text.
-         */
-        function toHtml() {
-
-            // Create the list of attributes
-            $attribs = array(
-                'id' => $this->_form . '_' . $this->_name
-            );
-            $attribs = array_merge( $this->_attributes, $attribs );
-
-			$template_record = new YDTemplate();
-
-			// set form defaults
-			if ( isset ( $this->defaults ) ){
-				$this->form->setDefaults( $this->defaults );
-				$template_record->assign( 'defaults',  $this->defaults );
-			}
-
-			// get record template and assign recordset
-			$template_record->assign( 'recordset', $this->_value );
-			$template_record->assign( 'columns',   $this->columns );
-			$template_record->assignForm( 'form',  $this->form );
-
-            // Get the HTML
-			return $template_record->fetch( dirname( __FILE__ ) . '/YDFormElement_Grid.tpl' );
-        }
-
-    }
-
-?>
\ No newline at end of file

Deleted: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Grid.tpl
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Grid.tpl	2007-10-18 22:35:40 UTC (rev 2496)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Grid.tpl	2007-10-20 16:40:50 UTC (rev 2497)
@@ -1,54 +0,0 @@
-<span id="ticket_table">
-
-<table width="100%" border="0">
-  <tr>
-    <td align="right">
-	<span class="field_previous" onClick="document.getElementById('gr_page').value='{$recordset->pagePrevious}';ticketReload();">&laquo; {t w="previous"}</span>
-	&nbsp;
-    {foreach from=$recordset->pages item="page"}
-		{if ($page != $recordset->page)}
-			<span class="field_page" onClick="document.getElementById('gr_page').value='{$page}';ticketReload();">{$page}</span>
-		{else}
-			<span class="field_page_current">{$page}</span>
-		{/if}
-	{/foreach}
-	&nbsp;
-	<span class="field_next" onClick="document.getElementById('gr_page').value='{$recordset->pageNext}';ticketReload();">{t w="next"} &raquo;</span>
-	</td>
-  </tr>
-</table>
-<br />
-        <table width="100%" border="0">
-            <tr class="rowHeader">
-                {foreach from=$columns item="field" key="key"}
-					{if ($field.sortable == false)}
-	                    <td height="24" align="right" class="fieldHeader_off">{t w=$key}&nbsp;</td>
-					{elseif ($key != $defaults.grid_column)}
-	                    <td height="24" align="right" class="fieldHeader" onClick="document.getElementById('gr_column').value='{$key}'; document.getElementById('gr_direction').value = 1-document.getElementById('gr_direction').value; ticketReload();">{t w=$key}&nbsp;</td>
-					{else}
-	                    <td height="24" align="right" class="fieldHeader_order" onClick="document.getElementById('gr_column').value='{$key}'; document.getElementById('gr_direction').value = 1-document.getElementById('gr_direction').value; ticketReload();">{t w=$key}&nbsp;</td>
-					{/if}
-                {/foreach}
-            </tr>
-        {foreach from=$recordset->set item="record"}
-            <tr class="{cycle values='row1,row2'}">
-                {foreach from=$record item="val"}
-                    <td height="24" align="right">{$val}&nbsp;</td>
-                {/foreach}
-            </tr>
-        {/foreach}
-</table>
-        <table width="100%"  border="0">
-          <tr>
-            <td align="right" class="field_total">
-			&nbsp;
-			{$form.gr_column.html}
-			{$form.gr_direction.html}
-			{$form.gr_page.html}
-			</td>
-          </tr>
-          <tr>
-            <td align="right" class="field_total">{t w="total"}: {$recordset->totalRows}&nbsp;&nbsp;</td>
-          </tr>
-        </table>
-</span>
\ No newline at end of file

Deleted: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_SwitchMenu.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_SwitchMenu.php	2007-10-18 22:35:40 UTC (rev 2496)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_SwitchMenu.php	2007-10-20 16:40:50 UTC (rev 2497)
@@ -1,176 +0,0 @@
-<?php
-
-    /*
-
-        Yellow Duck Framework version 2.1
-        (c) Copyright 2002-2007 Pieter Claerhout
-
-        This library is free software; you can redistribute it and/or
-        modify it under the terms of the GNU Lesser General Public
-        License as published by the Free Software Foundation; either
-        version 2.1 of the License, or (at your option) any later version.
-
-        This library is distributed in the hope that it will be useful,
-        but WITHOUT ANY WARRANTY; without even the implied warranty of
-        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
-        Lesser General Public License for more details.
-
-        You should have received a copy of the GNU Lesser General Public
-        License along with this library; if not, write to the Free Software
-        Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-
-    */
-
-    /**
-     *  @addtogroup YDForm Core - Form
-     */
-
-    // Check if the framework is loaded
-    if ( ! defined( 'YD_FW_NAME' ) ) {
-        die( 'Yellow Duck Framework is not loaded.' );
-    }
-
-    // Includes
-    include_once( YD_DIR_HOME_CLS . '/YDForm.php');
-
-    /**
-     *	This is the class that define a switch menu form element
-     *
-     *  @ingroup YDForm
-     */
-    class YDFormElement_SwitchMenu extends YDFormElement {
-
-        /**
-         *	This is the class constructor for the YDFormElement_SwitchMenu class.
-         *
-         *	@param $form		The name of the form to which this element is connected.
-         *	@param $name		The name of the form element.
-         *	@param $label		(optional) The label for the form element.
-         *	@param $attributes	(optional) The attributes for the form element.
-         *	@param $options		(optional) The menu elements.
-         */
-        function YDFormElement_SwitchMenu( $form = 'YDForm', $name = 'SMenu', $label='', $attributes=array(), $options=array() ) {
-
-            // Initialize the parent
-            $this->YDFormElement( $form, $name, $label, $attributes, $options );
-
-            // Set the type
-            $this->_type = 'switchmenu';
-			
-			// Get elements
-			$this->_elements = $options;
-        }
-
-
-        /**
-         *	This function will return the element as HTML.
-         *
-         *	@returns	The form element as HTML text.
-         */
-        function toHtml() {
-
-            // Create the list of attributes
-            $attribs = array(
-                'name' => $this->_form . '_' . $this->_name
-            );
-
-            $attribs = array_merge( $this->_attributes, $attribs );
-            
-            // Get the HTML
-            $out = '';
-
-			// if js code was not loaded we must load
-            if ( ! defined( 'YD_SWMENU_MAINSCRIPT' ) ) {
-            	$out .= trim( '<script type="text/javascript">' );
-            	$out .= trim( 'function hideSMenu( menudiv, obj ){' );
-            	$out .= trim( '	var ar = document.getElementById( menudiv ).getElementsByTagName( "span" );' );
-            	$out .= trim( '		if( document.getElementById( obj ).style.display != "block" ){' );
-            	$out .= trim( '			for ( var i = 0; i < ar.length; i++ ){' );
-            	$out .= trim( '				if ( ar[i].className == "submenu" )' );
-            	$out .= trim( '					ar[i].style.display = "none";' );
-            	$out .= trim( '			}' );
-            	$out .= trim( '			document.getElementById( obj ).style.display = "block";' );
-            	$out .= trim( '		}else{' );
-            	$out .= trim( '			document.getElementById( obj ).style.display = "none";' );
-            	$out .= trim( '		}' );
-            	$out .= trim( '}' );
-            	$out .= trim( '</script>' );
-                define( 'YD_SWMENU_MAINSCRIPT', 1 );
-            }
-
-			// create menu div
-			$out .= '<div'. YDForm::_convertToHtmlAttrib( $attribs ) . '>';
-			
-			// create menu id
-			$IDmenu = $this->getAttribute('id');
-			$i = 1;
-			
-			// cycle menus
-			foreach ( $this->_elements as $_title => $_elements ){
-
-				// create submenu id
-				$IDsubmenu = $IDmenu . '_' . $i++;
-							
-				// create menu div
-				$out .= "<div class=\"menutitle\" onclick=\"hideSMenu('" . $IDmenu . "', '" . $IDsubmenu . "')\">" . $_title . "</div>";
-
-				// create span that includes all menu subitems
-				$out .= '<span class="submenu" id="' . $IDsubmenu . '" style="display:none">';
-				$out .= implode( '<br>', $_elements );
-				$out .= '</span>';
-        	}
-			
-			// add final menu div tag
-			$out .= '</div>';
-
-			return $out;
-		}
-
-
-        /**
-         *	This function adds custom css to the template
-         *
-         *	@param $template		The template object 
-         */
-		function addCss( & $template ){
-
-			$template->addCss( '.menutitle{ cursor:pointer;margin-bottom: 5px;background-color:#ECECFF;color:#000000;width:140px;padding:2px;text-align:center;font-weight:bold;border:1px solid #000000; }' );
-			$template->addCss( '.submenu{ margin-bottom: 0.5em; }' );
-			
-		}
-
-
-        /**
-         *	This function adds a new menu item
-         *
-         *	@param $name		The name of the menu
-         */
-		function addMenu( $name ){
-
-			// add menu to elements
-			$this->_elements[ $name ] = array();
-		}
-
-
-        /**
-         *	This function adds a new element to a menu item
-         *
-         *	@param $menu		The name of the menu to assign the element
-         *	@param $obj			The element form element object (or a simple string)
-         */
-		function addElement( $menu, $obj ){
-		
-			// if menu don't exist we should create one
-			if ( !isset( $this->_elements[ $menu ] ) ) $this->_elements[ $menu ] = array();
-
-			// if element is a form object we must get its html code
-			if ( !is_string( $obj )) $obj = $obj->toHtml();
-
-			// add this element to menu
-			array_push( $this->_elements[ $menu ], $obj );		
-		}
-
-
-    }
-
-?>
\ No newline at end of file



