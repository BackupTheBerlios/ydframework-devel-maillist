From pclaerhout at mail.berlios.de  Thu Dec  7 13:55:59 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Thu, 7 Dec 2006 13:55:59 +0100
Subject: [ydf-devel] r2246 -
	YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements
Message-ID: <200612071255.kB7Ctx4A001974@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-07 13:55:58 +0100 (Thu, 07 Dec 2006)
New Revision: 2246

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php
Log:
Added nobr tags to make sure the label and checkbox are always grouped together.

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php	2006-11-29 18:39:46 UTC (rev 2245)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php	2006-12-07 12:55:58 UTC (rev 2246)
@@ -62,14 +62,15 @@
                 // find horizontal and left tags
                 if ( is_int( strpos( $attributes[ 'sep' ], 'h' ) ) ) $this->_separator = '&nbsp;&nbsp;&nbsp;';
                 if ( is_int( strpos( $attributes[ 'sep' ], 'l' ) ) ) $this->_position  = 'left';
-				unset( $attributes[ 'sep' ] );
+                unset( $attributes[ 'sep' ] );
+
             }
 
-			// we can even have a custom separator
+            // we can even have a custom separator
             if ( isset ( $attributes[ 'separator' ] ) ){
-				$this->_separator = $attributes[ 'separator' ];
-				unset( $attributes[ 'separator' ] );
-			}
+                $this->_separator = $attributes[ 'separator' ];
+                unset( $attributes[ 'separator' ] );
+            }
 
             // Add the subitems
             $this->_items = array();
@@ -87,11 +88,11 @@
             // Indicate that the label should be appended
             $this->_placeLabel = 'before';
 
-			$this->_addSelectAll = false;
-			$this->_addSelectAll_chk_attributes = array();
-			$this->_addSelectAll_label_attributes = array();
-			
-			$this->_columns = 1;
+            $this->_addSelectAll = false;
+            $this->_addSelectAll_chk_attributes = array();
+            $this->_addSelectAll_label_attributes = array();
+            
+            $this->_columns = 1;
         }
 
 
@@ -152,10 +153,9 @@
          *	@param	$chk_attributes		(Optional) Attributes to pass to the select all checkbox
          */
         function addSelectAll( $onBottom = true, $chk_attributes = array() ) {
-
-			$this->_addSelectAll = true;
-			$this->_addSelectAll_onBottom = $onBottom;
-			$this->_addSelectAll_chk_attributes = $chk_attributes;
+            $this->_addSelectAll = true;
+            $this->_addSelectAll_onBottom = $onBottom;
+            $this->_addSelectAll_chk_attributes = $chk_attributes;
         }
 
 
@@ -216,11 +216,16 @@
             // Output the HTML checkboxes
             $output = array();
 
-			// cycle all items to get their html
+            // cycle all items to get their html
             foreach ( $this->_items as $item )
                 if ( $this->_position == 'right' ) $output[] = $item->toHtml() . '&nbsp;<label for="' . $item->_attributes['id'] . '">' . $item->_label . '</label>';
                 else                               $output[] = '<label for="' . $item->_attributes['id'] . '">' . $item->_label . '</label>&nbsp;' . $item->toHtml();
 
+            // Add the <nobr> tags
+            foreach ( $output as $key => $val ) {
+                $output[$key] = '<nobr>' . $val . '</nobr> ';
+            }
+
 			// check if we have more than one item enabled, otherwise the 'select all' will not be displayed
 			$checkboxesEnabled = 0;
 			foreach( $this->_items as $item ){



From ximian at mail.berlios.de  Sat Dec  9 18:58:58 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 9 Dec 2006 18:58:58 +0100
Subject: [ydf-devel] r2247 -
	YDFramework2.0/trunk/YDFramework2/addons/YDAjax/editors
Message-ID: <200612091758.kB9HwwGg022312@sheep.berlios.de>

Author: ximian
Date: 2006-12-09 18:58:35 +0100 (Sat, 09 Dec 2006)
New Revision: 2247

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDAjax/editors/YDAjaxEditor.php
Log:
- added toolbar set YDConfig to Ajax fckeditor

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDAjax/editors/YDAjaxEditor.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDAjax/editors/YDAjaxEditor.php	2006-12-07 12:55:58 UTC (rev 2246)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDAjax/editors/YDAjaxEditor.php	2006-12-09 17:58:35 UTC (rev 2247)
@@ -48,7 +48,13 @@
     YDConfig::set( 'YD_AJAXEDITOR_FCKEDITOR_ToolbarStartExpanded', true, false );
 
 
+    /**
+     *  This config defines the toolbar scheme to use, eg, 'Default', 'Basic'
+     *  Default: 'Default'
+     */
+    YDConfig::set( 'YD_AJAXEDITOR_FCKEDITOR_ToolbarSet', 'Default', false );
 
+
     /**
      *  Class definition for the YDAjaxEditor.
      */
@@ -69,9 +75,12 @@
 			// set editor skin path
 			$js .= "oFCKeditor.Config['SkinPath'] = oFCKeditor.BasePath + 'editor/skins/" . YDConfig::get( 'YD_AJAXEDITOR_FCKEDITOR_Skin' ) . "/';";
 
-			// set toobar expanded on start
+			// set toolbar expanded on start
 			$js .= YDConfig::get( 'YD_AJAXEDITOR_FCKEDITOR_ToolbarStartExpanded' ) ? "oFCKeditor.Config['ToolbarStartExpanded'] = true;" : "oFCKeditor.Config['ToolbarStartExpanded'] = false;";
 
+			// set toolbar scheme
+			$js .= "oFCKeditor.ToolbarSet = '" . YDConfig::get( 'YD_AJAXEDITOR_FCKEDITOR_ToolbarSet' ) . "';";
+
 			// on fckeditor we add a replace method (that will replace the textarea)
 			$js .= "oFCKeditor.ReplaceTextarea();";
 



From ximian at mail.berlios.de  Sat Dec  9 19:02:34 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 9 Dec 2006 19:02:34 +0100
Subject: [ydf-devel] r2248 -
	YDFramework2.0/trunk/YDFramework2/addons/YDDatabaseObject
Message-ID: <200612091802.kB9I2YgH025762@sheep.berlios.de>

Author: ximian
Date: 2006-12-09 19:02:10 +0100 (Sat, 09 Dec 2006)
New Revision: 2248

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDDatabaseObject/YDDatabaseObject.php
Log:
- new method YDDatabaseObject::insertForm that inserts form elements in db and returns an YDResult object

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDDatabaseObject/YDDatabaseObject.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDDatabaseObject/YDDatabaseObject.php	2006-12-09 17:58:35 UTC (rev 2247)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDDatabaseObject/YDDatabaseObject.php	2006-12-09 18:02:10 UTC (rev 2248)
@@ -1037,7 +1037,52 @@
 
         }
 
+
         /**
+         *  This function inserts a form in database
+         *
+         *  @param $form       YDForm object
+         *
+         *  @param $messages   (optional) Array with predefined messages:
+         *                                'ok' for ok message, 'error' for fatal messages, 'form_err' for no validation
+         *
+         *  @param $forvalues  (optional) Custom form validation values
+         *
+         *  @returns  YDResult object with a message and a result
+         *            On 'ok', result is the new id
+         *            On 'form_err', result is array of form error messages
+         */
+        function insertForm( & $form, $messages = array(), $formvalues = null ){
+
+            YDInclude( 'YDResult.php' );
+
+            // check messages
+            $msg_ok       = isset( $messages[ 'ok' ] )       ? $messages[ 'ok' ]       : t( 'Element added' );
+            $msg_error    = isset( $messages[ 'error' ] )    ? $messages[ 'error' ]    : t( 'Impossible to add element' );
+            $msg_form_err = isset( $messages[ 'form_err' ] ) ? $messages[ 'form_err' ] : t( 'Form errors' );
+
+            // check form validation
+            if ( ! $form->validate( $formvalues ) ){
+                return YDResult::warning( $msg_form_err, $form->getErrors() );
+            }
+
+            // reset all previous information
+            $this->reset();
+
+            $this->setValues( $form->getValues() );
+
+            // insert values and check result
+            $result = $this->insert();
+
+            if ( $result ){
+                return YDResult::ok( $msg_ok, $result );
+            }else{
+                return YDResult::fatal( $msg_err, $result );
+            }
+        }
+
+
+        /**
          *  This function executes an UPDATE query based on the values of the object
          *  and any value set by where.
          *



From ximian at mail.berlios.de  Sat Dec  9 19:08:23 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 9 Dec 2006 19:08:23 +0100
Subject: [ydf-devel] r2249 -
	YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements
Message-ID: <200612091808.kB9I8Nne029650@sheep.berlios.de>

Author: ximian
Date: 2006-12-09 19:08:01 +0100 (Sat, 09 Dec 2006)
New Revision: 2249

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Text.php
Log:
- added new option to YDFormElement Text: dynamic 
  $elem->setDynamic();

  This will make text value disappear when user clicks the element. 
  Useful when text is a search box that has a string value like "Search here ...".

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Text.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Text.php	2006-12-09 18:02:10 UTC (rev 2248)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Text.php	2006-12-09 18:08:01 UTC (rev 2249)
@@ -51,6 +51,8 @@
             // Set the type
             $this->_type = 'text';
 
+            // Set dynamic
+            $this->_dynamic = false;
         }
 
         /**
@@ -66,6 +68,12 @@
             );
             $attribs = array_merge( $this->_attributes, $attribs );
 
+            // check dynamic
+            if ( $this->_dynamic ){
+                $attribs[ 'onfocus' ] = "if(this.value=='" . $this->_value . "'){this.value=''};";
+                $attribs[ 'onblur' ]  = "if(this.value==''){this.value='" . $this->_value . "'};";
+            }
+
             // Get the HTML
             return '<input' . YDForm::_convertToHtmlAttrib( $attribs ) . ' />';
 
@@ -73,6 +81,13 @@
 
 
         /**
+         *	This function will set dynamic content
+         */
+        function setDynamic() {
+            $this->_dynamic = true;
+        }
+
+        /**
          *	This function returns the default javascript event of this element
          */
         function getJSEvent(){ 



From ximian at mail.berlios.de  Sat Dec  9 19:16:12 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 9 Dec 2006 19:16:12 +0100
Subject: [ydf-devel] r2250 - in YDFramework2.0/trunk/YDFramework2: .
	3rdparty 3rdparty/upgrade 3rdparty/upgrade/contrib
	3rdparty/upgrade/dtools 3rdparty/upgrade/ext 3rdparty/upgrade/tests
Message-ID: <200612091816.kB9IGC0d008669@sheep.berlios.de>

Author: ximian
Date: 2006-12-09 19:13:10 +0100 (Sat, 09 Dec 2006)
New Revision: 2250

Added:
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/README
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/exceptions.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/fix.meta
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/fix.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/hiddenerrors.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.meta
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.txt
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/phprequest.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.meta
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.txt
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/_dt
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/ckavail.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/compact
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/doctests
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/listemu
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/updoc
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/array.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/base64.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/bcmath.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/ctype.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/dba.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/exotic.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/fakezlib.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/ftp.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.meta
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.txt
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/mime.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/odbc.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/old.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/openssl.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/posix.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/_listemulated
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/_runparts
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_change_key_case
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_chunk
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_combine
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_diff_assoc
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_fill
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_intersect_assoc
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_udiff_uassoc
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_walk_recursive
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/base16
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/bcmath
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/class_parents
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/file_put_contents
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/floatval
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/fmod
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/fnmatch
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/get_headers
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/gettext
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/glob
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/gzdecode
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/headers_list
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/html_entity_decode
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/http_build_query
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/is_a
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/md5_file
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/mhash
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/mime_content_type
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/scandir
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/spl_classes
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_ireplace
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_rot13
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_shuffle
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_split
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_word_count
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/stripos
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/strpbrk
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/strripos
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/substr_compare
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/uuencode
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/vprintf
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/upgrade.meta
   YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/upgrade.php
Modified:
   YDFramework2.0/trunk/YDFramework2/YDF2_init.php
Log:
- added Upgrade support. Not used by default.
  To use the upgrade pack you need to call after YDF init:  YDIncludeCompatibility();

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/README
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/README	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/README	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,500 @@
+
+PHP downwards compatibility functions
+?????????????????????????????????????
+The "upgrade.php" package implements features and functions from
+later PHP versions in pure PHP script and dynamically defines them
+at runtime.  This allows you to use said functions on outdated
+server setups with only including() a single script.  You are freed
+from wasting time with backward compatibility problems or omitting
+certain useful PHP functions or retyping workarounds then, while
+your applications remain "PHP 4.1+ COMPATIBLE" even if features of
+PHP5 were used.
+
+
+It is useful in a variety of scenarios:
+
+? If you write PHP scripts which are distributed later to a variety
+  of web servers, which may or may not run the latest PHP versions.
+
+? If your own web space providers PHP version is immemorial.
+
+? You want to use a PHP5 function, but know that it won't be
+  available elsewhere. Or you find yourself constantly writing some
+  workarounds instead of using the most useful PHP function for it.
+
+? Support of the gettext/bcmath/ftp/... extensions would make your
+  script faster and easier to maintain, but would hinder server and
+  provider independence. (See our ext/ for PHP extensions.)
+
+? If you yourself want to use a PHP application or projects, which
+  depends on features not available on your server and so breaks.
+
+? You have a sourceforge.net project homepage ;-)
+
+
+It however cannot help in other cases:
+
+? PHP5s extended object orientation language semantics aren't
+  emulated, and could never be.  You won't be able to write PHP4-
+  compatible scripts if you want or have to use them.
+
+? Newer PHP versions also sometimes change the function signatures
+  and add/allow new arguments. Because existing and core functions
+  cannot be overridden, upgradephp won't ever make them compatible
+  between versions.
+
+? PHPs safe_mode is a hurdle you either have to pay your webhoster
+  their extra fee for 'full PHP support' or make the lengthy
+  "But-how-does-this-help-security-if-there-is-no-such-Safe-Mode-
+  in-Perl/Python-enabled?"-discussion (with the dumber providers).
+  There is absolutely no safe_mode support in upgradephp, this is
+  entirely your problem.
+
+? PHP4.1 superglobals cannot be emulated for 4.0 versions.
+
+? Features which cannot be emulated therefore include: PHP5-OO,
+  superglobals, new function arguments, stream wrappers.
+
+
+Other things to note:
+
+? Speed won't suffer on up-to-date servers, because functions are
+  only emulated/deifned if they are missing (all function_exists
+  checks are built-in; you don't have to care).
+
+? Some of the functions that get defined here, are just simple
+  stubs; sometimes only there to prevent E_FATAL errors.
+
+? Emulated functions sometimes run slower than the native variant
+  would, but it generally shouldn't be slower than any workaround
+  you used for the [advanced but not widely available] functions
+  until now.
+
+? Most emulation functions leave the error reporting up to any
+  invoked parent functions (fopen, fwrite and call_user_func_array
+  for example).
+
+
+Remember that native functions will be used whereever available,
+this emulation only helps running scripts on aging PHP versions.
+
+
+
+      PEAR::PHP_Compat
+      ????????????????
+      Alternatively to the "upgradephp" package, you could also give
+      the PEAR package "PHP_Compat" (by Aidan Lister & Co.) from
+      [http://pear.php.net/] a try. It comes under the PHP license
+      and contains cleaner code in some areas (exotic array funcs and
+      PHP4.0 code).
+
+      It is more thoroughly commented and emulates PHP error messages
+      completely.  In some circumstances you could benefit from its
+      divided function definitions (each in a separate file), while it
+      is possible to reassamble everything into a single script.  You
+      could then even load it in conjunction with upgrade.php then.
+
+      Note: no code from PHP_Compat has been reused here (this is more
+      a license thing, than NIH syndrome).
+
+
+
+Usage
+?????
+Simply include("upgrade.php"); in any of your scripts, if you want
+to use some of the newer PHP4.3 or PHP5 functions like stripos() or
+so.
+
+You could additionally check the PHP_VERSION, and only include the
+emulation wrapper if you depend on features from a certain PHP
+interpreter release:
+
+  <?example
+     if (PHP_VERSION < "4.3.0") { include(".../upgrade.php"); }
+  ?>
+
+Currently following functions can be emulated:
+? gzdecode
+? ob_get_headers
+? xmlentities
+? stripos
+? strripos
+? str_ireplace
+? get_headers
+? headers_list
+? fprintf
+? vfprintf
+? str_split
+? http_build_query
+? convert_uuencode
+? convert_uudecode
+? scandir
+? idate
+? time_nanosleep
+? strpbrk
+? php_real_logo_guid
+? php_egg_logo_guid
+? get_declared_interfaces
+? array_combine
+? array_walk_recursive
+? substr_compare
+? spl_classes
+? class_parents
+? session_commit
+? dns_check_record
+? dns_get_mx
+? setrawcookie
+? file_put_contents
+? count_recursive
+? file_get_contents
+? fnmatch
+? glob
+? array_key_exists
+? array_intersect_assoc
+? array_diff_assoc
+? html_entity_decode
+? str_word_count
+? str_shuffle
+? get_include_path
+? set_include_path
+? restore_include_path
+? str_rot13
+? array_change_key_case
+? array_fill
+? array_chunk
+? md5_file
+? is_a
+? fmod
+? floatval
+? is_infinite
+? is_nan
+? is_finite
+? var_export
+? strcoll
+? diskfreespace
+? disktotalspace
+? vprintf
+? vsprintf
+? import_request_variables
+? hypot
+? log1p
+? expm1
+? sinh
+? cosh
+? tanh
+? asinh
+? acosh
+? atanh
+? mhash
+? mhash_count
+? mhash_get_hash_name
+? mhash_get_block_size
+? array_udiff_uassoc
+? array_udiff_assoc
+? array_diff_uassoc
+? array_udiff
+? array_uintersect_uassoc
+? array_uintersect_assoc
+? array_uintersect
+? array_intersect_uassoc
+? dc___exec
+? bcscale
+? bcadd
+? bcsub
+? bcmul
+? bcdiv
+? bcmod
+? bcpow
+? bcpowmod
+? bcsqrt
+? bccomp
+? bc___scaledown
+? gettext
+? gettext___plural_guess
+? ngettext
+? dngettext
+? dcngettext
+? dcgettext
+? dgettext
+? textdomain
+? bindtextdomain
+? gettext___load_mo
+? gettext___load_po
+? bind_textdomain_codeset
+? _
+? mime_content_type
+? image_type_to_mime_type
+? image_type_to_extension
+? exif_imagetype
+? array_filter
+? array_map
+? is_callable
+? array_search
+? array_reduce
+? is_scalar
+? localeconv
+? call_user_func_array
+? call_user_method_array
+? array_sum
+? constant
+? is_null
+? pathinfo
+? escapeshellarg
+? is_uploaded_file
+? move_uploaded_file
+? strncasecmp
+? wordwrap
+? php_uname
+? php_sapi_name
+? posix_mkfifo
+? posix_getcwd
+? posix_kill
+? posix_uname
+? ctype_alnum
+? ctype_alpha
+? ctype_digit
+? ctype_xdigit
+? ctype_cntrl
+? ctype_space
+? ctype_upper
+? ctype_lower
+? ctype_graph
+? ctype_punct
+? ctype_print
+? odbc_connect
+? odbc_pconnect
+? odbc_close
+? odbc_exec
+? odbc_do
+? odbc_prepare
+? odbc_execute
+? odbc_fetch_array
+? odbc_fetch_row
+? odbc_fetch_object
+? odbc_fetch_into
+? odbc_free_result
+? odbc_next_result
+? odbc_num_fields
+? odbc_num_rows
+
+On a side note: You don't have to include() this func emulation
+script yourself. Leave this to your users if they use an older PHP
+version; a note often suffices. It however may be senseful to ship
+this together with your scripts - that's also why it was released
+as Public Domain (=compatible to ALL open source licenses, including
+the GNU GPL).
+
+It is safe to extract a few function bodies/definitions out of the
+script to make a shorter version (load only the needed functions);
+but you should keep the "if (function_exists(...))" wrapper code
+always.
+(PHP_Compat makes a better source, if you really need only a few
+emulated functions.)
+
+
+Omissions
+?????????
+A few PHP features are specifically NOT implemented, and so still
+had to be taken care of in your scripts:
+
+? predefined STDIN, STDOUT and STDERR constants
+? UPLOAD_ERR_* constants (introduced with 4.2, officially 4.3)
+? ob_* (eventually possible)
+? clone (PHP5 language feature, but workaround exists in PHP_Compat)
+? ini_get_all (ingenious trick in PHP_Compat)
+
+It may be possible that a script in ext/ later adds support. Often
+PHP_Compat already provides loadable definitions of above features.
+
+
+ext/
+????
+The ext/ subdirectory in here provides a few more or less useful
+emulations for various PHP extensions or function groups.
+
+? "ext/array" provides a few exotic array diff functions (for
+  associative arrays and for using multiple callback functions)
+
+? "ext/exotic" contains some rarely needed functions, which have
+  been removed from the main file for that and other reasons
+
+? "ext/bcmath" provides the mathematical functions with arbitrary
+  precision on Unix systems, but emulation also works on top of
+  GMP or big_int
+
+? "ext/dba" allows you to use scripts written for the dba module,
+  if your interpreter only has dbm_*() functions; but only provides
+  the minimum functionality
+
+? "ext/ftp" emulates the ftp extension using only the bare socket
+  and networking functions (should work anywhere), even has some
+  features not found in the original
+
+? "ext/gettext" simulates most of what gettext/libintl provides, and
+  seems to read .mo data files correctly - plural support is however
+  weak. There is also support for .po files, but since the libintl
+  and original gettext functions don't normally read this, that's a
+  useless feature (just for fun). You save 2K by ripping it out.
+
+? "ext/mime" simulates the mime_content_type() function, either by
+  accessing PECL::fileinfo or reading and evaluating the magic.mime
+  database itself (likely slower and a bit unclean of course)
+
+
+
+dtools/
+???????
+Please run the "updoc" script once to update your PHP manual, if you
+are planning to use the upgrade.php script. Create a symlink from your
+installed multi-file PHP manual to ease using this and the "doctests"
+utility:
+
+? The "dtools/updoc" commandline script updates your local PHP
+  documentation to carry hints about emulated functions. It'll simply
+  add a small "EMU" on top of the supported functions` description
+  pages (in the line typically listing the PHP versions).
+
+? "ckavail.php" was used to check for added functions between
+   different PHP interpreter versions, purely a development script.
+
+? "dtools/doctests" greps your local PHP manual for function use
+  examples, and executes them with the given PHP interpreter and
+  the "upgrade.php" script loaded of course. This way you get live
+  tests, but also see:
+
+? "dtools/compact" creates a collapsed version of the upgrade.php
+  script (saved into contrib/)
+
+
+
+tests/
+??????
+Contains stupidly short scripts, that have been used to compare
+behaviour of the original functions to that of the emulated ones.
+
+Use the "tests/_runparts" shell script (Linux) to get all tests run
+automatically. You must specify the names of two different PHP
+interpreter versions, whose output for each test will be shown side
+by side. If you don't have two, then simply give the name of your
+only PHP (-cgi) interpreter twice or simply use "false" or "cat" as
+the second argument.
+
+
+
+contrib/
+????????
+Holds a few library scripts, which are believed to be of higher
+quality than any of the PEAR counterparts. Probably inappropriate to
+place it in this tarball, but they usefully take advantage of the
+upgrade.php provided gzdecode(). (PEARs HTTP and XML-RPC classes
+don't even know about content-coding, btw).
+
+? "contrib/http" can be used to contact Web form scripts, or PHP
+  code utilizing "ext/phprequest" more efficiently. It especially
+  supports content-coding as per RFC2616 (HTTP standard) for saving
+  a lot of bandwidth and getting answers faster.
+
+? "contrib/xmlrpc" likewise can compress output and is used to
+  access XML-RPC and IETF XML+RPC Web services. It takes advantage
+  of supported XML and EPI-XML-RPC extensions, but runs gracefully
+  (not 100% exact XML parser) without. It was also made to provide
+  downwards compatibility. Currently you shouldn't run it against
+  old and not-HTTP standards-compliant servers and clients (=avoid
+  compression unless you use it also as server or client at the
+  other side).
+
+? "contrib/hiddenerrors" shows a nice way to hide all disturbing
+  error messages from users, but keeping them available for
+  development. It is especially useful, when premature _NOTICEs or
+  _WARNINGs could garbage (XML or binary) output or if this could
+  prevent sending any further/required HTTP headers().
+
+? "contrib/fix.php" fights magic_quotes and register_globals
+  (though here it's often better to let users of outdated PHP setups
+  run into the open knife, or die() with an error message)
+
+? "contrib/phprequest" enables your PHP interpreter to receive HTTP
+  requests with "application/vnd.php.serialized" encoding (even
+  compressed) instead of the older "multipart/form-data" and the
+  more simple "application/x-www-form-urlencoded" var post formats;
+  this is faster and type-safe if you control both ends of the wire;
+  see "contrib/README.http" for hints about the upcoming "PHP-RPC"
+
+? "contrib/exceptions" provide a scheme for PHP4-compatible
+  exception management using simple wrapper calls and agreements
+
+Please also have a peek into the README files accompaning the script
+snippets distributed in this directory.
+
+
+
+Other Notes
+???????????
+? Don't care about the *.meta files everywhere. They are used in
+  other projects for plugin / include script management only and
+  have little value else.
+
+? This script doesn't reside in any CVS/SVN reposititory currently
+  because it is considered a too minor and small project.
+
+? The project homepage is <http://upgradephp.berlios.de/> and also
+  <http://freshmeat.net/p/upgradephp>.
+
+
+
+License
+???????
+Everything in here is Public Domain. There are no restrictions on how
+or where you could use it. You may redistribute it under any license
+as you wish, and you don't need to tell anyone where you got it from.
+It has absolutely no impact on the rest of YOUR project; you are free
+to include it as if you had written it yourself.
+
+You could prepend the license preamble (GNU GPL, LGPL, BSD, MPL, MSFT
+EULA, PHP, CDDL, Artistic, ...) of your choice if you want to.
+
+
+
+Author
+??????
+The current maintainer can be contacted under <milky*users?sf?net>
+
+Please drop me a line, if you found something important missing, or
+a really frustrating bug, and if you have feature wishes, or if you
+can name one of the functions that the php developers were too lazy
+to implement.
+
+
+
+ChangeLog
+?????????
+
+v13
+  - bcmath functions changed to use faster /usr/bin/dc, wrappers for GMP
+    fixed and php_big_int.so usage possible
+  - gettext_plural0 merged into old code and speed improved
+  -
+
+v12
+  - strripos() handling of positive offsets was fixed
+  - strpbrk() fixed to not return string, if nothing found
+  - php_strip_whitespace() and php_check_syntax() moved into ext/exotic
+  + ext/bcmath using /usr/bin/bc
+  + initial mhash (HMAC) implementation with MD5 and SHA1
+  + incomplete ext/odbc
+  + ext/exceptions for PHP4
+  + extremely fast but incomplete plural form handling in gettext module
+  - core script rewritten with more exhaustive comments
+
+v11
+  - shortened (whitespace- and comment-free) script was added
+  - first gettext emulation version
+
+v10
+  (unreleased)
+
+...
+  (visit the BerliOS download page and diff it yourself)
+
+v1
+  - initial release (non-public)

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/exceptions.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/exceptions.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/exceptions.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,203 @@
+<?php
+/*
+   simplistic exception handling for PHP4
+   --------------------------------------
+   
+   As you might know, PHP5 introduced exceptions, like those from Java. This
+   feature of course cannot be used for PHP4-compatible scripts, and it can
+   in no way be emulated by a functional API emulation like "upgrade.php".
+
+   To use an exception-like scheme in PHP4 we have to agree on conventions -
+   lots of. And exceptions won't look object-oriented anymore and not be
+   compliant with the PHP5 scheme - the names are in fact held incompatible
+   to avoid conflicts in the language semantics (reserved words).
+   
+
+   interfaces
+   ----------
+  
+    - class Exception 
+    - global variable $_EXCEPTION (- should better be a list of excptn objs?)
+    - _try() function
+    - _throw() function
+    - _catch() function
+
+
+   howto
+   -----
+   
+    - prefix a block of commands with _try();
+      this will initialize exception handling (evtl. resets internal vars)
+    - errors are thrown, by calling _throw() with an Exception-class derived
+      object instance as parameter, and returning immediately
+    - exceptions are "catched" in if() statements, the _catch() function
+      with a classname as parameter returns false or the $_EXCEPTION object
+    - you shouldn't use set_exception_handler(), but $_EXCEPTION="funcname";
+
+    #-- main code      
+    _try();
+    {
+       sub_call();
+    }
+    if ($e = _catch("Special_Case")) {
+       echo $e->broken_file();
+    }
+    if ($e = _catch("Exception")) {
+       echo "Something broke, I'd say.";
+    }
+    
+    #-- error-prone
+    function sub_call() {
+       // ...
+       _throw(new Exception("error",255)); return();
+    }
+
+    
+   note
+   ----
+   
+   Please don't send hatemails only because you feel the syntax is too
+   far away from PHP5s native exception handling and counter to that in
+   other languages. And the underscores in this agreement are just to
+   prevent conflicts with PHP5 constructs - this is not yet another case
+   of PHP-underscoritis ;)
+   
+   -> there has been another PHP framework which implemented exceptions
+      long before PHP5 came out; I just don't know anymore which it was
+      //@TODO: build a search engine similar to Google to find that out
+*/
+
+
+#-- base class for exceptions
+if (!class_exists("exception")) {
+   class Exception
+   {
+      #-- attributes
+      var $message = "";
+      var $code = 0;
+      var $file = NULL;
+      var $line = NULL;
+      var $backtrace = NULL;
+      
+      #-- constructor
+      function Exception($message="", $code=0) {
+      
+         #-- values
+         $this->message = $message;
+         $this->code = $code;
+         
+         #-- debugging
+         $this->backtrace = debug_backtrace();
+         array_shift($this->backtrace);
+         $this->file = @$this->backtrace[0]["file"];
+         $this->line = @$this->backtrace[0]["line"];
+      }
+      
+      #-- get_ wrappers
+      function getMessage() {
+         return($this->message);
+      }
+      function getCode() {
+         return($this->code);
+      }
+      function getFile() {
+         return($this->file);
+      }
+      function getLine() {
+         return($this->line);
+      }
+      function getTrace() {
+         return($this->backtrace);
+      }
+      function getTraceAsString() {
+         return(var_export($this->backtrace, TRUE));
+      }
+      
+      #-- output
+      function __toString() {
+         return($this->message);
+      }
+   }
+}
+
+
+
+#-- initialize exception handling for next block
+function _try()
+{
+   global $_EXCEPTION;
+
+   #-- clean up
+   if (!is_string($_EXCEPTION) || !function_exists($_EXCEPTION)) {
+      $_EXCEPTION = new Object();
+   }
+}
+
+
+#-- use for throwing errors
+function _throw($obj) {
+   global $_EXCEPTION;
+
+   #-- quick
+   if (is_string($_EXCEPTION) && function_exists($_EXCEPTION)) {
+      $_EXCEPTION($obj);
+   }
+
+   #-- what do we do if there's already an exception?
+   if ($_EXCEPTION) {
+      // ???
+      trigger_error("_throw: there is already an unhandled exception on the stack", E_USER_ERROR);
+   }
+
+   #-- generate object from error message
+   if (!is_object($obj)) {
+      $_EXCEPTION = new Exception("$obj");
+   }
+
+   #-- pass
+   $_EXCEPTION = $obj;
+
+   return(true);
+   // break 5;  (after throwing an exception, you should
+   //           exit from your current function quickly)
+}
+
+
+#-- check if exception thrown
+function &_catch($classname="Exception") {
+   global $_EXCEPTION;
+   static $e;
+
+   #-- checked for a specific error type / exception class
+   if (is_object($_EXCEPTION) && (($classname == "*") || is_a($_EXCEPTION, $classname))) {
+      $e = &$_EXCEPTION;   //@FIX: remove reference passing, seems unnecessary
+      unset($_EXCEPTION);  // this doesn't clean the global var  [but _try() does]
+   }
+   else {
+      $e = false;
+   }
+
+   #-- give out extracted exception   
+   return $e;
+}
+
+
+#-- functional additions
+if (!function_exists("debug_backtrace")) {
+   function debug_backtrace() {
+      return array();
+   }
+}
+
+
+#-- sets global state
+if (!function_exists("set_exception_handler")) {
+   // quick hack, should use a different func name
+   function set_exception_handler($func) {
+      global $_EXCEPTION;
+      $_EXCEPTION = $func;
+   }
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/fix.meta
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/fix.meta	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/fix.meta	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,7 @@
+api: PHP
+type: intercept
+title: PHP fixes
+descriptions: removes bogus magic_quotes and left over superglobals
+priority: auto
+category: library
+conflicts: strike_register_globals, strip_wonderful_slashes

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/fix.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/fix.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/fix.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,49 @@
+<?php
+/*
+   Outdated and bogus PHP settings (register_globals and magic_quotes) are
+   defended by this script, so code cannot be negatively impacted. It can
+   always be loaded as it doesn't cause problems or speed disadvantages on
+   correctly configured servers. THE "PHP.INI" SHOULD BE FIXED PREFERABLY.
+*/
+
+ #-- strike register_globals (injected variables)
+ if (ini_get("register_globals") == "1") {
+    ewiki_recursive_unset($GLOBALS, $_REQUEST);
+    ini_set("register_globals", 0);
+ }
+
+ #-- strip any \'s if magic_quotes (variable garbaging) is still enabled
+ if (ini_get("magic_quotes_gpc") && get_magic_quotes_gpc()) {
+    ewiki_recursive_stripslashes($_REQUEST);
+    ewiki_recursive_stripslashes($_GET);
+    ewiki_recursive_stripslashes($_POST);
+    ewiki_recursive_stripslashes($_COOKIE);
+    ewiki_recursive_stripslashes($_ENV);
+    ewiki_recursive_stripslashes($_SERVER);
+    ini_set("magic_quotes_gpc", 0);
+ }
+
+ #-- now that one is really dumb
+ set_magic_quotes_runtime(0);
+
+
+ #-- implementation
+ function ewiki_recursive_unset(&$TO, $FROM) {
+    foreach ($FROM as $var=>$value) {
+       if (isset($TO[$var]) && ($TO[$var]==$FROM[$var])) {
+          unset($TO[$var]);
+       }
+    }
+ }
+ function ewiki_recursive_stripslashes(&$var) {
+    if (is_array($var)) {
+       foreach ($var as $key=>$item) {
+          ewiki_recursive_stripslashes($var[$key]);
+       }
+    }
+    else {
+       $var = stripslashes($var);
+    }
+ }
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/hiddenerrors.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/hiddenerrors.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/hiddenerrors.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,49 @@
+<?php
+/*
+   The error handler provided here will feed all errors and warnings
+   into HTTP headers of the form "X-Error-NNNNN: ...", so they can't
+   disturb page output or make XML documents invalid. This allows to
+   turn on complete error_reporting() without any functionality loss
+   due to premature output.
+   You of course need a good Web browser that can easily display all
+   response headers then for developing.
+*/
+
+set_error_handler("ewiki_http_header_errors");
+ini_set("html_errors", 0);
+
+function ewiki_http_header_errors($errno, $msg, $file, $line, $lvars) {
+
+   static $error_types = array(
+      E_PARSE => "PARSE ERROR",
+      E_ERROR => "ERROR",
+      E_WARNING => "WARNING",
+      E_NOTICE => "NOTICE",
+      E_STRICT => "STRICT",
+      E_USER_ERROR => "USER ERROR",
+      E_USER_WARNING => "USER WARNING",
+      E_USER_NOTICE => "USER NOTICE",
+   );
+   ($errtype = $error_types[$errno]) or ($errtype = "UNDEF ERROR");
+   
+   #-- check for @ and disabled errors
+   $emask = get_cfg_var("error_reporting");
+   if (! ($emask & $errno)) {
+      return;
+   }
+
+   #-- output
+   $msg = strtr($msg, "\r\n\t\f", "    ");
+   $msg = "$errtype: $msg in $file, line #$line";
+   if (headers_sent()) {
+      print "\n<!--<div class=\"php-error\">$msg</div>-->\n";
+   }
+   else {
+      $no = crc32($msg);
+      $no = ($no & 0xFFFF) ^ ($no >> 16);
+      header("X-Error-$no: $msg");
+      if ($errno == E_FATAL) { header("Status: 500 Something bad happened"); }
+   }
+}
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.meta
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.meta	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.meta	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,9 @@
+api: PHP
+type: functions
+category: library
+priority: optional
+provides: http-request
+title: HTTP requests
+description: implements HTTP protocol, various request methods supported
+url: http://freshmeat.net/p/upgradephp
+version: 11.3

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,623 @@
+<?php
+/*
+   This snippet implements HTTP queries, and allows for most request
+   methods, content types and encodings. It is useful for contacting
+   scripts made to serve HTML forms.
+    - does neither depend upon wget or curl, nor any other extension
+    - you can add ->$params (form variables) on the fly, it's a hash
+    - if the initial URL contains a query string, the vars will be
+      extracted first
+    - set the ->$enc very carefully, because many CGI apps and HTTP
+      servers can't deal with it (else "gzip" and "deflate" are nice)
+    - there are abbreviations for the content ->$type values (namely
+      "form" , "url" and "php")
+    - user:password@ pairs may be included in the initially given URL
+    - headers always get normalized to "Studly-Caps"
+    - won't support keep-alive connections
+    - for PUT and other methods, the ->$params var may just hold the
+      request body
+    - files can be added to the ->params array as hash with specially
+      named fields: "content"/"data", and "filename"/"name" , "type"
+    - you can add authentication information using the standard notation
+      "http://user:passw at www.example.com/..." for ->$url and ->$proxy
+
+   A response object will have a ->$content field, ->$headers[] and
+   ->len, ->type attributes as well. You could also ->decode() the
+   body, if it is app/vnd.php.serialized or app/x-www-form-urlencoded.
+   
+   Public Domain (use freely, transform into any other license, like
+   LGPL, BSD, MPL, ...; but if you change this into GPL please be so
+   kind and leave your users a hint where to find the free version).
+*/
+
+
+#-- request objects
+class http_request {
+
+   var $method = "GET";
+   var $proto = "HTTP/1.1";
+   var $url = "";
+   var $params = array();   // URL/form post vars, or single request body str
+   var $headers = array();
+   var $cookies = array();
+   var $type = "url";       // content-type, abbrv. for x-www-form-...
+   var $enc = false;        // "gzip" or "deflate"
+   var $error="", $io_err=0, $io_err_s="";
+   var $active_client = 1;  // enables redirect-following
+   var $redirects = 3;
+   var $proxy = false;      // set to "http://host:NN/"
+   var $timeout = 15;
+
+
+   #-- constructor
+   function http_request($method="GET", $url="", $params=NULL) {
+      $this->headers["User-Agent"] = "http_query/17.2 {$GLOBALS[ewiki_config][ua]}";
+      $this->headers["Accept"] = "text/html, application/xml;q=0.9, text/xml;q=0.7, xml/*;q=0.6, text/plain;q=0.5, text/*;q=0.1, image/png;q=0.8, image/*;q=0.4, */*+xml;q=0.3; application/x-msword;q=0.001, */*;q=0.075";
+      $this->headers["Accept-Language"] = "en, eo, es;q=0.2, fr;q=0.1, nl;q=0.1, de;q=0.1";
+      $this->headers["Accept-Charset"] = "iso-8859-1, utf-8";
+      $this->headers["Accept-Feature"] = "textonly, tables, !tcpa, !javascript, !activex, !graphic";
+      $this->headers["Accept-Encoding"] = "deflate, gzip, compress, x-gzip, x-bzip2";
+      //$this->headers["Referer"] = '$google';
+      $this->headers["TE"] = "identity, chunked, binary, base64";
+      $this->headers["Connection"] = "close";
+      //$this->headers["Content-Type"] = & $this->type;
+      if (isset($params)) {
+         $this->params = $params;
+      }
+      if (strpos($method, "://")) {
+         $url = $method;  # glue for incompat PEAR::Http_Request
+         $method = "GET";
+      }
+      $this->method($method);
+      $this->setURL($url);
+   }
+
+
+   #-- sets request method
+   function method($str = "GET") {
+      $this->method = $str;
+   }
+
+   #-- special headers
+   function setcookie($str="name=value", $add="") {
+      $this->cookies[strtok($str,"=")] = strtok("\000").$add;
+   }
+
+
+   #-- deciphers URL into server+path and query string
+   function setURL($url) {
+      if ($this->method == "GET") {
+         $this->url = strtok($url, "?");
+         if ($uu = strtok("\000")) {
+            $this->setQueryString($uu);
+         }
+      }
+      else {
+         $this->url = $url;
+      }
+   }
+   
+   
+   #-- decodes a query strings vars into the $params hash
+   function setQueryString($qs) {
+      $qs = ltrim($qs, "?");
+      parse_str($qs, $this->params);
+   }
+
+
+   #-- returns params as querystring for GET requests
+   function getQueryString() {
+      $qs = "";
+      if (function_exists("http_build_query")) {
+         $qs = http_build_query($this->params);
+      }
+      else {
+         foreach ($this->params as $n=>$v) {
+            $qs .= "&" . urlencode($n) . "=" . urlencode($v);
+         }
+         $qs = substr($qs, 1);
+      }
+      return($qs);
+   }
+
+
+   #-- transforms $params into request body
+   function pack(&$path) {
+      $m = strtoupper($this->method);
+
+      #-- GET, HEAD
+      if (($m == "GET") || ($m == "HEAD")) {
+         $BODY = "";
+         $path .= (strpos($path, "?") ? "&" : "?") . $this->getQueryString();
+      }
+
+      #-- POST
+      elseif (($m == "POST") && is_array($this->params)) {
+
+         #-- known encoding types
+         $type = $this->type($this->type, 0);
+         if ($type == "url") {
+            $BODY = $this->getQueryString($prep="");
+         }
+         elseif ($type == "php") {
+            $BODY = serialize($this->params);
+         }
+         elseif ($type == "form") {
+            // boundary doesn't need checking, unique enough
+            $bnd = "snip-".dechex(time())."-".md5(serialize($this->params))
+                 . "-".dechex(rand())."-snap";
+            $BODY = "";
+            foreach ($this->params as $i=>$v) {
+               $ct = "text/plain";
+               $inj = "";
+               if (is_array($v)) {
+                  ($ct = $v["ct"].$v["type"].$v["content-type"]) || ($ct = "application/octet-stream");
+                  $inj = ' filename="' . urlencode($v["name"].$v["file"].$v["filename"]) . '"';
+                  $v = $v["data"].$v["content"].$v["body"];
+               }
+               $BODY .= "--$bnd\015\012"
+                     . "Content-Disposition: form-data; name=\"".urlencode($i)."\"$inj\015\012"
+                     . "Content-Type: $ct\015\012"
+                     . "Content-Length: " . strlen($v) . "\015\012"
+                     . "\015\012$v\015\012";
+            }
+            $BODY .= "--$bnd--\015\012";
+            $ct = $this->type("form") . "; boundary=$bnd";
+         }
+         #-- ignore
+         else {
+            $this->error = "unsupported POST encoding";
+          // return(false);
+            $BODY = & $this->params;
+         }
+
+         $this->headers["Content-Type"] = isset($ct) ? $ct : $this->type($type, 1);
+      }
+
+      #-- PUT, POST, PUSH, P*
+      elseif ($m[0] == "P") {
+         $BODY = & $this->$params;
+      }
+
+      #-- ERROR (but don't complain)
+      else {
+         $this->error = "unsupported request method '{$this->method}'";
+       //  return(false);
+         $BODY = & $this->params;
+      }
+
+      return($BODY);
+   }
+
+
+   #-- converts content-type strings from/to shortened nick
+   function type($str, $long=1) {
+      $trans = array(
+         "form" => "multipart/form-data",
+         "url" => "application/x-www-form-urlencoded",
+         "php" => "application/vnd.php.serialized",
+      );
+      $trans["multi"] = &$trans["form"];
+      if ($long) {
+         $new = $trans[$str];
+      }
+      else {
+         $new = array_search($str, $trans);
+      }
+      return( $new ? $new : $str );
+   }
+
+
+   #-- initiate the configured HTTP request ------------------------------
+   function go($force=0, $asis=0) {
+
+      #-- prepare parts
+      $url = $this->prepare_url();
+      if (!$url && !$force) { return; }
+      $BODY = $this->body($url);
+      if (($BODY===false) && !$force) { return; }
+      $HEAD = $this->head($url);
+
+      #-- open socket
+      if (!$this->connect($url)) {
+         return;
+      }
+
+      #-- send request data
+      fwrite($this->socket, $HEAD);
+      fwrite($this->socket, $BODY);
+      $HEAD = false;
+      $BODY = false;
+
+      #-- read response, end connection
+      while (!feof($this->socket) && (strlen($DATA) <= 1<<22)) {
+         $DATA .= fread($this->socket, 32<<10);
+      }
+      fclose($this->socket);
+      unset($this->socket);
+
+      #-- for raw http pings
+      if ($asis) { 
+         return($DATA);
+      }
+
+      #-- decode response
+      $r = new http_response();
+      $r->from($DATA);        // should auto-unset $DATA
+
+      #-- handle redirects
+      if ($this->active_client) {
+         $this->auto_actions($r);
+      }
+
+      #-- fin      
+      return($r);
+   }
+
+   #-- alias
+   function start($a=0, $b=0) { 
+      return $this->go($a, $b);
+   }
+   
+   
+   #-- creates socket connection
+   function connect(&$url) {
+      if ((isset($this->socket) and !feof($this->socket))
+      or ($this->socket = fsockopen($url["host"], $url["port"], $this->io_err, $this->io_err_s, $this->timeout))) {
+         socket_set_blocking($this->socket, true);
+         socket_set_timeout($this->socket, $this->timeout, 555);
+         return(true);
+      }
+      else {
+         $this->error = "no socket/connection";
+         return(false);
+      }
+   }
+
+
+   #-- separate URL into pieces, prepare special headers
+   function prepare_url() {
+      $this->setURL($this->url);
+      if (!$this->proxy) {
+         $url = parse_url($this->url);
+         if (strtolower($url["scheme"]) != "http") {
+            $this->error = "unsupported protocol/scheme";
+            return(false);
+         }
+         if (!$url["host"]) { return; }
+         if (!$url["port"]) { $url["port"] = 80; }
+         if (!$url["path"]) { $url["path"] = "/"; }
+         if ($url["query"]) { $url["path"] .= "?" . $url["query"]; }
+         $proxy = "";
+      }
+      else {
+         $url = parse_url($this->proxy);
+         $url["path"] = $this->url;
+         $proxy = "Proxy-";
+         $this->headers["Proxy-Connection"] = $this->headers["Connection"];
+      }
+
+      #-- inj auth headers
+      if ($url["user"] || $url["pass"]) {
+         $this->headers[$proxy."Authorization"] = "Basic " . base64_encode("$url[user]:$url[pass]");
+      }
+      
+      return($url);
+   }
+
+
+   #-- generates request body (if any), must be called before ->head()
+   function body(&$url) {
+
+      #-- encoding of variable $params as request body (according to reqmethod)
+      $BODY = $this->pack($url["path"]);
+      if ($BODY === false) {
+         return false;
+      }
+      elseif ($len = strlen($BODY)) {
+         $this->headers["Content-Length"] = $len;
+      }
+      $enc_funcs = array("gzip"=>"gzencode", "deflate"=>"gzinflate", "bzip2"=>"bzcompress", "x-bzip2"=>"bzcompress", "compress"=>"gzcompress");
+      if ((strlen($BODY) >= 1024) && ($f = $enc_funcs[$this->enc]) && function_exists($f)) {
+         $BODY = $f($BODY);
+         $this->headers["Content-Encoding"] = $this->enc;
+         $this->headers["Content-Length"] = strlen($BODY);
+      }
+      return($BODY);
+   }
+
+
+   #-- generates request head part
+   function head(&$url) {
+   
+      #-- inject cookie header (if any)
+      if ($this->cookies) {
+         $c = "";
+         foreach ($this->cookies as $i=>$v) {
+            $c .= "; " . urlencode($i) . "=" . urlencode($v);
+         }
+         $this->headers["Cookie"] = substr($c, 2);
+         $this->headers["Cookie2"] = '$Version="1"';
+      }
+      
+      #-- request head
+      $CRLF = "\015\012";
+      $HEAD  = "{$this->method} {$url[path]} {$this->proto}$CRLF";
+      $HEAD .= "Host: {$url[host]}$CRLF";
+      foreach ($this->headers as $h=>$v) {
+         $HEAD .= trim($h) . ": " . strtr(trim($v), "\n", " ") . $CRLF;
+      }
+      $HEAD .= $CRLF;
+      return($HEAD);
+   }
+
+   #-- perform some things automatically (redirects)
+   function auto_actions(&$r) {
+
+      #-- behaviour table
+      static $bhv = array(
+         "failure" => "204,300,304,305,306",
+         "clean_::POST" => "300,301,302,303,307",
+         "clean_::PUT" => "300,301,302,303,307",
+         "clean_::GET" => "300",  // $params:=undef
+         "GET_::POST" => "303",
+         "GET_::PUT" => "303",    // downgrade $method:=GET
+      );
+   
+      #-- failure
+      if (strstr($this->behaviour_table["failure"], $r->status)) {
+         return;
+      }
+
+      #-- HTTP redirects
+      if (($pri_url=$r->headers["Location"]) || ($pri_url=$r->headers["Uri"])) {
+
+         if ((($this->redirects--) >= 0) && ($r->status >= 300) && ($r->status < 400)) {
+            $m = strtoupper($this->method);
+            if (strstr($this->behaviour_table["clean_::$m"], $r->status)) {
+               unset($this->params);
+            }
+            if (strstr($this->behaviour_table["GET_::$m"], $r->status)) {
+               $this->method("GET");
+            }
+            $this->setURL($pri_url);
+            $this->go();
+         }
+      }
+   }
+   
+   #-- aliases for compatiblity to PEAR::HTTP_Request
+   function sendRequest() {
+      return $this->go();
+   }
+   function setBasicAuth($user, $pw) {
+      $this->url = preg_replace("#//(.+?@)?#", "//$user@$pw", $this->url);
+   }
+   function setMethod($m) {
+      $this->method($m);
+   }
+   function setProxy($host, $port=8080, $user="", $pw="") {
+      $auth = ($pw ? "$user:$pw@" : ($user ? "$user@" : ""));
+      $this->proxy = "http://$auth$server:$port";
+   }
+   function addHeader($h, $v) {
+      $this->headers[$h] = $v;
+   }
+   function getResponseStatus() {
+      $this->headers[$h] = $v;
+   }
+}
+class http_query extends http_request {
+   /* this is just an alias */
+}
+
+
+
+
+#-- every query result will be encoded in such an object --------------------
+class http_response {
+
+   var $status = 520;
+   var $status_str = "";
+   var $headers_str = "";
+   var $headers = array();
+   var $len = 0;
+   var $type = "message/x-raw";
+   var $content = "";
+   
+   
+   function http_response() {
+   }
+   
+
+   #-- fill object from given HTTP response BLOB   
+   function from(&$SRC) {
+      $this->breakHeaders($SRC);  // split data into body + headers
+      $SRC = false;
+      $this->decodeHeaders();     // normalize header names
+      $this->headerMeta();
+      $this->decodeTransferEncodings();    // chunked
+      $this->decodeContentEncodings();     // gzip, deflate
+      $this->len = strlen($this->content);
+   }
+
+
+   #-- separates headers block from response body part
+   function breakHeaders(&$DATA) {
+      $l = strpos($DATA, "\012\015\012"); $skip = 3;
+      $r = strpos($DATA, "\012\012");
+      if ($r && ($r<$l)) { $l = $r; $skip = 2; }
+      if (!$l) { $l = strlen($DATA); }
+      $this->headers_str = rtrim(substr($DATA, 0, $l), "\015");
+      $this->content = substr($DATA, $l + $skip);
+      $this->body = & $this->content;
+      $this->data = & $this->content;  // aliases
+      $this->ct = & $this->type;
+   }
+
+
+   #-- splits up the $headers_str into an array and normalizes header names
+   function decodeHeaders() {
+
+      #-- normalize linebreaks
+      $str = & $this->headers_str;
+//      $str = str_replace("\n ", " ", $str);
+      $str = str_replace("\r", "", $str);
+      
+      #-- strip headline
+      $nl = strpos($str, "\n") + 1;
+      $this->proto = strtok(substr($str, 0, $nl), " ");
+      $this->status = (int) strtok(" ");
+      $this->status_str = strtok("\000\r\n");
+      if ($this->status == 100) {
+         $this->full_duplex = 1;
+      }
+
+      #-- go through lines, split name:value pairs
+      foreach (explode("\n", substr($str, $nl)) as $line) {
+
+         $i = trim(strtok($line, ":"));
+         $v = trim(strtok("\000"));
+
+         #-- normalize name look&feel
+         $i = strtr(ucwords(strtolower(strtr($i, "-", " "))), " ", "-");
+
+         #-- add to, if key exists
+         if (!empty($this->headers[$i])) {
+            $this->headers[$i] .= ", ".$v;
+         }
+         else {
+            $this->headers[$i] = $v;
+         }
+
+      }
+   }
+
+
+   #-- extract interesting values
+   function headerMeta() {
+      $this->len = strlen($this->content);
+      $this->type = trim(strtok(strtolower($this->headers["Content-Type"]), ";"));
+   }
+   
+
+   #-- strip any content transformation
+   function decodeTransferEncodings() {
+      $enc = trim(strtok(strtolower($this->headers["Transfer-Encoding"]), ",;"));
+      if ($enc) {
+         switch ($enc) {
+            case "chunked":
+               $this->decodeChunkedEncoding();
+               break;
+            case "base64":
+               $this->content = base64_decode($this->content);
+               $this->len = strlen($this->content);
+               break;
+            case "identity": case "binary":
+            case "7bit": case "8bit":
+               break;
+            default:
+               trigger_error("http_response::decodeTransferEncodings: unkown TE of '$enc'\n", E_WARNING);
+         }
+      }
+   }
+
+
+   #-- scripts on HTTP/1.1 servers may send fragmented response
+   function decodeChunkedEncoding() {
+
+      $data = "";	# decoded data
+      $p = 0;		# current string position
+
+      while ($p < strlen($this->content)) {
+
+         #-- read len token
+         $n = strtok(substr($this->content, $p, 20), "\n");
+         $p += strlen($n)+1;
+
+         #-- make integer
+         $n = 0 + (int) (trim($n));
+         if (!$n) {
+            break;
+         }
+
+         #-- read data
+         $data .= substr($this->content, $p, $n);
+         $p += $n;
+      }
+
+      $this->content = $data;
+      unset($data);
+      $this->len = strlen($this->content);
+   }
+
+
+   #-- uncompress response body
+   function decodeContentEncodings() {
+      $enc = trim(strtok(strtolower($this->headers["Content-Encoding"]), ";,"));
+      $dat = &$this->content;
+      if ($enc == "deflate") {
+         $dat = gzinflate($dat);
+      }
+      elseif (($enc == "gzip") || ($enc == "x-gzip")) {
+         if (function_exists("gzdecode")) {
+            $dat = gzdecode($dat);
+         }
+         else {
+            $dat = gzinflate(substr($dat, 10, strlen($dat)-18));
+         }
+      }
+      elseif ($enc == "compress") {
+         $dat = gzuncompress($dat);
+      }
+      elseif (($enc == "x-bzip2") || ($enc == "bzip2")) {
+         if (function_exists("bzdecompress")) {
+            $dat = bzdecompress($dat);
+         }
+         else trigger_error("http_response::decodeContentEncoding: bzip2 decoding isn't supported with this PHP interpreter version", E_WARNING);
+      }
+      $this->len = strlen($this->content);
+   }
+
+
+   #-- can handle special content-types (multipart, serialized, form-data)
+   function decode() {
+      $t = http_request::type($this->type, 0);
+      if ($t == "php") {
+         return(unserialize($this->content));
+      }
+      elseif ($t == "url") {
+         parse_str($this->content, $r);
+         return($r);
+      }
+      elseif ($t == "form") {
+         // oh, not yet exactly
+      }
+   }
+
+   #-- aliases for compatiblity to PEAR::HTTP_Request
+   function getResponseBody() {
+      return $this->content;
+   }
+   function getResponseStatus() {
+      return $this->status;
+   }
+   function getResponseCode() {
+      return $this->status;
+   }
+   function getResponseHeader($i=NULL) {
+      if (!isset($i)) {
+         return $this->headers;
+      }
+      $i = strtolower($i);
+      foreach ($this->headers as $h=>$v) {
+         if (strtolower($h)==$i) {
+            return $v;
+         }
+      }
+   }
+}
+
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.txt
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.txt	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/http.txt	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,270 @@
+
+Note: This class and file will be renamed into "xhttp..." in the near
+feature, to prevent clashes with the old PEAR class.
+
+http.php
+????????
+This script provides the easy to use "http_request" class ("http_query"
+is an alias). You can contact forms or simply retrieve files with it.
+Unlike fopen_wrappers, you get the response headers alongside and the
+received file will be decompressed on-the-fly (it should also be faster
+due to more supported compression methods).
+
+There are some options, you can set before starting the request. Most
+important aspect is, that you can add form ->params[] one after the
+other for GET and POST requests. You can also use a proxy or include
+authentication passwords in the initially given url, and of course
+inject or override a few ->headers[] when it makes sense.
+
+
+
+usage
+?????
+It is really easy, you only must take care to always give the method
+parameter before the URL ("GET" or "POST" in most cases), look at
+the following:
+
+  <?example
+
+      #-- prepare
+      $query = new http_request("GET", "http://example.com/form.php");
+      $query->params["q"] = "search-this-...";
+
+      #-- do request
+      $result = $query->go();
+
+      #-- use result
+      if ($result && ($result->status == 200)) {
+         echo $result->content;
+      }
+  ?>
+
+Note, that we could have included the "q" parameter simply appended to
+the URL in such simple cases ("http://example.com/form.php?q=search-...").
+
+You can also do "POST" requests (normal for forms), but that you than
+must decide about the encoding format. There are two for POST requests,
+the default is always urlencoding (like with GET requests) with
+  <?example 
+      $query->type = "url";    // corresponds to "app/x-www-form-urlencoded"
+  ?>
+but many bigger forms however require the MIME type for form-data:
+  <?example 
+      $query->type = "form";    // translates to "multipart/form-data"
+  ?>
+You see, there are easy to remember abbreviations for this.
+
+The form variables you want to transport are simply appended to the URL
+for GETs or "url"-coded requests, but you could use the $query->params[]
+array also here.
+
+If you do a "POST" request, you do likewise; or you could also just assign
+the $query->params a string blob to transfer as content (if the remote app
+can deal with it or expects that, or you already have encoded eveything
+into a valid form request).
+If you just want to add upload-files to a "POST" request, then do this as
+follows:
+  <?example
+      $query->params["fileformname"] = array(
+         "filename" => "original-name.zip",
+         "type" => "application/octet-stream",
+         "content" => "$READ_FROM_FILE_DATA...",
+      );
+  // or
+      $query->params["2nd_file"] = array(
+         "ct" => "x.ml/my-format",
+         "name" => "../../where/is/it/from.txt",
+         "data" => file_get_contents(".../from.txt"),
+      );
+  ?>
+"body" is a third alias for the "content" field here. If you don't set
+the "type" or "ct" flag it will get "application/octet-stream" per default
+(this is a good default). You could simply load the "ext/mime" script to
+have the best possible MIME type here.
+
+
+
+     start an request
+     ????????????????
+     Use the ->go() method to start a prepared HTTP request. The only
+     alias existing today is ->start(); simply derive or edit this class
+     to add your preferred name for this likewise (->do() cannot be used
+     as it is a PHP reserved word, sorry ;)
+
+     There are two options to ->go(), the first $force will override a few
+     problems, and with the second ($asis) set to 1 or true, you won't get
+     a result object, but the plain HTTP response blob (headers and response
+     body as one large string variable).
+
+
+
+     authentication
+     ??????????????
+     If the remote site requires authentification, you would simply give
+     this within the URL:
+      <?example
+         $query = new http_request("GET", "http://user:passw at example.com/...");
+           // or later:
+         $query->setURL("http://username:pw2 at server.../")
+           // or even:
+         $query->url = "http://name:password at localhost/form.php";
+      ?>
+
+
+
+     proxy
+     ?????
+     You can also acccess a form or remote file using a proxy server easily,
+     just follow this:
+      <?example
+         $query = new http_request("PUT", "...");
+         $query->proxy = "http://servername.proxy.org:3219/";
+           // ...
+         $result = $query->go();
+      ?>
+     You could also give a password or username for your proxy server, if
+     you need it (works the same as for above).
+
+
+
+
+reponses
+????????
+The $result value from the above examples should normally be an object,
+it will be a scalar (false) only if something went really wrong.
+
+It will have at least a ->status field, which is typically 200 for
+succeeded requests. Everything above 500 means an server error, values
+above 400 a transport and request error (= we did something wrong) and
+a 300 response status means a redirection was issued.
+
+For fulfilled requests you can access the returned file/data simply as
+"$result->content" or "$result->body" or even "$result->data" (two aliases
+again).
+
+You will also have a "$result->headers[]" array, which will hold all
+response HTTP headers in normalized form. Typically this means:
+  <?example
+      echo $result->headers["Content-Type"] . "\n";
+      echo $result->headers["Date"] . "\n";
+      echo $result->headers["Last-Modified"] . "\n";
+      echo $result->headers["Content-Length"] . "\n";
+      echo $result->headers["Etag"] . "\n";    // (beware of the lcased "t" !)
+      echo $result->headers["Content-Encoding"] . "\n";
+      ...
+      print_r($result->headers);  // much better here ;)
+  ?>
+[[ Elsewhere the field names would be completely lowercased or fully
+uppercase, we have CamelCase here, with the hyphens still in of course. ]]
+
+Please note, that a known "Content-Encoding" was already removed from the
+received ->content. And there is also a more correct "$result->len" and a
+"$result->type" shorthand.
+
+A few response types are understand as application data, and in this case
+you can call the $result->decode() function and get a PHP variable/array
+from the body.
+
+
+
+     redirects
+     ?????????
+     If you expect HTTP redirects (->status codes from 300 till 375), then
+     the default settings are ok for you, many will automatically be catched
+     and the form data or file request will succeed at the replied URL.
+
+     To tack/catch these cases yourself, simply disable that behaviour with:
+      <?example
+         $query->active_client = 0;
+      ?>
+
+
+
+PHP-RPC
+???????
+Not yet!  But this is probably what it will look like:
+
+  If you control both ends of the Wire, you shouldn't use the slow and
+  buggy (not everything works with everything else) XML-RPC protocol for
+  calling remote functions, but instead use the high speed PHP serialize
+  encoding to transfer data.
+
+  The "http_request" class can natively encode values as such. The MIME
+  type "application/vnd.php.serialized" has been registered explicitely
+  for this purpose (as alternative to "multipart/form-data" encoding,
+  and it is type-safe as opposed to the "/x-www-form-urlencoded" format).
+  Perl and JS implementations exist (probably also one for Python), so
+  plattform-independence should be given.
+
+  PHP-RPC shall inherit (not yet negotiated) some structure from the old
+  XML-RPC protocol. That is, a few names are identical. If you start an
+  request you would therefore do following:
+
+<?php
+
+    function phprpc($server, $function, $args=array()) {
+
+       #-- init
+       $query = new http_request("POST", $server);
+
+       #-- set content
+       $query->type = "php";  // here corresponds to "app/vnd.php.serialized"
+       $query->params
+         = array(
+              "method" => $function,
+              "params" => $args,
+           );
+
+       #-- start
+       $result = $query->go();
+       if ($result && ($result->status == 200)) {
+
+          $r = $result->decode();
+          if ($good = $r["result"]) {
+             return($good);
+          }
+          return($r);
+       }
+    }
+?>
+
+  You of course need a server part to make use of this. Simply try the
+  "ext/phprequest", in which case you would do the following:
+
+<?php
+
+   include("ext/phprequest.php")
+   if (count($_POST) && ($method = $_POST["method"])
+   and ($params = $_POST["params"]))
+   {
+      #-- call known/registered functions
+      $method = strtolower($method);
+      if ($method == "my.func") {
+         $r = call_user_func_array("my_func", $params);
+      }
+      elseif ($method == "system.time") {
+         $r = time();
+      }
+      elseif ($method == "sytem.listmethods") {
+         $r = get_defined_functions();
+         $r = $r["user"];
+      }
+
+      #-- if succeeded
+      if ($r) { 
+         header("Content-Type: application/vnd.php.serialized");
+         header("Content-Encoding: deflate");
+         $r = array("result" => $r);
+         die(gzdeflate(serialize($r));
+      }
+   }
+
+   #-- your normal script can go on here
+   //...
+?>
+
+  You can inject this into anywhere as it only engages, if a PHP-RPC
+  request was detected. 
+
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/phprequest.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/phprequest.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/phprequest.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,52 @@
+<?php
+/*
+   Allows http "POST" and "PUSH" requests with a Content-Type of
+   "application/vnd.php.serialized". This isn't used in the wild.
+*/
+
+if (empty($_POST)
+and (strtoupper($_SERVER["REQUEST_METHOD"][0]) == "P")
+and (strtolower(trim(strtok($_SERVER["CONTENT_TYPE"], ";,(")))
+     == "application/vnd.php.serialized"))   
+{
+   #-- search for bare request body
+   if (isset($GLOBALS["HTTP_RAW_POST_DATA"])) {
+      $_POST = $GLOBALS["HTTP_RAW_POST_DATA"];
+   }
+   else {
+      $f = fopen("php://input", "rb");
+      $_POST = fread($f, 1<<22);
+      fclose($f);
+   }
+
+   #-- uncompress and decode, if something found
+   if ($_POST) {
+
+      #-- strip known/supported encodings
+      $enc = trim(strtok(strtolower($_SERVER["HTTP_CONTENT_ENCODING"]), ",;"));
+      if ($enc == "deflate") {
+         $_POST = gzinflate($_POST);
+      }
+      elseif ($enc == "compress") {
+         $_POST = gzuncompress($_POST);
+      }
+      elseif ($enc == "gzip") {
+         $_POST = function_exists("gzdecode") ? gzdecode($_POST) : gzinflate(substr($_POST, 10, strlen($_POST) - 18));
+      }
+      elseif (($enc == "x-bzip2") or ($enc == "bzip2")) {
+         $_POST = function_exists("bzdecompress") ? bzdecompress($_POST) : NULL;
+      }
+
+      #-- decipher
+      if ($_POST) {
+         $_POST = unserialize($_POST);
+      }
+      #-- merge
+      if ($_POST) {
+         $_REQUEST = array_merge($_REQUEST, $_POST);
+      }
+
+   }
+}
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.meta
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.meta	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.meta	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,9 @@
+api: PHP
+type: api
+provides: rpc, xml-rpc
+version: 0.3.10
+category: library
+priority: optional
+title: XML-RPC client and server
+description: serves remote procedure calls
+homepage: http://freshmeat.net/p/upgradephp

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,1148 @@
+<?php define("XMLRPC_VERSION", "0.3.10");
+#
+#  Supports XML-RPC (text/xml) and XML+RPC (application/rpc+xml) compressed,
+#  and can be used as client or server interface. Works without XMLRPC and
+#  XML extensions, but utilizes them for optimal speed whenever available.
+#
+#   XXXX   XXXX MMM     MMM LLL              RRRRRRR   PPPPPPP    CCCCCCC
+#    XXXX XXXX  MMMM   MMMM LLL      +++     RRRRRRRR  PPPPPPPP  CCCCCCCCC
+#     XXXXXXX   MMMMM MMMMM LLL      +++     RRR   RRR PPP   PPP CCC    CCC
+#      XXXXX    MMMMMMMMMMM LLL  +++++++++++ RRR   RRR PPP   PPP CCC
+#       XXX     MMM MMM MMM LLL  +++++++++++ RRRRRRRR  PPPPPPPP  CCC
+#      XXXXX    MMM  M  MMM LLL      +++     RRRRRRR   PPPPPPP   CCC
+#     XXXXXXX   MMM     MMM LLL      +++     RRR  RRR  PPP       CCC    CCC
+#    XXXX XXXX  MMM     MMM LLLLLLL          RRR   RRR PPP       CCCCCCCCC
+#   XXXX   XXXX MMM     MMM LLLLLLL          RRR   RRR PPP        CCCCCCC
+#
+#  This is Public Domain. (c) 2004 WhoEver wants to. [milky*erphesfurt?de]
+
+
+#-- config
+define("XMLRPC_PLUS", 0);        # use XML+RPC per default
+define("XMLRPC_AUTO_TYPES", 0);  # detect base64+datetime strings and automatically generate the according xmlrpc object representations then
+define("XMLRPC_AUTO_UTF8", 1);   # de/convert anything from and to UTF-8 automatically - if yourscripts use Latin1 natively, but the RPC server expects/sends UTF-8
+define("XMLRPC_CHARSET", "utf-8");  # used in responses and requests
+define("XMLRPC_AUTODISCOVERY", 0);  # "connections" automatically create methods
+define("XMLRPC_FAST", 1);        # use PHPs XML-RPC extension where possible
+define("XMLRPC_OO", 1);          # return XML-RPC/HTTP errors as objects
+define("XMLRPC_DEBUG", 0);       # output error hints, write /tmp dumps - set this to 1, 2 or 3
+
+#-- _server() settings
+define("XMLRPC_LOG", "/tmp/xmlrpc.".@$_SERVER["SERVER_NAME"].".log");
+
+#-- general data
+#  (don't change the following, most are auto-configured values)
+define("XMLRPC_UA", "xml+rpc/".XMLRPC_VERSION." (PHP/".PHP_VERSION."; ".PHP_OS.")");
+define("XMLRPC_MIME_NEW", "application/rpc+xml");
+define("XMLRPC_MIME_OLD", "text/xml");
+define("XMLRPC_MIME", XMLRPC_MIME_OLD);
+define("XMLRPC_ACCEPT", XMLRPC_MIME_NEW.", ".XMLRPC_MIME_OLD."; q=0.5");
+define("XMLRPC_EPI", function_exists("xmlrpc_decode_request"));
+
+#-- init
+error_reporting(0);
+if (isset($_SERVER["HTTP_CONTENT_TYPE"]) && empty($_SERVER["CONTENT_TYPE"])) {
+   $_SERVER["CONTENT_TYPE"] = $_SERVER["HTTP_CONTENT_TYPE"];   // older CGI implementations
+}
+
+
+
+
+############################################################################
+#                                                                          #
+#  client part                                                             #
+#                                                                          #
+############################################################################
+
+
+#-- Issue a request, call can take any number of arguments.
+#     $result = xmlrpc("http://example.com/RPC2/", "method1", $arg1 ...);
+#     $result = xmlrpc("xml+rpc://here.org/RPC3/", "ns.function", ...);
+#   Results automatically have <datetime> values converted into Unix
+#   timestamps and <base64> unpacked into strings.
+#
+function xmlrpc($server, $method=NULL /*, ... */) {
+   if ($method) {
+      $params = func_get_args();
+      shift($params); shift($params);
+      return
+        xmlrpc_request($server, $method, $params);
+   }
+   else {
+      return
+        new xmlrpc_connection($server);
+   }
+}
+
+
+
+#--  Generate and send request, decode response.
+function xmlrpc_request($url, $method, $params=array(), $plus=XMLRPC_PLUS, $gzip=0) {
+   global $xmlrpc_response_headers, $xmlrpc_error;
+   
+   #-- init whole lib for request (we are not-OO here)
+   $xmlrpc_error = false;
+   $xmlrpc_response_headers = array();
+   
+   #-- encapsulate req, transmit it
+   $socket = xmlrpc_request_send($url, $method, $params, $plus, $gzip);
+   if (!$socket) {
+      return xmlrpc_error(-32768, "no connection", 0, "GLOBALVARS");
+   }
+
+   #-- wait for, read response
+   $response = "";
+   while (!feof($socket) && (strlen($DATA) <= 768<<10)) {
+      $response .= fread($socket, 4<<10);
+   }
+   fclose($socket);
+   if (XMLRPC_DEBUG >= 3) {
+      echo "<code>$response</code>";
+   }
+
+   #-- decode answer and give results
+   return xmlrpc_response_decode($response);
+}
+
+
+#-- an alias
+function xmlrpc_call($url, $method, $params=array(), $plus=XMLRPC_PLUS, $gzip=0) {
+   return xmlrpc_request($url, $method, $params, $plus, $gzip);
+}
+
+
+
+#-- marshall request parameters into array, hash, xml string
+function xmlrpc_request_send($url, $method, &$params, $plus, $gzip, $blocking=true) {
+
+   #-- get connection data
+   $c = parse_url($url);
+   ($host = $c["host"]);
+   ($port = @$c["port"]) or ($port = 80);
+   ($path = $c["path"]) or ($path = "/");
+   if (strpos($c["scheme"], "+")) {
+      $plus++;
+   }
+   if (strpos($c["scheme"], "gzip")) {
+      $gzip++;
+   }
+   if (!$host) { return(NULL); }
+   $inj = "";
+   if ($str = $c["user"]) {
+      if ($c["pass"]) { $str .= ":" . $c["pass"]; }
+      $inj = "Authorization: Basic " . base64_encode($str) . "\n";
+   }
+   
+   #-- mk request HTTP+XML block from params
+   $request = xmlrpc_request_marshall($method, $params);
+   $request = xmlrpc_request_http($request, $path, $host, $plus, $gzip, $inj);
+
+   #-- connect, send request
+   if ($socket = fsockopen($host, $port, $io_err, $io_err_s, 30)) {
+      socket_set_blocking($socket, $blocking);
+      socket_set_timeout($socket, 17, 555);
+   }
+   else {
+      echo "Could not connect to '<b>$host</b>:$port$path' - error $io_err: $io_err_s.<br>\n";
+      return(NULL);
+   }
+   fputs($socket, $request);
+
+   #-- done here
+   return($socket);
+}
+
+
+#-- marshall function call into XML+HTTP string
+function xmlrpc_request_marshall($method, &$params) {
+
+   #-- use xmlrpc-epi
+   if (XMLRPC_FAST && XMLRPC_EPI) {
+      $query = xmlrpc_encode_request($method, $params);
+      return($query);
+   }
+
+   #-- build query
+   $query = array(
+      "methodCall" => array(
+         "methodName" => array( ",0"=>$method ),
+         "params" => array()
+      )
+   );
+   foreach ($params as $i=>$p) {
+      $query["methodCall"]["params"]["param,$i"] = xmlrpc_compact_value($p);
+   }
+   $query = array2xml($query, 1, 'encoding="'.XMLRPC_CHARSET.'" ');
+
+   #-- encode?
+   if (XMLRPC_AUTO_UTF8) {
+      $query = utf8_encode($query);
+   }
+   
+   return($query);   
+}
+
+
+#-- enclose body into HTTP request string
+function xmlrpc_request_http(&$query, $path, $host, $plus, $gzip, $inj_header="") {
+
+   #-- build request
+   $n = "\015\012";
+   $request = "POST $path HTTP/1.0$n"
+            . "Host: $host$n"
+            . ($inj_header ? str_replace("\n", $n, $inj_header) : "")
+            . "User-Agent: " . XMLRPC_UA . "$n"
+            . "Accept: ".XMLRPC_ACCEPT."$n"
+            . (!XMLRPC_DEBUG ? "Accept-Encoding: deflate$n" : "")
+            . "Content-Type: ".($plus ? XMLRPC_MIME_NEW : XMLRPC_MIME_OLD)
+                              ."; charset=".XMLRPC_CHARSET."$n";
+
+   #-- compress?
+   if ($gzip) {
+      $query = gzdeflate($query);
+      $request .= "Content-Encoding: deflate$n";
+   }
+   $request .= "Content-Length: " . strlen($query) . "$n" . "$n";
+   $request .= $query . "$n";
+
+   return($request);
+}
+
+
+#-- unpack response from HTTP and XML representation
+function xmlrpc_response_decode(&$response) {
+   global $xmlrpc_response_headers;
+
+   #-- split into headers and content
+   $l1 = strpos($response, "\n\n");
+   $l2 = strpos($response, "\n\r\n");
+   if ($l2 && (!$l1 || ($l2<$l1))) {
+      $head = substr($response, 0, $l2);
+      $response = substr($response, $l2+3);
+   }
+   else {
+      $head = substr($response, 0, $l1);
+      $response = substr($response, $l2+2);
+   }
+
+   #-- decode headers, decompress body
+   foreach (explode("\n", $head) as $line) {
+      $xmlrpc_response_headers[strtolower(trim(strtok($line, ":")))] = trim(strtok("\000"));
+   }
+   if ($enc = trim(@$xmlrpc_response_headers["content-encoding"])) {
+      if (($enc == "gzip") || ($enc == "x-gzip")) {
+         $response = gzinflate(substr($response, 10, strlen($response)-18));
+      }
+      elseif (($enc == "compress") || ($enc == "x-compress")) {
+         $response = gzuncompress($response);
+      }
+      elseif (($enc == "deflate") || ($enc == "x-deflate")) {
+         $response = gzinflate($response);
+      }
+   }
+
+   $r = xmlrpc_response_unmarshall($response);
+   if (XMLRPC_DEBUG) {var_dump($r);}
+   return($r);
+}
+
+
+#-- decode XML-RPC from string into array and extract its actual meaning
+function xmlrpc_response_unmarshall(&$response) {
+   global $xmlrpc_response_headers;
+
+   #-- strip encoding
+   if (XMLRPC_AUTO_UTF8) {
+      xmlrpc_decode_utf8xml($response, @$xmlrpc_response_headers["content-type"].@$xmlrpc_response_headers["content-charset"]);
+   }
+
+   if (XMLRPC_DEBUG >= 4) { fwrite(fopen("/tmp/xmlrpc:resp_in_xml","w"), $response); }
+   
+   #-- use xmlrpc-epi
+   if (XMLRPC_FAST && XMLRPC_EPI) {
+      $r = xmlrpc_decode_request($response, $uu);
+      xmlrpc_epi_decode_xtypes($r);
+      if (is_array($r) && (count($r)==2) && isset($r["faultCode"]) && isset($r["faultString"])) {
+         return xmlrpc_error($r["faultCode"], $r["faultString"], 1, "GLOBALVARS");
+      }
+      else {
+         return($r);
+      }
+   }
+
+
+   #-- unmarshall XML
+   $response = xml2array($response);
+
+   #-- fetch content (one returned element)
+   if ($r = @$response["methodResponse,0"]["params,0"]["param,0"]["value,0"]) {
+      $r = xmlrpc_decode_value($r);
+      return($r);
+   }
+  
+   #-- error cases
+   #  (we should rather return an error object here)
+   if (($r = @$response["methodResponse,0"]["fault,0"]["value,0"]) && ($r = xmlrpc_decode_value($r))) { 
+      return xmlrpc_error($r["faultCode"], $r["faultString"], 1, "GLOBALVARS");
+   }
+   else {
+      return xmlrpc_error(-32600, "xml+rpc: invalid response", 0, "GLBLVRS");
+   }
+   return(NULL);
+}
+
+
+
+#-- Establish a virtual XML+RPC or XML-RPC server connection (a pseudo
+#   handshake is used to determine supported protocol / extensions).
+class xmlrpc_connection {
+
+   #-- init
+   function xmlrpc_connection($url, $autodiscovery=0) {
+      global $xmlrpc_response_headers;
+      $this->server = $url;
+      $this->plus = 0;
+      $this->gzip = 0;
+
+      #-- handshake to check supported protocol
+      $funcs = $this->call("system.getVersion");
+      $this->plus = (strpos($xmlrpc_response_headers["accept"], XMLRPC_MIME_NEW) !== false);
+      $this->gzip = (strpos($xmlrpc_response_headers["accept_encoding"], "deflate") !== false);
+      
+      #-- auto-discovery, create 'method' names
+      if ($funcs && (XMLRPC_AUTODISCOVERY || $autodiscovery)) {
+         foreach ($funcs as $fn) {
+            $short = $fn;
+            if ($l = strpos($fn, ".")) {
+               $short = substr($fn, $l + 1);
+               if (substr($fn, 0, $l) == "system") { continue; }
+            }
+            $this->short = create_function("", "return xmlrpc_request('{$this->server}','$fn',func_get_args(),{$this->plus},{$this->gzip});");
+         }
+      }
+   }
+   
+   #-- generical call (needs func name)
+   function call($method /*, ... */) {
+      $params = func_get_args();
+      shift($params);
+      $r = xmlrpc_request($this->serverm, $method, $params, $this->plus, $this->gzip);
+      return($r);
+   }
+}
+
+#-- an alias
+class xmlrpc extends xmlrpc_connection {
+}
+
+
+
+
+############################################################################
+#                                                                          #
+#  server implementation                                                   #
+#                                                                          #
+############################################################################
+
+
+#-- Check request and execute function if registered in $xmlrpc_methods[]
+#   array.
+function xmlrpc_server() {
+
+   global $xmlrpc_methods;
+
+   #-- server is active
+   define("XMLRPC_SERVER", getmypid());
+   if (XMLRPC_DEBUG) { error_reporting(E_ALL^E_NOTICE); }
+   ob_start();
+
+   #-- standard reply headers
+   header("Accept: ".XMLRPC_MIME_NEW.", ".XMLRPC_MIME_OLD."; q=0.5");
+   header("Accept-Encoding: deflate");
+   header("X-Server: " . XMLRPC_UA);
+   header("Connection: close");
+   header("Cache-Control: private");
+
+   #-- fixes for PHP/Apache
+   if (function_exists("getallheaders")) {
+      foreach (getallheaders() as $i=>$v) {
+         $_SERVER[strtoupper(strtr("HTTP_$i", "-", "_"))] = $v;
+      }
+   }
+
+   #-- check and get call
+   $allowed = array(
+      "REQUEST_METHOD" => array("POST", "PUT", "CALL"),
+      "CONTENT_TYPE" => array(XMLRPC_MIME_NEW, XMLRPC_MIME_OLD),
+   );
+   foreach ($allowed as $WHAT=>$WHICH) {
+      if (!in_array(trim(strtok($WRONG=$_SERVER[$WHAT], ";,(")), $WHICH)) {
+         header("Status: 400 Go Away, Stupid!");
+         if (!$WRONG) {
+            $WRONG = "undefined";
+         }
+         die("<h2>Error</h2>Your request was bogus, <b>$WHAT</b> must be <i>"
+             . implode("</i> or <i>", $WHICH) . "</i>, but yours was '<tt>$WRONG</tt>'.\n");
+      }
+   }
+   if (!($xml_request = xmlrpc_fetch_post_chunk())) {
+      header("Status: 500 How Sad");
+      die("<h2>Error</h2>Could not fetch POST data.\n");
+   }
+
+   #-- decipher incoming XML request string
+   $method = "";
+   if (XMLRPC_FAST && XMLRPC_EPI) {
+      $params = xmlrpc_decode_request($xml_request, $method);
+      xmlrpc_epi_decode_xtypes($params);
+   }
+   else {
+      $params = xmlrpc_request_unmarshall($xml_request, $method);
+   }
+
+   
+   #-- add the few system.methods()
+   //if (empty($xmlrpc_methods)) {
+   //   $xmlrpc_methods = get_defined_functions();
+   //}
+   $xmlrpc_methods["system"] = "xmlrpc_system_methods";   # a class
+
+   #-- call
+   $result = xmlrpc_exec_method($method, $params);
+
+   #-- send back result
+   if (isset($result)) {
+      if (isset($result)) {
+         $resp["methodResponse"]["params"]["param"] = xmlrpc_compact_value($result);
+      }
+      else {
+         $resp["methodResponse"]["params"] = array();
+      }
+
+      xmlrpc_send_response($resp);
+   }
+   else {
+      $result = xmlrpc_error(0, "No Result");
+      xmlrpc_send_response($result);
+   }
+}
+
+
+
+#-- decode <methodCall> XML string into understandable chunks,
+#   gives $params as return value and $method name via pass-by-ref
+function xmlrpc_request_unmarshall(&$xml_request, &$method) {
+
+   #-- mangle charset
+   if (XMLRPC_AUTO_UTF8) {
+      xmlrpc_decode_utf8xml($xml_request, $_SERVER["CONTENT_TYPE"].$_SERVER["HTTP_CONTENT_CHARSET"]);
+   }
+
+   #-- decode XML string into PHP arrays
+   $call = xml2array($xml_request, 1);
+   $xml_request = NULL;
+
+   $call = $call["methodCall,0"];
+   if (!$call) {
+      xmlrpc_send_response(xmlrpc_error(-32600, "Bad Request, <methodCall> missing"));
+   }
+   $method = $call["methodName,0"][",0"];
+   if (!$method) {
+      xmlrpc_send_response(xmlrpc_error(-32600, "Bad Request, <methodName> missing"));
+   } 
+
+   $params = array();
+   foreach ($call["params,1"] as $uu => $param) {
+      $params[] = xmlrpc_decode_value($param["value,0"]);
+   }
+
+   return($params);
+}
+
+
+
+#-- Call the requested method (using the XML-method to PHP-function mapping
+#   table and hints).
+function xmlrpc_exec_method($method, $params) {
+
+   global $xmlrpc_methods;
+   if (XMLRPC_DEBUG >= 2) { error_reporting(E_ALL^E_NOTICE); }
+
+   #-- check if allowed call
+   $rf = strtr($method, ".", "_");
+   $cl = strtok($method, ".");
+   if (!$xmlrpc_methods[$method] && !$xmlrpc_methods[$cl]
+      && !in_array($method, $xmlrpc_methods)
+      && !in_array($rf, $xmlrpc_methods) && !in_array($cl, $xmlrpc_methods) )
+   {
+      xmlrpc_send_response(xmlrpc_error(-32601));
+   }
+
+   #-- real function call
+   if ($php_func_name = $xmlrpc_methods[$method]) {
+      $rf = $method = $php_func_name;
+   }
+   if (function_exists($rf)) {
+      $result = call_user_func_array($rf, $params);
+      if (XMLRPC_DEBUG >= 4) { fwrite(fopen("/tmp/xmlrpc:func_call_res","w"),serialize(array($rf,$result,$params))); }
+      return($result);
+   }
+   #-- PHP object method calls
+   else {
+      $class = strtok($method, ".");
+      $method = strtok("\000");
+      if ($uu = $xmlrpc_methods[$class]) {
+         $class = $uu;
+      }
+      if ($class && class_exists($class) && $method) {
+         $obj = new $class;
+         if (method_exists($obj, $method)) {
+            $result = call_user_method_array($method, $obj, $params);  //<DEPRECATED>
+            return($result);
+         }
+      }
+   }
+
+   #-- else error
+   xmlrpc_send_response(xmlrpc_error(-32601));
+}
+
+
+
+#-- Get POST data from PHP (if it gives it to us).
+function xmlrpc_fetch_post_chunk() {
+   global $HTTP_RAW_POST_DATA;
+
+   $data = false;
+   if ($f = fopen("php://input", "rb")) {
+      $data = fread($f, 0x0100000);
+      fclose($f);
+   }
+   if (empty($data)) {
+      ini_set("always_populate_raw_post_data", "true");  // well, maybe(!?)
+      $data = $HTTP_RAW_POST_DATA;
+      $HTTP_RAW_POST_DATA = "";
+   }
+   $enc = trim(strtolower($_SERVER["HTTP_CONTENT_ENCODING"]));
+   $funcs = array("deflate"=>"gzinflate", "gzip"=>"gzdecode", "compress"=>"gzuncompress", "x-gzip"=>"gzdecode", "x-bzip2"=>"bzuncompress");
+   if ($enc && ($pf = $funcs[$enc]) && function_exists($pf)) {
+      $data = $pf($data);
+   }
+   return($data);
+}
+
+
+#-- converts UTF-8 documents into Latin-1 ones
+function xmlrpc_decode_utf8xml(&$xml, $ct) {
+   if (strpos(strtolower($ct), "utf-8") or preg_match('/<\?xml[^>]+encoding=["\']utf-8/i', $xml)) {
+      $xml = utf8_decode($xml);
+      $xml = preg_replace('/(<\?xml[^>]+encoding=["\'])utf-8(["\'])/i', '$1iso-8859-1$2', $xml, 1);
+   }
+}
+
+
+
+#-- Creates an error object.
+function xmlrpc_error($no=-32500, $str="", $type=1, $into_vars=0) {
+   global $xmlrpc_error, $xmlrpc_errorcode;
+   $errors = array(
+           0 => "No Result",
+      -32300 => "Transport error",
+      -32400 => "Internal Server Error",
+      -32500 => "Application error",
+      -32600 => "Invalid message format / Bad request",
+      -32601 => "Method does not exist",
+      -32602 => "Parameter type mismatch",
+      -32603 => "Internal XML-RPC error",
+      -32604 => "Too many parameters",
+      -32700 => "Not well-formed XML",
+      -32701 => "Unsupported encoding - only ISO-8859-1 and UTF-8 capable",
+      -32702 => "Invalid characters, encoding mismatch",
+   );
+   #-- build response xml/array
+   if (!($str) && !($str = $errors[$no])) {
+      $str = "Unknown Error";
+   }
+   if ($into_vars && !XMLRPC_OO) {
+      $xmlrpc_error = $str;
+      $xmlrpc_errorcode = $no;
+      return(NULL);
+   }
+   else {
+      return new xmlrpc_error($no, $str, $type);
+   }
+}
+
+
+#-- error object
+class xmlrpc_error {
+
+   var $type = 1;   // else an HTTP error
+   var $no;
+   var $str;
+   
+   function xmlrpc_error($no, $str, $type=1) {
+      $this->type = $type;
+      $this->no = $no;
+      $this->str = $str;
+   }
+   
+   function send() {
+      $error = xmlrpc_compact_value(array(
+         "faultCode" => $no,
+         "faultString" => $str,
+      ));
+      $resp = array(
+         "methodResponse" => array(
+            "fault" => $error
+         )
+      );
+      xmlrpc_send_response($resp);
+   }
+}
+
+
+#-- Sends a response.
+function xmlrpc_send_response($r) {
+
+   #-- error objects send itself (by calling _send_response() again ;-)
+   if (is_object($r)) {
+      $r->send();
+   }
+
+   #-- answer XML-RPC and XML+RPC requests
+   $ct = trim(strtok(strtolower($_SERVER["CONTENT_TYPE"]), ";,("));  // from original request
+   $cs = XMLRPC_CHARSET;
+   header("Content-Type: $ct; charset=\"$cs\"");
+   
+   #-- make XML document from it
+   if (is_array($r)) {
+      $r = array2xml($r, 1, 'encoding="'.$cs.'" ');
+   }
+
+   #-- compress answer?
+   if (!headers_sent()) {
+      $enc = trim(strtolower($_SERVER["HTTP_ACCEPT_ENCODING"]));
+      $funcs = array("deflate"=>"gzdeflate", "gzip"=>"gzencode", "compress"=>"gzcompress", "x-gzip"=>"gzencode", "x-bzip2"=>"bzcompress");
+      if ($enc && ($pf = $funcs[$enc]) && function_exists($pf)) {
+         header("Content-Encoding: $enc");
+         $r = $pf($r);
+      }
+   }
+
+   #-- send
+   if (ob_get_level()) {
+      #-- this prevents that PHP errors appear as garbage in our response
+      $add .= "<!--\n" . ob_get_contents() . "\n-->";
+      ob_end_clean();
+   }
+   header("Content-Length: " . strlen($r));
+   print $r . $add;
+   die;
+}
+
+
+
+#-- Provides "system.*" method namespace.
+class xmlrpc_system_methods {
+
+   function listMethods() {
+      global $xmlrpc_methods;
+      $r = array();
+      foreach ($xmlrpc_methods as $i=>$i2) {
+         $real = is_int($i) ? $i2 : $i;
+         if (class_exists($real) && ($i2=$real) || class_exists($i2)) {
+            foreach (get_class_methods($i2) as $add) {
+               $r[] = $real.".".$add;
+            }
+         }
+         else {
+            $r[] = $real;
+         }
+      }
+      return($r);
+   }
+
+   function time() {
+      return new xmlrpc_datetime(time());
+   }
+}
+
+
+############################################################################
+#                                                                          #
+#  misc functions                                                          #
+#                                                                          #
+############################################################################
+
+
+function xmlrpc_log($message) {
+}
+
+function xmlrpc_die($error="", $str="") {
+}
+
+
+
+############################################################################
+#                                                                          #
+#  data representation mangling                                            #
+#                                                                          #
+############################################################################
+
+
+#-- Makes compact-array2xml datavar from a PHP variable.
+function xmlrpc_compact_value($var, $n=0) {
+
+   #-- create compact-array2xml tree
+   $root = array(
+      "value,$n" => array(),
+   );
+   $r = &$root["value,$n"];
+
+   #-- detect PHP values to be complex types in XML-RPC
+   if (XMLRPC_AUTO_TYPES && is_string($var)) {
+      if ((strlen($var) >= 64) && preg_match('/^[\w]+=*$/', $var)) {
+         $var = new xmlrpc_base64($var);
+      }
+      elseif ((strlen($var)==17) && ($var[8]=="T") && preg_match('/^\d{8}T\d\d:\d\d:\d\d$/', $var)) {
+         $var = new xmlrpc_datetime($var);
+      }
+   }
+
+   #-- complex types
+   if (is_object($var)) {
+      $r = $var->out();
+   }
+   #-- arrays and hashes(structs)
+   elseif (is_array($var)) {
+      if (isset($var[0]) || empty($var)) {
+         $r = array("array,$n" => array("data,0" => array()));
+         $r = &$r["array,$n"]["data,0"];
+         foreach ($var as $n=>$val) {
+            $r = array_merge($r, xmlrpc_compact_value($val, $n));
+         }
+      }
+      else {
+         $r = array("struct,$n"=>array());
+         $r = &$r["struct,$n"];
+         $n = 0;
+         foreach ($var as $i=>$val) {
+            $r["member,$n"] = array_merge(array(
+               "name,0" => array(",0" => "$i"),
+            ), xmlrpc_compact_value($val, 1));
+            $n++;
+         }
+      }
+   }
+   #-- simple types
+   elseif (is_bool($var)) {
+      $r = array(
+         "boolean,$n" => array(",0" => ($var?1:0)),
+      );
+   }
+   elseif (is_int($var)) {
+      $r = array(
+         "int,$n" => array(",0" => $var),
+      );
+   }
+   elseif (is_float($var)) {
+      $r = array(
+         "double,$n" => array(",0" => $var),
+      );
+   }
+   elseif (is_string($var)) {
+      $r = array(
+         "string,$n" => array(",0" => $var),
+      );
+   }
+   return($root);
+}
+
+
+#-- Makes a PHP array from a compact-xml2array representation. $value must
+#   always be the xml2array elements _below_ the ["value,0"] or ["data,0"]
+#   or ["member,N"] entry.
+function xmlrpc_decode_value($value) {
+   $val = NULL;
+   foreach ($value as $i=>$d) {
+
+      #-- use single (text) content xml2array entry as actual $d var
+      if (is_array($d) && isset($d[",0"])) {
+         $d = $d[",0"];
+      }
+
+      #-- convert into PHP var based on type
+      $type = strtok($i, ",");
+      switch ($type) {
+
+         case "array":
+            $val = array();
+            foreach ($d["data,0"] as $i=>$value) {
+               $val[] = xmlrpc_decode_value($value);
+            }
+            break;
+
+         case "struct":
+            $val = array();
+            foreach ($d as $uu=>$d2) {
+               if (($in=$d2["name,0"][",0"]) && ($pos2=1) || ($in=$d2["name,1"][",0"]) && ($pos2=0)) {
+                  $val[$in] = xmlrpc_decode_value($d2["value,$pos2"]);
+               }
+            }
+            break;
+
+         case "":    # handles also '<value>s</value>' instead
+         case "0":   # of '<value><string>s</string></value>'
+         case "string":
+            $val =  is_array($d) ? "" : (string)$d;
+            break;
+
+         case "base64":
+            $val = (XMLRPC_AUTO_TYPES>=2) ? base64_decode($d) : (string)$d;
+            if ((XMLRPC_AUTO_UTF8 >= 2) && ($uu = utf8_decode($val))) {
+               $val = $uu;
+            }
+            break;
+            
+      // case "real":  case "float":   // neither is allowed
+         case "double":
+            $val = (double)$d;
+            break;
+         case "i4":
+         case "int":
+            $val = (int)$d;
+            break;
+
+         case "boolean":
+            $val = (boolean)$d;
+            break;
+
+         case "dateTime.iso8601":
+            $val = xmlrpc_strtotime($d);
+            break;
+
+         default:
+            if (defined("XMLRPC_SERVER")) {
+               xmlrpc_send_response(xmlrpc_error(-32600, "Unknown data type '$type'"));
+            }
+            else {
+               echo $xmlrpc_error = "UNKNOWN XML-RPC DATA TYPE '$type'<br>\n";
+               $xmlrpc_errorcode = -32207;
+            }
+#           echo "<!-- UNKNOWN TYPE $type -->\n";
+#           xmlrpc_log("bad data type '$type' enountered");
+      }
+   }
+   return($val);
+}
+
+
+#-- More complex XML-RPC data types need object representation to
+#   distinguish them from ordinary string and integer vars.
+class xmlrpc_xtype {
+   var $scalar = "";
+   var $xmlrpc_type = "string";
+   var $tag = "string";
+   function xmlrpc_type($str) {
+      $this->data = $str;
+   }
+   function out() {
+      return array($this->tag.",0" => array(",0"=>$this->scalar));
+   }
+}
+class xmlrpc_base64 extends xmlrpc_xtype {
+   function xmlrpc_base64($str) {
+      $this->tag = "base64";
+      $this->xmlrpc_type = "base64";
+      if (XMLRPC_AUTO_UTF8 >= 2) {
+         $str = utf8_encode($str);
+      }
+      if (!preg_match("/^[=\w\s]+$/", $str)) {
+         $this->encode=1;
+      }
+      $this->scalar = $str;
+   }
+   function out() {
+      if (isset($this->encode)) {
+         $this->scalar = chunk_split(base64_encode($this->scalar), 74, "\n");
+      }
+      return xmlrpc_xtype::out();
+   }
+}
+class xmlrpc_datetime extends xmlrpc_xtype {
+   function xmlrpc_datetime($t) {
+      $this->tag = "dateTime.iso8601";
+      $this->xmlrpc_type = "datetime";
+      if (($t > 0) && ($t[8] != "T")) {
+         $this->timestamp = $t;
+         $t = xmlrpc_timetostr($t);
+      }
+      $this->scalar = $t;
+   }
+}
+
+#-- Further simplify use of the above ones.
+function xmlrpc_base64($string) {
+   return(new xmlrpc_base64($string));
+}
+function xmlrpc_datetime($timestr) {
+   return(new xmlrpc_datetime($timestr));
+}
+
+
+#-- Deciphers ISO datetime string into UNIX timestamp.
+function xmlrpc_strtotime($str) {
+   $tm = explode(":", substr($str, 9));
+   $t = mktime($tm[0], $tm[1], $tm[2], substr($str, 4, 2), substr($str, 6, 2), substr($str, 0, 4));
+   return($t);
+}
+function xmlrpc_timetostr($time) {
+   return(gmstrftime("%Y%m%dT%T", $time));
+}
+
+
+#-- helping hand for the xmlrpc-epi extension of php
+function xmlrpc_epi_decode_xtypes(&$r) {
+   if (is_object($r) && isset($r->xmlrpc_type)) {
+      if (isset($r->timestamp)) {
+         $r = $r->timestamp;
+      }
+      else {
+         $r = $r->scalar;
+      }
+   }
+   elseif (is_array($r)) {
+      foreach ($r as $i=>$v) {
+         xmlrpc_epi_decode_xtypes($r[$i]);
+      }
+   }
+}
+
+
+
+
+############################################################################
+#                                                                          #
+#  simplified XML parser                                                   #
+#                                                                          #
+############################################################################
+
+
+#-- Encode the two chars & and < into htmlentities (there is nothing said
+#   about the possible other entities in the XML-RPC spec).
+function xml_entities($str) {
+   $e = array(
+      "&" => "&amp;",
+      "<" => "&lt;",
+//      ">" => "&gt;",
+   );
+   return(strtr($str, $e));
+}
+function xml_decode_entities($str) {
+   $e = array(
+      "&lt;" => "<",
+      "&gt;" => ">",
+      "&apos;" => "'",
+      "&quot;" => '"',
+      "&amp;" => "&",
+   );
+   if (strpos($e, "&#") !== false) {
+      $e = preg_replace('/&#(\d+);/e', 'chr($1)', $e);
+      $e = preg_replace('/&#x([\da-fA-F]+);/e', 'chr(hexdec("$1"))', $e);
+   }
+   return(strtr($str, $e));
+}
+
+
+#-- Can split simplified XML into a PHP array structure. The now used
+#   'compact' format will yield tag sub arrays with an "*,0" index and
+#   just [",0"] for text nodes.
+function xml2array($xml, $compact="ALWAYS") {
+   $r = array();
+   if (function_exists("xml_parser_create") && (strlen($xml) >= 512)) {
+      $r = xml2array_php($xml);
+   }
+   else {
+      xml2array_parse($xml, $r, $compact);
+   }
+   return($r);
+}
+
+
+#-- Recursively builds an array of the chunks fetched via strtok() from
+#   the original XML input string.
+function xml2array_parse(&$string, &$r, $compact=1) {
+   $n = 0;
+   do {
+      #-- split chunks
+      $l = strpos($string, "<");
+      $p = strpos($string, ">", $l);
+      $text = $attr=$close = $tag = false;
+      if ($l === false) {
+         $text = $string;
+         $string = false;
+      }
+      else {
+         $tag = strtok(substr($string, $l+1, $p-$l-1), " ");
+         if ((strncmp($tag, "![CDATA[", 8)==0) && ($p = strpos($string, "]]>", $l))) {
+            $text = substr($string, $l+9, $p-$l-9);
+         }
+         else {
+            if ($l) {
+               $text = xml_decode_entities(substr($string, 0, $l));
+            }
+            $attr = strtok("\000");
+            $close = $attr && ($attr[strlen($attr)-1]=="/");
+            $string = substr($string, $p+1);
+         }
+      }
+      #-- insert text/body content into array
+      if (trim($text)) {
+#         if ($compact) {
+             $r[",$n"] = $text;
+#         }
+#         else {
+#            $r[] = $text;
+#         }
+         $n++;
+      }
+      #-- recurse for tags
+      if ($tag && ($tag[0] >= 'A')) {    #-- don't read <? <! </ pseudo-tags
+#         if ($compact) {
+             $r["$tag,$n"] = array();
+             $new = &$r["$tag,$n"];
+#         } else {
+#            $r[] = array($tag => array());
+#            $new = &$r[count($r)-1][$tag];
+#         }
+         if (!$close) {
+            xml2array_parse($string, $new, $compact);
+         }
+         $n++;
+      }
+      #-- stop if no more tags or content
+      if (empty($tag) && empty($text) || empty($string)) {
+         $tag = "/";
+      }
+   } while ($tag[0] != "/");
+}
+
+
+#-- Uses the XML extension of PHP to convert an XML stream into the
+#   compact array representation.
+function xml2array_php(&$xml, $compact=1) {
+
+   $p = xml_parser_create(xml_which_charset($xml));
+   xml_parser_set_option($p, XML_OPTION_CASE_FOLDING, false);
+   xml_parser_set_option($p, XML_OPTION_TARGET_ENCODING, "ISO-8859-1");
+
+   xml_parse_into_struct($p, $xml, $struct);
+
+   $a = array();  // will hold all tag nodes
+   $tree = array(&$a);  // stack of pointers to last node of any tree level
+   $in = &$a;           // pointer to last created node
+
+   foreach ($struct as $t) {
+      unset($value);
+      extract($t);
+
+      $depth = count($tree) - 1;
+      $in = &$tree[$depth];
+      $tag .= "," . count($in);
+//echo "#$depth, TAG=\"$tag\", TYP=$type, LEV=$level, VAL=$value\n";
+
+      switch ($type[1]) {
+
+         #--  OpEN
+         case "p":
+            $in[$tag] = array();
+            if ($type=="open") {
+               $tree[] = &$in[$tag];
+            }
+            if (isset($value) && trim($value)) {
+               $in[$tag][",0"] = $value;
+            }
+            break;
+
+         #--  CoMPLETE
+         case "o":
+            $in[$tag] = array();
+            if (isset($value) && trim($value)) {
+               $in[$tag][",0"] = $value;
+            }
+            break;
+
+         #--  ClOSE
+         case "l":
+            array_pop($tree);
+            break;
+
+         #--  CdATA - usually just whitespace
+         case "d":
+            if (isset($value) && trim($value)) {
+               $in[",".count($in)] = $value;
+            }
+            break;
+         
+         default:
+            // case "attribute":
+            // and anything else we do not want
+      }
+      
+   }
+   
+   return($a);
+}
+
+
+
+function xml_which_charset(&$xml) {
+   return( strpos(strtok($xml, "\n"), '-8859-1"') ? "iso-8859-1" : "utf-8" );
+}
+
+
+
+############################################################################
+#                                                                          #
+#  simplified XML creator                                                  #
+#                                                                          #
+############################################################################
+
+
+#-- This is the opposite of the above xml2array, and can also work with the
+#   so called $compact format.
+function array2xml($r, $compact=1, $ins="") {
+   $string = "<?xml version=\"1.0\" $ins?>";
+   array2xml_push($string, $r, $compact);
+   return($string);
+}
+
+
+#-- Recursively throws out the XMLified tree generated by the xml2array()
+#   'parser' function.
+function array2xml_push(&$string, &$r, $compact, $ind=-1) {
+   $old_ind = ++$ind - 1;
+   if ($old_ind < 0) { $old_ind = 0; }
+   foreach ($r as $i=>$d) {
+      $d = &$r[$i];
+      if (is_scalar($d)) {
+         $string .= xml_entities($d);
+      }
+      elseif (is_array($d)) {
+         if ($compact) {
+            $i = strtok($i, ","); 
+         }
+         $ls = str_repeat(" ", $ind);
+         $string .= "\n$ls<$i>";
+         $string .=  array2xml_push($string, $d, $compact, $ind);
+         $ls = str_repeat(" ", $old_ind);
+         $string .= "</$i>\n$ls";
+      }
+   }
+}
+
+
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.txt
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.txt	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/contrib/xmlrpc.txt	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,402 @@
+
+XML-RPC is a "standard" (well, not yet exactly) for accessing remotely
+provided 'Web services'. More exactly it is just a complicated encoding
+standard for calling functions and procedures on a remote Web server
+(and getting its calculation or data request results of course).
+
+It is still in wide use for many interesting features like accessing
+database content, searching, data conversion, and so on. It started as
+a lightweight alternative to SOAP, which currently is more on the rise.
+While SOAP is much more bloated, also XML-RPC is not the quickest RPC
+format available, is not really standards-compliant (bogus specs over
+the time), and so has probably only a limited lifetime now.
+Therefore you should try to provide your services and access others`
+via vanilla HTTP requests (form or url encoding), when possible; use
+the "http.php" class for this.
+
+(There is also a faster PHP-RPC standard on the rise, which provides
+type-safe data transport over compressed and fast connections, without
+the encoding overhead and charset issues when using XML-RPC.)
+
+
+
+xmlrpc.php
+??????????
+The 'xmlrpc.php' script implements the XML-RPC spec., but adds a few
+extensions, namely use of the (yet unregistered) "application/rpc+xml"
+MIME type and compressed HTTP transportation. It uses a builtin stupid
+XML parser (for the highly simplified XML-RPC message content) and thus
+is totally independent of any PHP extensions. It of course takes
+advantage of the XML extension where present (a lot faster), and it even
+can make use of Epinions XML-RPC extension for PHP (really fast than).
+
+It is mostly not object-oriented, but extremely easy to use for building
+XML-RPC servers or calling remote procedures.
+
+
+configuration
+?????????????
+There are a few constants and variables that the 'xmlrpc.php' script
+respects.
+
+XMLRPC_PLUS
+   If set to 1 enables use of the "application/rpc+xml" MIME type and
+   request compression per default (for server and client). In 2004
+   still not the recommended setting.
+
+XMLRPC_AUTO_TYPES
+   Allows the request encoder to automatically determine the <base64>
+   and <dateTime.iso8061> types, even if you just used them as scalar PHP
+   values. Otherwise you had to use 'new xmlrpc_base64("STrinG==")' and
+   'new xmlrpc_datetime("20001020T00:00:00")' to prepare such values.
+
+XMLRPC_AUTO_UTF8
+   Takes care of transforming the complete RPC messages into/from UTF-8,
+   what is useful if your scripts deal only with Latin1 and always expect
+   this. <base64> are also de/encoded if you set this constant to 2.
+
+XMLRPC_CHARSET
+   The whole script is currently optimized to produce UTF-8 and decode
+   requests from/into Latin-1 for your scripts.
+
+XMLRPC_FAST
+   Enables use of Epinions XML-RPC extension module for PHP automatically
+   where available. You only want to disable this for debugging purposes.
+
+XMLRPC_OO
+   Engages error result objects, else you had to use the two global vars
+   "$xmlrpc_error" and "$xmlrpc_errorstr" to detect such cases. If you
+   enable it you must however compare all xmlrpc_request() result values
+   against being an object (what does not happen for succeeded XML-RPC
+   requests).
+
+XMLRPC_AUTODISCOVERY
+   If you create a "xmlrpc" or "xmlrpc_connection" object and this is
+   enabled, you would get the object with function names of the
+   automatically instantiated methods of the remotely provided service
+   wrapped into one object (not yet), much like in the Python library
+   for xmlrpc.
+
+XMLRPC_LOG
+   Creates a log file for incoming requests to the _server() part of xmlrpc
+   (whenerver you activate it with the _server() call).
+
+
+There are also a few automatically defined values, which you shouldn't
+care about:
+
+XMLRPC_MIME
+   Contains the currently selected default MIME type for transport.
+XMLRPC_MIME_NEW
+   Contains the newer MIME type value. Do not change.
+XMLRPC_MIME_OLD
+   For compatibility with older XML-RPC clients and servers. Do not change.
+XMLRPC_ACCEPT
+   Again the MIME Types wrapped into a HTTP Accept: header for requests
+   and responses.
+XMLRPC_EPI
+   Tells if the Epinions extension is available.
+
+
+server configuration
+????????????????????
+$xmlrpc_methods[]
+   Every accessible method (for remote calls) must be defined here, for
+   use with the xmlrpc_server(). There is a separate section on this one.
+
+
+making xmlrpc() requests
+????????????????????????
+You can call a remote procedure by just using the short xmlrpc() call
+syntax:
+
+  $result = xmlrpc("http://example.com/rpc.php", "the.function", 1, 2, 3);
+
+Where 1, 2 and 3 would be parameters to "the.function" on the remote server.
+The number of parameters is not limited, and you do not need to give one at
+all (if the remote procedure does not require them. The parameter values
+are automatically encoded into XML-RPC representations except for <base64>
+and <dateTime.iso8061> ones, for which you needed to create objects first.
+The $result of course recieved in ordinary PHP representation of the remote
+functions result value.
+
+
+       xmlrpc_request()
+       ????????????????
+       Is basically the same as calling the xmlrpc() function, but that
+       all parameters given to the remote function are now to be passed
+       as array in the third parameter:
+
+         $params = array(  "param1", "param2", "param3"  );
+         $r = xmlrpc_request("server.com:80", "remoteMethod", $params);
+
+       Also a fourth parameter to xmlrpc_request (boolean) says if to
+       use the old XML-RPC or the faster XML+RPC interface. But beware,
+       that this could fail if you connect to an older server.
+
+
+       xmlrpc_connection
+       ?????????????????
+       You can also establish a 'connection' (this is purely virtual) to
+       a remote XML-RPC server, using a xmlrpc_connection object as follows:
+
+         $xc = new xmlrpc_connection("http://example.com/rpc.php");
+
+       Then you could regularily call remote functions on that server:
+
+         $result1 = $xc->call("function1");
+         $result2 = $xc->call("function2", 2, $result1, 0x5F02);
+
+       The xmlrpc_connection automatically chooses XML+RPC if available
+       with the remote server.
+
+
+       data types
+       ??????????
+       Unless XMLRPC_AUTO_TYPES was enabled (discouraged, because this is
+       considered 'unreliable type guessing') you need to explicetely mark
+       parameters passed to the xmlrpc() or xmlrpc_request() calls for
+       their later XML-RPC type.
+
+       To do so, you have the two class types 'xmlrpc_datetime' and
+       'xmlrpc_base64' availabe. Use them as follows:
+
+          $param1 = new xmlrpc_base64(  base64_encode($string1)  );
+          $p2 = new xmlrpc_datetime(  time() + 60*60*24*7  );
+          $r = xmlrpc("www.server.com/rpc/", "function1", $param1, $p2);
+
+       Please note, that you needed to call base64_encode() yourself, and
+       that the _datetime() can also use standard Unix timestamps as input.
+
+       The XML-RPC <dateTime.iso8601> entites are, btw, automatically
+       converted into Unix timestamps, if returned as result from xmlrpc()
+       and xmlrpc_request() calls. This happens regardless of
+       XMLRPC_AUTO_TYPES.
+
+       If XMLRPC_AUTO_TYPES is set to 2, then even <base64> result values
+       would be automatically converted into their plain (binary) string
+       representation.
+
+
+       "Bugs"
+       ??????
+       pass-by-reference is not possible ;)
+
+
+
+xmlrpc_server() use
+???????????????????
+To make a set of functions available for remote calls, you would create
+an interface script and make its URL public. Assuming that you had a
+subdirectory "./myrpc" on your server, you would likely want to create 
+the file "./myrpc/index.php" with following content:
+
+   <?php
+
+      $xmlrpc_methods = array(
+         "myFunction",
+         "mySecondOne",
+      );
+ 
+      include("xmlrpc.php");
+      xmlrpc_server();
+   ?>
+
+So, by calling the xmlrpc_server() you make all registered functions
+($xmlrpc_methods) available with the URL "xml+rpc://example.com/myrpc/" for
+remote calls.
+
+
+       $xmlrpc_methods[]
+       ?????????????????
+       All function names you list in this array (before calling the
+       xmlrpc_server() function) will be available for remote calls. The
+       function names are mapped to remote method names by having the
+       _ underscore as alias the the . dot, which is commonly used. So a
+       function whose name was "tools_register" was available as remotely
+       callable method "tools_register" or "tools.register".
+
+       Also with xmlrpc_server() it is possible to register member methods
+       of object classes as remotely callable methods. All you needed to
+       do is list your class in $xmlrpc_methods[].
+
+       You can also give aliases, both for function names and for object
+       classes:
+
+          $xmlrpc_methods["callable.methodname"] = "here_function_name";
+          $xmlrpc_methods["section"] = "here_class_name";
+
+       The member methods of a class cannot be aliased however.
+
+
+       xmlrpc_server()
+       ???????????????
+       Just fetches the current request, decodes it and executes the
+       destination method (PHP function) if listed in the global
+       $xmlrpc_methods[] variable.
+
+       It automatically exits after sending the response or an error. So
+       this is the last command in your xmlrpc wrapper script.
+
+
+       xmlrpc_fetch_post_chunk()
+       ?????????????????????????
+       Begs PHP for the complete POST data stream. It only has two options
+       to do so and may fail with some Webservers and earlier PHP versions.
+       In either case try to set the "always_populate_raw_post_data" option
+       in php.ini or from within a .htaccess file.
+
+       To allow the server part to receive the XML-RPC message, you either
+       need PHP 4.3 or later, or configure your PHP interpreter specifically
+       to pass in the POSTed data stream. In you php.ini ([PHP] section) add:
+
+         always_populate_raw_post_data = 1
+
+       Or following in a .htaccess per-dir configuration
+       file for Apache:
+
+         php_option always_populate_raw_post_data=1
+
+
+       xmlrpc_send_response()
+       ??????????????????????
+       Is called from within xmlrpc_server() to send the response for the
+       processed request (also sends error responses).
+
+
+       xmlrpc_error()
+       ??????????????
+       Creates a XML-RPC error result array.
+
+
+
+---------------------------------------------------------------------------
+internals
+---------------------------------------------------------------------------
+Unless you are interrested in an in-deep discussion of the "xmlrpc.php"
+you should effectively stop reading here.
+
+
+xmlrpc data representation encoders
+???????????????????????????????????
+This lib uses the simple xml2array() compact format to do the initial work
+of converting a XML file into an array representation. Various design
+restrictions of the XML-RPC message format then impose certain structures
+inside of the xml2array-compact representation, what is taken adavantage of.
+
+For example <struct> entries have in the compact representation sub-elements
+like ["member,0"], ["member,1"], ["member,2"] and so on. Each of which then
+has two sub elements: ["name,0"] and ["value,1"].
+
+The XML-RPC <array> instead had one ["data,0"] with sub-arrays of
+["value,0"], ["value,1"], ["value,2"] and so on, which would be recursively
+feed through:
+
+
+      xmlrpc_decode_value()
+      ?????????????????????
+      Makes a PHP representation of a part (one must start it with the
+      content of a ["value,0"]) from a xml2array()-compact representation
+      made out of a XML-RPC message.
+
+
+      xmlrpc_compact_value()
+      ??????????????????????
+      Converts a PHP array or scalar variable into an array suitable for
+      transformation into a XML-RPC message string using the array2xml()
+      function then.
+
+
+
+generic functions
+?????????????????
+The xml2array() and array2xml() functions are stupid XML parsers and
+probably only suitable for XML-RPC messages.
+
+
+       xml2array()
+       ???????????
+       Can decode a SimplifiedXML document into an array structure - and this
+       in two formats. Internall xml+rpc uses only the so called "$compact
+       format". If we had a XML document like the following:
+
+       <xml>
+         <more> <string> String </string>
+         </more>
+         <more> <string> String2 </string>
+                <int>5</int>
+         </more>
+       </xml>
+
+       It would return for the $compact=1 format, something like:
+
+       array(
+          "xml,0" => array(
+             "more,0" => array(
+                "string,0" = array(
+                   ",0" => " String "
+                )
+             )
+             "more,1" => array(
+                "string,0" = array(
+                   ",0" => " String2 "
+                ),
+                "int,1" = array(
+                   ",0" => 5
+                )
+             )
+          )
+       );
+
+       Where every tagname had a ","+NUMBER suffix, and text nodes would
+       start with the comma. The numbers are always counted up in each
+       nesting level from 0, regardless if it counted text or tag nodes.
+
+       The not-compact format would hold another subarray to denote a deeper
+       level tag node, but leave the text nodes as entries into the ordering
+       array level. This was more suitable for XML like files, where you had
+       mixed text and tag nodes in a level. For example:
+
+       <html>
+          string1
+          <b>string2</b>
+       </html>
+
+       Would become in the not-compact format:
+
+       array(
+          0 => array(
+             "html" => array(
+                0 => "\n   string1\n   "
+                1 => array(
+                   "b" => array(
+                       0 => "string2",
+                   )
+             )
+          )
+       )
+
+
+       array2xml()
+       ???????????
+       Regenerates a XML stream from an array structure like the one emitted
+       by xml2array().
+
+
+other functions
+???????????????
+If you want a different behaviour, you might want to alter one of
+the following functions.
+
+
+      xmlrpc_method_call()
+      ????????????????????
+      Is responsible in the _server() part for invoking the requested
+      function. It does so by using the $xmlrpc_methods[] array as mapping
+      to the PHP functions to activate.
+
+      If you would like to have a better mapping support, or even to add
+      parameter type and number checking, then this is where you would
+      want to start editing the code.
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/_dt
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/_dt	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/_dt	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,8 @@
+#!/bin/sh
+# runs the `doctests` utility for a given (param) function,
+# simply has some custom pathnames built-in
+MAN=/usr/local/doc/php5-doc/
+PHP=php412
+
+DIR=$(dirname $(dirname $(realpath $0)))
+$DIR/dtools/doctests $PHP $MAN $@

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/ckavail.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/ckavail.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/ckavail.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,70 @@
+<?php
+/*
+   Run this first with an older PHP interpreter, and then with a newer
+   version. This way you get a list (once) of added functions (the func
+   list is stored in a temporary file).
+*/
+$DATA_FILE = "/tmp/ckavail.lst";
+
+#-- load previous list
+if ($f = @fopen($DATA_FILE, "rb")) {
+   $oldl = unserialize(fread($f, 1<<20));
+   fclose($f);
+}
+//echo "OLD=";print_r($oldl);
+
+#-- current func list
+$newl = get_defined_stuff();
+//echo "NEW=";print_r($newl);
+
+#-- save this one
+if ($f = fopen($DATA_FILE, "wb")) {
+   fwrite($f, serialize($newl));
+   fclose($f);
+}
+else {
+   echo "ERROR(could not save current list)\n";
+}
+
+#-- comparison of  current / last run
+echo "old(".count($oldl["functions"])."), new(".count($newl["functions"]).")\n";
+if ($oldl) {
+
+   #-- funcs
+   $new = array_diff($newl["functions"], $oldl["functions"]);
+   echo "New functions added between PHP $oldl[version] and current $newl[version] interpreter:\n";
+   print_r($new);
+
+   #-- constants
+   $new = array_diff(array_keys($newl["constants"]), array_keys($oldl["constants"]));
+   echo "\nNewly added constants:\n";
+   print_r($new);
+
+   #-- classes
+   $new = array_diff($newl["classes"], $oldl["classes"]);
+   echo "\nAnd classes:\n";
+   print_r($new);
+
+}
+else {
+   echo "Now start this script a 2nd time with the newer interpreter version.\n";
+}
+
+
+function get_defined_stuff() {
+   $rl = array();
+   $f = get_defined_functions();
+   while ($f["internal"]) {
+      $f = $f["internal"];
+   }
+   $rl["functions"] = $f;
+   $c = get_defined_constants();
+   $rl["constants"] = $c;
+   $c = get_declared_classes();
+   $rl["classes"] = $c;
+   $rl["version"] = PHP_VERSION;
+   return($rl);
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/compact
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/compact	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/compact	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,12 @@
+#!/bin/sh
+
+#
+#  creates comment+whitespace free version of upgrade.php script
+#
+
+cd `dirname $0`
+cd ..
+
+php -q -w upgrade.php | perl -pe 's/\s*([{}()\[\]=\-\/\$<>+*",;!&|])\s*|\n/$1/gmis;' > contrib/upgrade.php.shortened
+
+ls -l upgrade.php contrib/upgrade.php*

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/doctests
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/doctests	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/doctests	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,160 @@
+#!/usr/local/bin/php -qC
+<?php
+/*
+   Makes small test scripts, which get extracted from the PHP manual
+   on the fly (but not every function has one there, suddenly).
+*/
+
+#-- config
+$PAUSE = 1;   // (use 3) break between tests; you should use `|less` instead
+$CLEAN = 0;   // remove test scripts after use
+$MANY = 1;    // create one testing script per function
+
+
+#-- help
+if (count($_SERVER["argv"]) < 3) {
+   echo<<<END
+
+Usage: doctest  [php-interpreter]  [/path/to/your/php/manual/]
+
+   Runs the examples from your locally installed PHP manual (any language
+   will work, but get the latest!) with the given PHP interpreter version
+   (use an older version to really test the emulated functions). You need
+   lynx or w3m installed also. Use only under U*ix/Linux.
+
+   Pipe the output through |less, |more or |most, there are built-in
+   delays. Rarely example scripts may not run (they are examples only).
+
+END;
+}
+
+#-- proceed
+else {
+
+   #-- args
+   $php = $_SERVER["argv"][1];
+   $php = trim(`which $php`);
+   if (!$php) {
+      die(__FILE__.": Given PHP interpreter not in your %PATH!\n");
+   }
+   $dir = $_SERVER["argv"][2];
+   if (!is_dir($dir) || !file_exists("$dir/function.print.html")) {
+      die(__FILE__.": PHP manual does not live under '$dir'.\n");
+   }
+   ($html = `which w3m`) or ($html = `which lynx`);
+   if (!($html = trim($html))) {
+      die(__FILE__.": lynx or w3m required.\n");
+   }
+   $tmp = "/tmp/upgrade.php.doctest.tmp";
+   $tmpdir = $tmp;
+   if ($MANY) { @unlink($tmpdir); @mkdir($tmpdir); }
+
+   #-- load emulation script
+   $emu = realpath(dirname(__FILE__) . "/../upgrade.php");
+   $emu2 = dirname($emu)."/ext/array.php";
+   $emu3 = dirname($emu)."/ext/mime.php";
+   require($emu);
+
+   #-- get function names
+   $text = file_get_contents($emu);
+   preg_match_all("/function[ ]+([_\w\d]+)\s*\(/", $text, $uu);
+   $funcs = $uu[1];
+   #-- or use user-specified list
+   if (count($_SERVER["argv"]) >= 4) {
+      $funcs = array_slice($_SERVER["argv"], 3);
+   }
+
+   #-- generate list of really emulated functions
+   $simulated = `echo '<?php echo serialize(get_defined_functions()); ?>' | $php -q`;
+   $simulated = unserialize($simulated);
+   $simulated = $simulated["internal"];
+
+   #-- all
+   foreach ($funcs as $func) {
+      if (file_exists($fn = "$dir/function.".strtr($func, "_", "-").".html")) {
+         echo "checking function '\033[31m$func\033[37m'... ";
+
+         #-- only run over emulated stuff
+         if (in_array($func, $simulated)) {
+            echo "NOT EMULATED (with your PHP version)... ";
+            // continue;
+         }
+
+         #-- grep example scripts
+         $text = `$html -dump $fn`;
+         preg_match_all("/<\?php(.+?)\?".">/ms", $text, $uu);
+
+         #-- exec each
+         if ($n = count($uu[1])) {
+
+            #-- note
+            echo "$n examples:\n\n";
+
+            #-- multiple scripts to run
+            foreach ($uu[1] as $i=>$scr) {
+
+               #-- fix output-less scripts: find last assigned-to variable name
+               if (!strpos($scr, "echo") && !strpos($scr, "print")) {
+                  if (preg_match('/^.+(\$[_\w\d\[\"\'\]]+)\s*=/s', $scr, $uu)) {
+                     $scr .= "\n\n#-- auto-added\nprint_r($uu[1]);\n";
+                  }
+                  else {
+                     $scr .= "\n\n#-- this script gives no useful output, or does it?";
+                  }
+               }
+
+               #-- fix compatibility to older PHP versions
+               $scr = preg_replace('/(\s)private(\s\$)/', '$1var$2', $scr);
+
+               #-- output sample script text from doc
+               if ($i) {
+                  echo "\n++++++++++++++++++++++++++++\n\n";
+                  sleep($PAUSE);
+               }
+               echo "\033[1;30m<?php $scr\n?".">\033[0;37m\n";
+
+               #-- create temp script, run it
+               if ($MANY) {
+                  $tmp = "$tmpdir/$func#$i.php";
+               }
+               $scr = ltrim($scr);
+               file_put_contents(
+                  $tmp,
+                  "<?php\n\n".
+                  "#-- a test script for emulated function '$func'\n".
+                  "if (function_exists('$func')) { echo \"ATTENTION: the native '$func' function will engage for this test\\n\"; }\n".
+                  "include('$emu');\n".
+                  "include('$emu2');\n".
+                  "include('$emu3');\n".
+                  "error_reporting(E_ALL);\n\n".
+                  "#-- example[$i] as taken from PHP manual page '$fn'\n".
+                  "$scr\n".
+                  "\n?".">"
+               );
+               echo "==>\033[32m\n";
+               passthru("$php $tmp");
+               echo "\033[0;37m\n\n";
+            }
+
+            #-- pause before next func/script
+            sleep($PAUSE);
+            echo "\n-------------------------------------------------------------------\n\n";
+         }
+
+         else {
+            echo "NO EXAMPLES found in doc, skipping";
+         }
+         echo "\n";
+      }
+   }
+
+   #-- clean up
+   if ($CLEAN) {
+      unlink($tmp);
+   }
+}
+
+#-- even more clean
+if ($MANY && CLEAN) { @rmdir($tmpdir); }
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/listemu
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/listemu	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/listemu	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,31 @@
+#!/usr/local/bin/php -qC
+<?php
+/*
+   Prints the list of emulated functions.
+*/
+
+#-- basedir
+$dir = realpath(dirname(__FILE__) . "/../");
+
+#-- grep for function definitions
+$text = "";
+$text .= implode("", file("$dir/upgrade.php"));
+$text .= implode("", file("$dir/ext/array.php"));
+$text .= implode("", file("$dir/ext/bcmath.php"));
+$text .= implode("", file("$dir/ext/gettext.php"));
+$text .= implode("", file("$dir/ext/mime.php"));
+$text .= implode("", file("$dir/ext/old.php"));
+$text .= implode("", file("$dir/ext/posix.php"));
+$text .= implode("", file("$dir/ext/ctype.php"));
+$text .= implode("", file("$dir/ext/odbc.php"));
+if (preg_match_all("/function[ ]+([_\w\d]+)\s*\(/", $text, $uu)) {
+   $list = array_unique($uu[1]);
+}
+
+#-- print
+echo "Following functions can be emulated currently:\n";
+foreach ($list as $func) {
+   echo "? $func\n";
+}
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/updoc
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/updoc	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/dtools/updoc	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,128 @@
+#!/usr/local/bin/php -qC
+<?php
+/*
+   Adds hints about emulation functions to your local PHP documentation.
+*/
+
+#-- help
+if ($_SERVER["argc"] < 2) {
+
+   echo<<<END
+
+Usage: updoc [.../upgrade.php] /path/to/your/php-doc/directory/
+ 
+   This script will update your PHP documentation, if you have the
+   (DocBook-converted) multi-html-files version installed. The first
+   parameter must be the filepath to the 'upgrade.php' script, so the
+   names of the emulated functions are known.
+
+   You will afterwards find the abbreviation "EMU" in the required-
+   PHP-version line throughout the documentation, so you know which
+   functions you could safely use from now on (= without backwards
+   compatibility stomachaches).
+
+
+END;
+
+}
+
+#-- run
+else {
+   error_reporting(0);
+
+   #-- params
+   $emu = $_SERVER["argv"][1];
+   $dir = $_SERVER["argv"][2];
+   if (!$dir) {
+      $dir = $emu;
+      $emu = dirname(__FILE__)."/../upgrade.php";
+   }
+   if (!is_dir($dir)) {
+      die("The given 'PHP doc directory' of \"$dir\" isn't!\n");
+   }
+   if (!file_exists($emu)) {
+      die("Couldn't find 'upgrade.php' script under the given name \"$emu\".\n");
+   }
+   
+   #-- grep for function definitions
+   $text = implode("", file($emu));
+   if (preg_match_all("/function[ ]+([_\w\d]+)\s*\(/", $text, $uu)) {
+      $list = $uu[1];
+   }
+   
+   #-- go thru doc
+   if ($list) {
+      $chng = 0;
+      foreach ($list as $func) {
+      
+         #-- doc filename
+         if (file_exists($fn = "$dir/function.".strtr($func, "_", "-").".html")) {
+            $f = fopen($fn, "r");
+            $html = fread($f, 1<<20);
+            fclose($f);
+            
+            #-- update if no hint found yet
+            if (!preg_match('/\(.*?(EMU|UP).*?\)/i', $html)) {
+               $l = strpos($html, ")"); 
+               $html = substr($html, 0, $l)
+                     . ", EMU"
+                     . substr($html, $l);
+               $f = fopen($fn, "w");
+               fwrite($f, $html);
+               fclose($f);
+               
+               $chng += 1;
+            }
+         }
+      }
+      
+      echo "$chng documentation files updated.\n";
+   }
+
+   #-- add some special files
+   $add_files = array(
+      array(
+         "func"=>"gzdecode",
+         "data"=>"PGh0bWw+PGhlYWQ+PHRpdGxlPmd6ZGVjb2RlPC90aXRsZT48L2hlYWQ+Cjxib2R5Pgo8ZGl2IGFsaWduPSJjZW50ZXIiPnVwZ3JhZGUucGhwIGRvYzwvZGl2Pgo8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+CiAgPHRkIGFsaWduPSJsZWZ0Ij48YSBocmVmPSJmdW5jdGlvbi5nemRlZmxhdGUuaHRtbCI+YmFjazwvYT48L3RkPgogIDx0ZCBhbGlnbj0icmlnaHQiPjxhIGhyZWY9ImZ1bmN0aW9uLmd6ZW5jb2RlLmh0bWwiPm5leHQ8L2E+PC90ZD4KPC90cj48L3RhYmxlPgo8aHIgYWxpZ249IkxFRlQiIHdpZHRoPSIxMDAlIj4KCjxoMT5nemRlY29kZTwvaDE+Cgo8cD4oUEhQIDYsIEVNVSk8L3A+CgpnemRlY29kZSZuYnNwOy0tJm5ic3A7RGVjb2RlcyBhIGd6aXAgY29tcHJlc3NlZCBzdHJpbmc8L2Rpdj4KCjxoMj5EZXNjcmlwdGlvbjwvaDI+CgpzdHJpbmcgPGIgY2xhc3M9Im1ldGhvZG5hbWUiPmd6ZGVjb2RlPC9iPiAoIHN0cmluZyBkYXRhIFssIGludCBtYXhsZW5dKTxicj4KPGJyPgo8cD5UaGlzIGZ1bmN0aW9uIGRlY29kZXMgYSBzdHJpbmcgY29tcHJlc3NlZCBieSB0aGUgCjxhIGhyZWY9ImZpbGU6Ly8vdXNyL3NoYXJlL21hbi9tYW4xL2d6aXAuMS5neiI+Z3ppcCgxKTwvYT4gdXRpbGl0eSBvcgp0aGUgPGEgY2xhc3M9ImZ1bmN0aW9uIiBocmVmPSJmdW5jdGlvbi5nemVuY29kZS5odG1sIj5nemVuY2!
 9kZSgpPC9hPgpmdW5jdGlvbi4gVGhlIG9wdGlvbmFsIHBhcmFtZXRlciAnbWF4bGVuJyBsaW1pdHMgdGhlIGxlbmd0aCBvZiB0aGUgcmV0dXJuZWQKc3RyaW5nIC0gaWYgdGhlIGluZmxhdGlvbiBwcm9jZXNzIHJldHVybmVkIGEgYmlnZ2VyIHJlc3VsdCBpdCB3b3VsZCBiZSBkcm9wcGVkLgo8L3A+Cgo8cD5UaGUgZ3ppcCBmb3JtYXQgaW50ZXJuYWxseSB1c2VzIHRoZSBkZWZsYXRlIGFsZ29yaXRobSwgYW5kIGFkZHMgYSBmZXcKY2hlY2tzdW1zIGFuZCBvcHRpb25hbCBtZXRhIGRhdGEgZmllbGRzLiBJdCBpcyByZWd1bGFyaWx5IHVzZWQgYXMKY29udGVudC1jb2RpbmcgaW4gSFRUUCByZXF1ZXN0cyBhbmQgcmVzcG9uc2VzLiBTZWUKPGEgaHJlZj0iaHR0cDovL3d3dy5mYXFzLm9yZy9yZmNzL3JmYzE5NTIiPlJGQzE5NTI8L2E+IGZvciB0aGUgZm9ybWF0CmRlc2NyaXB0aW9uLjwvcD4KCjxwPgpTZWUgYWxzbyA8YSBocmVmPSJmdW5jdGlvbi5nemVuY29kZS5odG1sIj48YiBjbGFzcz0iZnVuY3Rpb24iPmd6ZW5jb2RlKCk8L2I+PC9hPgphbmQgPGEgaHJlZj0iZnVuY3Rpb24uZ3ppbmZsYXRlLmh0bWwiPjxiIGNsYXNzPSJmdW5jdGlvbiI+Z3ppbmZsYXRlKCk8L2I+PC9hPi4KPC9wPgoKPHA+Rm9yIGNvbXBhdGliaWxpdHkgd2l0aCBvbGRlciBQSFAgdmVyc2lvbnMgKGFuZCBmb3IgcGVvcGxlIHRoYXQgYXJlCnVud2lsbGluZyB0byBsb2FkICd1cGdyYWRlLnBocCcpLCB5b3UgY2FuIHVzZSBmb2xsb3!
 dpbmcgKHVuY2xlYW4pCndvcmthcm91bmQgZm9yIGRlY29tcHJlc3NpbmcgZ3pp!
 cGVkIGRh
dGE6PGJyPgo8YnI+CjxiPkV4YW1wbGUgMTwvYj46PGJyPgo8YnI+Cjxjb2RlPgombmJzcDsgICRnemRhdGEgPSBnemVuY29kZSgiSSdtIGdldHRpbmcgY29tcHJlc3NlZC4uLiIpOzxicj4KPGJyPgombmJzcDsgICRzdHIgPSBmdW5jdGlvbl9leGlzdHMoImd6ZGVjb2RlIik8YnI+CiZuYnNwOyAmbmJzcDsgJm5ic3A7ICA/IGd6ZGVjb2RlKCRnemRhdGEpPGJyPgombmJzcDsgJm5ic3A7ICZuYnNwOyAgOiBnemluZmxhdGUoc3Vic3RyKCRnemRhdGEsIDEwLCAtOCkpOzxicj4KPGJyPgo8L2NvZGU+CjwvcD4KCjxocj4KPHRhYmxlIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+PHRyPgogIDx0ZCB3aWR0aD0iMzMlIiBhbGlnbj0ibGVmdCI+PGEgaHJlZj0iZnVuY3Rpb24uZ3pkZWZsYXRlLmh0bWwiPmJhY2s8L2E+PGJyPmd6ZGVmbGF0ZTwvdGQ+CiAgPHRkIHdpZHRoPSIzMyUiIGFsaWduPSJjZW50ZXIiPjxhIGhyZWY9InJlZi56bGliLmh0bWwiPnVwPC9hPjxicj56bGliIG92ZXJ2aWV3PC90ZD4KICA8dGQgd2lkdGg9IjMzJSIgYWxpZ249InJpZ2h0Ij48YSBocmVmPSJmdW5jdGlvbi5nemVuY29kZS5odG1sIj5uZXh0PC9hPjxicj5nemVuY29kZTwvdGQ+CjwvdHI+PC90YWJsZT4KCjwvYm9keT4KPC9odG1sPgo=",
+         "sect"=>"zlib", "after"=>"gzencode",
+         "desc"=>"Decode a gzip compressed string",
+      ),
+   );
+   foreach ($add_files as $data) {
+      extract($data);
+      if (!file_exists($fn = "$dir/function.$func.html")
+||1) {
+         echo "adding \"$fn\"\n";
+         $f = fopen($fn, "w");
+         fwrite($f, base64_decode($data));
+         fclose($f);
+
+         #-- update function list page
+         $fn = array("$dir/ref.$sect.html", "$dir/index.functions.html");
+         update_files($fn, "/(<a\s+href=\"function.$after)/ims",
+            "<a href=\"function.$func.html\">$func</a> -- $desc.</dt>\n<dt> $1"
+         ); 
+      }
+   }
+
+}
+
+
+#-- inject something into a file
+function update_files($list, $regex, $replace) {
+   if (!is_array($list)) {
+      $list = array($list);
+   }
+   foreach ($list as $fn) {
+echo "+$fn\n";
+      $f = fopen($fn, "r");
+      $html = fread($f, 1<<20);
+      fclose($f);
+      $html = preg_replace($regex, $replace, $html);
+      $f = fopen($fn, "w");
+      fwrite($f, $html);
+      fclose($f);
+   }
+}
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/array.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/array.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/array.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,266 @@
+<?php
+/*
+   Extended PHP array functions - _diff and _intersect() for associative
+   arrays and/or with callback functions (for keys and/or values). These
+   are too rarely used and exotic to be part of the core "upgrade.php"
+   script.
+   
+   NOTHING IN HERE WAS SERIOUSLY TESTED. Please grab the definitions from
+   "PEAR::PHP_Compat" if you want reliable and tested versions.
+*/
+
+
+#-- diff associative arrays with two user callbacks
+#   (if this looks complicated to you, don't even try to look at the manual)
+if (!function_exists("array_udiff_uassoc")) {
+   function array_udiff_uassoc() {
+      $in = func_get_args();
+      $key_cb = array_pop($in);
+      $val_cb = array_pop($in);
+      $arr1 = array_shift($in);
+      $r = array();
+      
+      foreach ($arr1 as $i=>$v) {
+         #-- in each array, compare against each key/value pair
+         foreach (array_keys($in) as $c) {
+            foreach ($in[$c] as $i2=>$v2) {
+               
+               $key_cmp = call_user_func_array($key_cb, array($i, $i2));
+               if ($key_cmp == 0) {
+
+                  #-- ok, in this case we must compare the data as well
+                  $val_cmp = call_user_func_array($val_cb, array($v, $v2));
+                  if ($val_cmp == 0) {
+                     continue 3;
+                  }
+               }
+            }
+         }
+
+         #-- this combination isn't really found anywhere else
+         $r[$i] = $v;
+      }
+      return($r);
+   }
+}
+
+
+#-- same, but that keys now are compared normally (without callback)
+if (!function_exists("array_udiff_assoc")) {
+   function array_udiff_assoc() {
+      $in = func_get_args();
+      $val_cb = array_pop($in);
+      $arr1 = array_shift($in);
+      $r = array();
+      
+      #-- compare against each key/value pair in other arrays
+      foreach ($arr1 as $i=>$v) {
+         foreach (array_keys($in) as $c) {
+            if (isset($in[$c][$i])) {
+               #-- now compare data by callback
+               $cmp = call_user_func_array($val_cb, array($v, $in[$c][$i]));
+               if ($cmp == 0) {
+                   continue 2;
+               }
+            }
+         }
+         #-- everything exists only in array1
+         $r[$i] = $v;
+      }
+      return($r);
+   }
+}
+
+
+#-- ....
+if (!function_exists("array_diff_uassoc")) {
+   function array_diff_uassoc() {
+      $in = func_get_args();
+      $key_cb = array_pop($in);
+      $arr1 = array_shift($in);
+      $num = count($in);
+      $r = array();
+      
+      foreach ($arr1 as $i=>$v) {
+         #-- in other arrays?
+         for ($c=0; $c<$num; $c++) {
+            foreach ($in[$c] as $i2=>$v2) {
+               if ($v == $v2) {
+                  $cmp = call_user_func_array($key_cb, array($i, $i2));
+                  if ($cmp == 0) {
+                     continue 3;
+                  }
+               }
+            }
+         }
+         #-- exists only in array1
+         $r[$i] = $v;
+      }
+      return($r);
+   }
+}
+
+
+#-- diff array, keys ignored, callback for comparing values
+if (!function_exists("array_udiff")) {
+   function array_udiff() {
+      $in = func_get_args();
+      $val_cb = array_pop($in);
+      $arr1 = array_shift($in);
+      $num = count($in);
+      $r = array();
+      foreach ($arr1 as $i=>$v) {
+         #-- check other arrays
+         for ($c=0; $c<$num; $c++) {
+            foreach ($in[$c] as $v2) {
+               $cmp = call_user_func_array($val_cb, array($v, $v2));
+               if ($cmp == 0) {
+                  continue 3;
+               }
+            }
+         }
+         #-- exists only in array1
+         $r[$i] = $v;
+      }
+      return($r);
+   }
+}
+
+
+
+
+
+
+
+
+
+
+
+
+#-- same for intersections
+if (!function_exists("array_uintersect_uassoc")) {
+   function array_uintersect_uassoc() {
+      $in = func_get_args();
+      $key_cb = array_pop($in);
+      $val_cb = array_pop($in);
+      $all = array();
+      $conc = count($in);
+      foreach ($in[0] as $i=>$v) {
+         #-- must exist in each array (at least once, callbacks may match fuzzy)
+         for ($c=1; $c<$conc; $c++) {
+            $ok = false;
+            foreach ($in[$c] as $i2=>$v2) {
+               $key_cmp = call_user_func_array($key_cb, array($i, $i2));
+               $val_cmp = call_user_func_array($val_cb, array($v, $v2));
+               if (($key_cmp == 0) && ($val_cmp == 0)) {
+                  $ok = true;
+                  break;
+               }
+            }
+            if (!$ok) {
+               continue 2;
+            }
+         }
+         #-- exists in all arrays
+         $all[$i] = $v;
+      }
+      return($all);
+   }
+}
+
+
+
+
+#-- intersection again
+if (!function_exists("array_uintersect_assoc")) {
+   function array_uintersect_assoc() {
+      $in = func_get_args();
+      $val_cb = array_pop($in);
+      $all = array();
+      $conc = count($in);
+      foreach ($in[0] as $i=>$v) {
+         #-- test for that entry in any other array
+         for ($c=1; $c<$conc; $c++) {
+            if (isset($in[$c][$i])) {
+               $cmp = call_user_func_array($val_cb, array($v, $in[$c][$i]));
+               if ($cmp == 0) { continue; }
+            }
+            #-- failed
+            continue 2;
+         }
+         #-- exists in all arrays
+         # (but for fuzzy matching: only the first entry will be returned here)
+         $all[$i] = $v;
+      }
+      return($all);
+   }
+}
+
+
+
+
+
+#-- array intersection, no keys compared, but callback for values
+if (!function_exists("array_uintersect")) {
+   function array_uintersect() {
+      $in = func_get_args();
+      $val_cb = array_pop($in);
+      $arr1 = array_shift($in);
+      $num = count($in);
+      $r = array();
+
+      foreach ($arr1 as $i=>$v) {
+         #-- must have equivalent value in all other arrays
+         for ($c=0; $c<$num; $c++) {
+            foreach ($in[$c] as $i2=>$v2) {
+               $cmp = call_user_func_array($val_cb, array($v, $v2));
+               if ($cmp == 0) {
+                  continue 2; //found
+               }
+            }
+            continue 2; //failed
+         }
+         #-- everywhere
+         $r[$i] = $v;
+      }
+      return($r);
+   }
+}
+
+
+
+
+#-- diff array, keys ignored, callback for comparing values
+if (!function_exists("array_intersect_uassoc")) {
+   function array_intersect_uassoc() {
+      $args = func_get_args();
+      $key_cb = array_pop($args);
+      $array1 = array_shift($args);
+      $num = count($args);
+      $all = array();
+      foreach ($array1 as $i=>$v) {
+         #-- look through other arrays
+         for ($c=0; $c<$num; $c++) {
+            $ok = 0;
+            foreach ($args[$c] as $i2=>$v2) {
+               $cmp = call_user_func_array($key_cb, array($i, $i2));
+               if (($cmp == 0) && ($v == $v2)) {
+                  $ok = 1;
+                  continue 2;
+               }
+            }
+            if (!$ok) { 
+               continue 2;
+            }
+         }
+         #-- found in all arrays
+         if ($ok) {
+            $diff[$i] = $v;
+         }
+      }
+      return($diff);
+   }
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/base64.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/base64.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/base64.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,39 @@
+<?php
+/*
+   This script implements the base64-encoding functions and base32 and
+   base16 as described in RFC3548.
+*/
+if (!function_exists("base16_encode")) {
+
+
+   #-- URL and filename safe variants of base64-encoding
+   function base64_encode_safe($str) {
+      return strtr(base64_encode($str), "+/", "-_");
+   }
+   function base64_decode_safe($b64) {
+      return base64_decode(strtr($str, "-_", "+/"));
+   }
+
+
+   #-- base16
+   function base16_encode($str) {
+      $str = unpack("H".(2*strlen($str)), $str);
+      $str = chunk_split($str[1]);
+      return($str);
+   }
+   function base16_decode($b16) {
+      $b16 = preg_replace("/\s+/", '', $b16);
+      $b16 = pack("H*", $b16);
+      return($b16);
+   }
+
+
+   #-- base32
+   function base32_encode() {
+      
+      # strtoupper()
+      # "A-Z,0-7,="
+   }
+
+}
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/bcmath.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/bcmath.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/bcmath.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,164 @@
+<?php
+/*
+   Emulates mathematical functions with arbitrary precision (bcmath)
+   using POSIX systems 'dc' utility or either GMP or PHPs bigint
+   extension module as fallback (were faster, but wouldn't allow to
+   set precisions).
+*/
+
+
+#-- BSD/Linux dc(1)
+if (!function_exists("bcadd") && is_executable("/usr/bin/dc")) {
+
+   #-- invokes commandline 'dc' utility (faster than with 'bc')
+   #   (later version should use proc_open() for safer and faster bi-directional I/O)
+   function dc___exec($calc, $scale=NULL) {
+      global $bc___scale;
+
+      #-- assemble dc expression
+      $calc = str_replace(' -', ' _', $calc);  // convert minus signs for dc
+      if (isset($scale) || ($scale = $bc___scale)) {
+         $calc = ((int)$scale) . "k" . $calc;  // inject precision directive
+      }
+      $calc = escapeshellarg($calc);   // could be non-integer from elsewhere
+      
+      #-- prevent any command execution from within dc
+      # (for speed reasons we don't assert parameters to be fully numeric)
+      if (strpos($calc, "!")) { return; }
+
+      #-- do
+      return str_replace("\\\n", "", `/usr/bin/dc -e $calc`);
+   }
+
+   #-- global state variable
+   $GLOBALS["bc___scale"] = 0;  //ini_get("bcmath.scale");  // =0
+   function bcscale($scale=NULL) {
+      $GLOBALS["bc___scale"] = $scale;
+   }
+
+   #-- wrapper calls
+   function bcadd($a, $b, $scale=NULL) {
+      return dc___exec(" $a $b +nq", $scale);
+   }
+   function bcsub($a, $b, $scale=NULL) {
+      return dc___exec(" $a $b-nq", $scale);  // no space before '-' cmd!
+   }
+   function bcmul($a, $b, $scale=NULL) {
+      return dc___exec(" $a $b *nq", $scale);
+   }
+   function bcdiv($a, $b, $scale=NULL) {
+      return dc___exec(" $a $b /nq", $scale);
+   }
+   function bcmod($a, $b, $scale=0) {
+      return dc___exec(" $a $b %nq", $scale);
+   }
+   function bcpow($a, $b, $scale=NULL) {
+      return dc___exec(" $a $b ^nq", $scale);
+   }
+   function bcpowmod($x, $y, $mod, $scale=0) {
+      return dc___exec(" $x $y $mod |nq", $scale);  // bc(1) wouldn't work
+   }
+   function bcsqrt($x, $scale=NULL) {
+      return dc___exec(" $x vnq", $scale);
+   }
+
+   #-- looks slightly more complicated in dc notation
+   function bccomp($a, $b, $scale=NULL) {
+      bc___scaledown($a, $scale);
+      bc___scaledown($b, $scale);
+      return (int) dc_exec(" $a 1*sA $b 1*sB  lBlA[1nq]sX>X lBlA[_1nq]sX<X 0nq", $scale);
+   }
+   function bc___scaledown(&$a, $scale) {
+      if (isset($scale) && ($dot = strpos($a, $dot))) {
+         $a = substr($a, $dot + $scale) . "0";
+      }
+   }
+
+}//shell version
+
+
+
+#-- GMP
+if (!function_exists("bcadd") && function_exists("gmp_strval")) {
+   function bcadd($a, $b) {
+      return gmp_strval(gmp_add($a, $b));
+   }
+   function bcsub($a, $b) {
+      return gmp_strval(gmp_sub($a, $b));
+   }
+   function bcmul($a, $b) {
+      return gmp_strval(gmp_mul($a, $b));
+   }
+   function bcdiv($a, $b, $precision=NULL) {
+      $qr = gmp_div_qr($a, $b);
+      $q = gmp_strval($qr[0]);
+      $r = gmp_strval($qr[1]);
+      if ((!$r) || ($precision===0)) {
+         return($q);
+      }
+      else {
+         if (isset($precision)) {
+            $r = substr($r, 0, $precision);
+         }
+         return("$q.$r");
+      }
+   }
+   function bcmod($a, $b) {
+      return gmp_strval(gmp_mod($a, $b));
+   }
+   function bcpow($a, $b) {
+      return gmp_strval(gmp_pow($a, $b));
+   }
+   function bcpowmod($x, $y, $mod) {
+      return gmp_strval(gmp_powm($x, $y, $mod));
+   }
+   function bcsqrt($x) {
+      return gmp_strval(gmp_sqrt($x));
+   }
+   function bccomp($a, $b) {
+      return gmp_cmp($a, $b);
+   }
+   function bcscale($scale="IGNORED") {
+      trigger_error("bcscale(): ignored", E_USER_ERROR);
+   }
+}//gmp emulation
+
+
+
+#-- bigint
+// @dl("php_big_int".PHP_SHLIB_SUFFIX))
+if (!function_exists("bcadd") && function_exists("bi_serialize")) {
+   function bcadd($a, $b) {
+      return bi_to_str(bi_add($a, $b));
+   }
+   function bcsub($a, $b) {
+      return bi_to_str(bi_sub($a, $b));
+   }
+   function bcmul($a, $b) {
+      return bi_to_str(bi_mul($a, $b));
+   }
+   function bcdiv($a, $b) {
+      return bi_to_str(bi_div($a, $b));
+   }
+   function bcmod($a, $b) {
+      return bi_to_str(bi_mod($a, $b));
+   }
+   function bcpow($a, $b) {
+      return bi_to_str(bi_pow($a, $b));
+   }
+   function bcpowmod($a, $b, $c) {
+      return bi_to_str(bi_powmod($a, $b, $c));
+   }
+   function bcsqrt($a) {
+      return bi_to_str(bi_sqrt($a));
+   }
+   function bccomp($a, $b) {
+      return bi_cmp($a, $b);
+   }
+   function bcscale($scale="IGNORED") {
+      trigger_error("bcscale(): ignored", E_USER_ERROR);
+   }
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/ctype.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/ctype.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/ctype.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,210 @@
+<?php
+/*
+   These functions emulate the "character type" extension, which is
+   present in PHP first since version 4.3 per default. In this variant
+   only ASCII and Latin-1 characters are being handled. The first part
+   is eventually faster.
+*/
+
+
+#-- regex variants
+if (!function_exists("ctype_alnum")) {
+   function ctype_alnum($text) {
+      return preg_match("/^[A-Za-z\d\300-\377]+$/", $text);
+   }
+   function ctype_alpha($text) {
+      return preg_match("/^[a-zA-Z\300-\377]+$/", $text);
+   }
+   function ctype_digit($text) {
+      return preg_match("/^\d+$/", $text);
+   }
+   function ctype_xdigit($text) {
+      return preg_match("/^[a-fA-F0-9]+$/", $text);
+   }
+   function ctype_cntrl($text) {
+      return preg_match("/^[\000-\037]+$/", $text);
+   }
+   function ctype_space($text) {
+      return preg_match("/^\s+$/", $text);
+   }
+   function ctype_upper($text) {
+      return preg_match("/^[A-Z\300-\337]+$/", $text);
+   }
+   function ctype_lower($text) {
+      return preg_match("/^[a-z\340-\377]+$/", $text);
+   }
+   function ctype_graph($text) {
+      return preg_match("/^[\041-\176\241-\377]+$/", $text);
+   }
+   function ctype_punct($text) {
+      return preg_match("/^[^0-9A-Za-z\000-\040\177-\240\300-\377]+$/", $text);
+   }
+   function ctype_print($text) {
+      return ctype_punct($text) && ctype_graph($text);
+   }
+
+}
+
+
+/***<old>
+
+#-- simple char-by-char comparisions
+if (!function_exists("ctype_alnum")) {
+
+
+   #-- true if string is made of letters and digits only
+   function ctype_alnum($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r and (
+                ($c>=65) && ($c<=90)    // A-Z
+             or ($c>=97) && ($c<=122)   // a-z
+             or ($c>=48) && ($c<=59)    // 0-9
+             or ($c>=192)          // Latin-1 letters
+         );
+      }
+      return($r);
+   }
+
+
+   #-- only letters in given string
+   function ctype_alpha($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r and (
+                ($c>=65) && ($c<=90)    // A-Z
+             or ($c>=97) && ($c<=122)   // a-z
+             or ($c>=192)          // Latin-1 letters
+         );
+      }
+      return($r);
+   }
+
+
+   #-- only numbers in string
+   function ctype_digit($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r and ($c>=48) && ($c<=59);   // 0-9
+      }
+      return($r);
+   }
+
+
+   #-- hexadecimal numbers only
+   function ctype_xdigit($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r and (
+                ($c>=48) && ($c<=59)    // 0-9
+             or ($c>=65) && ($c<=70)    // A-F
+             or ($c>=97) && ($c<=102)   // a-f
+         );
+      }
+      return($r);
+   }
+
+
+   #-- hexadecimal numbers only
+   function ctype_cntrl($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r and ($c < 32);
+      }
+      return($r);
+   }
+
+
+   #-- hexadecimal numbers only
+   function ctype_space($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = $text{$i};
+         $r = $r and (
+              ($c == " ") or ($c == "\240")
+           or ($c == "\n") or ($c == "\r")
+           or ($c == "\t") or ($c == "\f")
+         );
+      }
+      return($r);
+   }
+
+
+   #-- all-uppercase
+   function ctype_upper($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r and (
+                ($c>=65) && ($c<=90)    // A-Z
+             or ($c>=192) && ($c<=223)  // Latin-1 letters
+         );
+      }
+      return($r);
+   }
+
+
+   #-- all-lowercase
+   function ctype_lower($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r and (
+                ($c>=97) && ($c<=122)   // a-z
+             or ($c>=224) && ($c<=255)  // Latin-1 letters
+         );
+      }
+      return($r);
+   }
+
+
+   #-- everything except spaces that produces a valid printable output
+   #   (this probably excludes contral chars as well)
+   function ctype_graph($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r
+           and ($c>=33)
+           and ($c!=160)
+           and (($c<=126) or ($c>=161));
+      }
+      return($r);
+   }
+
+
+   #-- everything printable, but no spaces+letters+digits
+   function ctype_punct($text) {
+      $r = true;
+      for ($i=0; $i<strlen($text); $i++) {
+         $c = ord($text{$i});
+         $r = $r and (
+                ($c>=33) && ($c<=47)   // !../
+             or ($c>=58) && ($c<=64)   // :..@
+             or ($c>=91) && ($c<=96)   // [..`
+             or ($c>=123) && ($c<=126) // {..~
+             or ($c>=161) && ($c<=191) // Latin-1 everything else
+         );
+      }
+      return($r);
+   }
+
+
+
+//   - no idea what this means exactly
+//
+//   function ctype_print($text) {
+//   }
+
+
+}
+
+
+</old>***/
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/dba.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/dba.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/dba.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,61 @@
+<?php
+/*
+   Load this with plugins/db/dba.php if your PHP provides only the
+   older dbm_*() functions.
+*/
+
+
+#-- fake dba_* using dbm_* functions
+if (!function_exists("dba_open") && function_exists("dbm_open")) {
+
+   function dba_open($path, $mode, $handler, $a1=0) {
+      if ($handler == "dbm") {
+         return(dbmopen($path, $mode));
+      }
+      else return(false);
+   }
+
+   function dba_popen($a, $b, $c, $d=0) {
+      return(dba_open($a, $b, $c));
+   }
+
+   function dba_exists($key, $handle) {
+      return(dbmexists($handle, $key));
+   }
+
+   function dba_fetch($key, $handle) {
+      return(dbmfetch($handle, $key));
+   }
+
+   function dba_insert($key, $string, $handle) {
+      return(dbminsert($handle, $key, $string));
+   }
+
+   function dba_replace($key, $string, $handle) {
+      return(dbmreplace($handle, $key, $string));
+   }
+
+   function dba_delete($key, $handle) {
+      return(dbmdelete($handle, $key));
+   }
+
+   function dba_firstkey($handle) {
+      return($GLOBALS["dbm_lastkey"] = dbmfirstkey($handle));
+   }
+
+   function dba_nextkey($handle) {
+      return(dbmnextkey($handle, $GLOBALS["dbm_lastkey"]));
+   }
+
+   function dba_close($handle) {
+      return(dbmclose($handle));
+   }
+
+   function dba_handlers() {
+      return(array("dbm"));
+   }
+
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/exotic.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/exotic.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/exotic.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,82 @@
+<?php
+/*
+   Following funtions have been removed from the core emulation script, because
+   they are considered too special to be commonly used in WWW scripts. Anybody
+   using them, probably takes extra precautions prior calling them (you could
+   still load this script). Some of these functions could also be too difficult
+   to be reimplemented 100% exactly.
+*/
+
+
+
+#-- calls PHP interpreter itself (really only works with 4.3 onwards)
+#   (you should use the PHP_Compat implementation of this preferably)
+if (!function_exists("php_strip_whitespace")) {
+   function php_strip_whitespace($fn) {
+      // alternatives would be using te tokenizer or
+      // some regexs to strip unwanted content parts
+      // (PEAR::PHP_Compat simply calls the tokenizer)
+      $fn = escapeshellcmd($fn);
+      $text = `php -wqCf '$fn'`;
+      if (!$text) {
+         $text = implode("", file($fn));
+      }
+      return $text;
+   }
+}
+
+
+#-- invocates PHP interpreter to do the syntax check (nothing else can do)
+#   (you should use the PHP_Compat implementation of this preferably)
+if (!function_exists("php_check_syntax")) {
+   function php_check_syntax($fn) {
+      $args = func_get_args();
+      if (count($args)>1) {
+         $result = & $args[1];
+      }
+      $fn = escapeshellcmd($fn);
+      $result = system("php -lqCf '$fn'", $err);
+      return($err==0);
+   }
+}
+
+
+#-- print enumerated lsit of last-called functions
+if (!function_exists("debug_print_backtrace") && function_exists("debug_backtrace")) {
+   function debug_print_backtrace() {
+      $d = debug_backtrace();
+      foreach ($d as $i=>$info) {
+         #-- index
+         echo "#" . ($i) . "  ";
+         
+         #-- function name
+         if (isset($info["class"])) {
+            echo "$info[class]::";
+         }
+         if (isset($info["object"])) {
+            echo "\$$info[object]->";
+         }
+         echo "$info[function]";
+         
+         #-- args
+         echo "(";
+         foreach ($info["args"] as $a) {
+            echo str_replace("\n", "", var_export($a, 1)) . ", ";
+         }
+         echo ")";
+         
+         #-- caller
+         echo " called at [";
+         if ($info["file"]) {
+            echo $info["file"] . ":" . $info["line"];
+         }
+         else {
+            echo "unknown_location";
+         }
+         echo "]\n";
+      }
+   }
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/fakezlib.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/fakezlib.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/fakezlib.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,162 @@
+<?php
+/*
+   This script simulates the gz*() functions, without actually providing
+   compression functionality. The generated data streams will be correct,
+   but reading compressed files isn't possible.
+   
+   Not very useful; should only be used if there is no other way. But if
+   your provider seriously doesn't have PHP with builtin zlib support,
+   you were better off simply switching to someone else!
+*/
+
+
+ #-- fake zlib
+ if (!function_exists("gzopen")) {
+
+    function gzopen($fp, $mode) {
+       $mode = preg_replace('/[^carwb+]/', '', $mode);
+       return(fopen($fp, $mode));
+    }
+    function gzread($fp, $len) {
+       return(fread($fp, $len));
+    }
+    function gzwrite($fp, $string) {
+       return(fwrite($fp, $string));
+    }
+    function gzputs($fp, $string) {
+       return(fputs($fp, $string));
+    }
+    function gzclose($fp) {
+       return(fclose($fp));
+    }
+    function gzeof($fp) {
+       return(feof($fp));
+    }
+    function gzseek($fp, $offs) {
+       return(fseek($fp, $offs, SEEK_SET));
+    }
+    function gzrewind($fp) {
+       return(frewind($fp));
+    }
+    function gztell($fp) {
+       return(ftell($fp));
+    }
+
+    function gzpassthru($fp) {
+       while (!gzeof($fp)) {
+          print(gzred($fp, 1<<20));
+       }
+       gzclose($fp);
+    }
+    function readgzfile($fn) {
+       if ($fp = gzopen($fn, "rb")) {
+          gzpassthru($fp);
+       }
+    }
+   
+    function gzfile($fn) {
+       return(file($fn));
+    }
+
+    function gzgetc($fp) {
+       return(fgetc($fp));
+    }
+    function gzgets($fp, $len) {
+       return(fgets($fp, $len));
+    }
+    function gzgetss($fp, $len, $allowedtags="") {
+       return(fgetss($fp, $len, $allowedtags));
+    }
+
+ }
+
+
+ #-- fake compression methods
+ if (!function_exists("gzdeflate")) {
+
+    // only returns uncompressed deflate streams
+    function gzdeflate($data, $level=0) {
+        $gz = "";
+        $end = strlen($data);
+        $p = 0;
+        do {
+           $c = $end - $pos;
+           if ($c >= 65536) {
+              $c = 0xFFFF;
+              $end = 0x00;
+           }
+           else {
+              $end = 0x01;
+           }
+           $gz .= pack("Cvv",
+                     ($end << 7) + (00 << 5),  // LAST=0/1, BTYPE=00
+                     $c,                       // LEN
+                     $c ^ 0xFFFF               // NLEN
+                  );
+           $gz .= substr($data, $p, $c);
+           $p += $c;
+        }
+        while ($p < $end);
+        return($gz);
+    }
+
+    // only can strip deflate headers, cannot decompress
+    function gzinflate($data, $length=NULL) {
+       $end = strlen($data);
+       $gz = "";
+       if (isset($length) && (($max*0.99) > $length)) {
+          trigger_error("gzinflate(): gave up, decompressed string is likely longer than requested", E_USER_ERROR);
+          return;
+       }
+       $out = "";
+       $p = 0;
+       do {
+          $head = ord($data[$p]);
+          $last = ($head >> 7);
+          if (($head & 0x60) != 00) {
+             trigger_error("gzinflate(): cannot decode compressed stream", E_USER_ERROR);
+             return;
+          }
+          $head = unpack("v1LEN/v1NLEN", substr($data, $p+1, 4));
+          $c = $head["LEN"];
+          if (($c ^ 0xFFFF) != $head["NLEN"]) {
+             trigger_error("gzinflate(): data error in stream", E_USER_ERROR);
+             return;
+          }
+          $p += 5;
+          $out .= substr($data, $p, $c);
+          $p += $c;
+       }
+       while (($p < $end) && !$last);
+       return($out);
+    }
+
+
+//    function gzcompress() {
+//    }
+//    function gzuncompress() {
+//    }
+
+    // without real compression support again
+    function gzencode($data, $level=0) {
+       $isize = strlen($data);
+       $crc32 = crc32($data);
+       $gz = "";
+       {
+          $gz .= pack("nCCVCC",
+             $_ID = 0x1f8b,
+             $_CM = 0x08,  // deflate fmt
+             $_FLG = 0x00, // nothing extra
+             $_MTIME = time(),
+             $_XFL = 0x00, // no bonus flags
+             $_OS = 255    // "unknown"
+          );
+          $gz .= gzdeflate($data);
+          $gz .= pack("VV", $crc32, $isize);
+       }
+       return($gz);
+    }
+
+ }
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/ftp.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/ftp.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/ftp.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,619 @@
+<?php
+/*
+   Provides the usual ftp_() functions (or at least work-alikes)
+   for PHP versions compiled without.
+
+   Hint: If you want to use it with PHP versions with compiled-in FTP
+   support, then simply let your text editor replace all occourences
+   of "ftp_" into "xftp_" or something similar.
+
+   FreeWare, 2004, milky*users?sf?net
+*/
+
+if (!function_exists("ftp_connect")) {
+
+ #-- config
+ define("FTP_DEBUG", 0);
+ define("FTP_PASV", 0);   // default data transfer mode
+
+ #-- constants
+ define("FTP_ASCII", "A");
+ define("FTP_BINARY", "I");
+
+
+ #-- establish socket connection,
+ #   returns status+data array
+ function ftp_connect($server, $port=21, $proxy_server=NULL, $proxy_port=21) {
+    $fc = array();
+
+    #-- proxy or direct connection
+    if ($proxy_server) {
+       $f = fsockopen($proxy_server, $proxy_port, $errno, $errstr, 15);
+       $fc["proxy"] = 1;
+    }
+    else {
+       if (strpos($server, ":")) {
+          $server = strtok($server, ":");
+          $port = strtok(":");
+       }
+       $f = fsockopen($server, (int)$port, $errno, $errstr, 15);
+    }
+
+    #-- socket connection established
+    if ($f) {
+       #-- socket connection settings
+       socket_set_blocking($f, 1);
+
+       #-- mk connection data hash
+       $fc["host"] = $server;
+       $fc["port"] = $port;
+       $fc["f"] = $f;
+       $fc["d"] = false;
+       $fc["dport"] = false;
+       $fc["pasv"] = FTP_PASV;
+
+       #-- read greeting
+       ftp_send($fc, "", 1);
+       if (!$fc["err"] == 220) {
+          ftp_err("server rejected further communication (after successful TCP/IP connection)");
+          return(false);
+       }
+
+       #-- ret handle
+       return($fc);
+    }
+    else {
+       ftp_err("connecting to $server:$port$add_err failed [err$errno: \"$errstr\"]");
+       return(false);
+    }
+ }
+
+
+ #-- internal use
+ function ftp_send(&$fc, $command, $wait100=0, $break100=0) {
+    if ($fc) {
+
+       #-- send command
+       fwrite($fc["f"], $command);
+
+       #-- read reply, line by line
+       $r = "";
+       while (!feof($fc["f"]) && ($line = fgets($fc["f"], 768))) {
+          $r .= $line;
+
+          #-- error/status number separated by space
+          if ($line{3} === " ") {
+             $err = (int) substr($line, 0, 3);
+             if ($err >= 100) {
+                $fc["err"] = $err;
+                $fc["msg"] = rtrim(substr($line, 4));
+                if (($err >= 200) || $break100) {
+                   break;
+                }
+                elseif ($wait100) {
+                   // nop, loop on until real status reply
+                }
+                elseif (FTP_DEBUG) {
+                   trigger_error("ftp delay ($err): $fc[msg]", E_USER_NOTICE);
+                }
+          }  }
+       }
+
+       #-- general faults, closed connection
+       switch ($err) {
+
+          case 421:
+            ftp_err("server closed connection - $fc[msg]");
+            ftp_close($fc);
+            $fc = false;
+            break;
+
+          case 332:
+            $r = ftp_send("ACCT $fc[user]");
+            break;
+
+          default:
+            if ($err >= 400) {
+               trigger_error("ftp ($err): $fc[msg]", E_USER_NOTICE);
+            }
+       }
+
+       #-- done
+       if (FTP_DEBUG) {
+          echo "??? $command";
+          echo "??? $r";
+       }
+       return($r);
+    }
+    else {
+       ftp_err("invalid connection handle passed to ftp_send() function");
+    }
+ }
+
+
+ #-- simply check for successful result
+ function ftp_result(&$fc) {
+    if ( ($fc["err"] <= 399) && ($fc["err"] >= 200) ) {
+       return(true);
+    }
+ }
+
+
+ #-- internal use
+ function ftp_err($str) {
+    if (is_array($str)) {
+       $str = $str["err"] . " " . $str["msg"];
+    }
+    trigger_error("ftp: $str", E_USER_WARNING);
+ }
+
+
+ #-- authentification
+ function ftp_login(&$fc, $user, $pw="") {
+
+    #-- send user name
+    $fc["user"] = $user;
+    if ($user) {
+       $user .= ($fc["proxy"] ? "@".$fc["host"] : "");
+       ftp_send($fc, "USER $user\n");
+
+       #-- password if required
+       if ($pw || ($fc["err"] == 331)) {
+          ftp_send($fc, "PASS $pw\n");
+       }
+       $r = ftp_result($fc);
+
+       if ($fc["err"] != 230) {
+          ftp_err("unsuccessful login");
+       }
+    }
+
+    #-- check capabilities
+    @ftp_send($fc, "MODE B\n");     // block mode supported?
+    if ($fc["err"] == 200) {
+       $fc["mode"] = "B";
+    }
+    else {
+       $fc["mode"] = "S";
+       ftp_send($fc, "MODE S\n");   // else stream mode (unreliable)
+    }
+
+    #-- pre-fetch system type
+    ftp_send($fc, "SYST\n");
+    $fc["sys"] = strtok($fc["msg"], " \r\n\t\f");
+
+    #-- set default options
+    @ftp_send($fc, "SITE UMASK 0022\n");
+    ftp_send($fc, "TYPE A\n");
+    ftp_send($fc, "PWD\n");
+    if ($fc["err"] != 257)  {
+       ftp_err("incompatible connection");
+    }
+
+    return($r);
+ }
+
+
+ #-- set data connection method/mode (will later be negotiated with server)
+ function ftp_pasv(&$fc, $bool=1) {
+    $fc["pasv"] = $bool ?1:0;
+    // ftp_err("this ftp:// access module always uses the PASV server data connection mode");
+ }
+
+
+ #-- terminate ftp session
+ function ftp_quit(&$fc) {
+    ftp_send($fc, "QUIT\n");   // the server closes the tcp/ip connection
+    ftp_close($fc);            // so this is not necessary
+    $fc = false;
+ }
+
+
+ #-- close connections
+ function ftp_close(&$fc) {
+    if ($fc["d"] && !feof($fc["d"])) {
+       @fclose($fc["d"]);
+    }
+    if (!feof($fc["f"])) {
+       @fclose($fc["f"]);
+    }
+ }
+
+
+ #-- simple functions -----------------------------------------------------
+
+ function ftp_cdup(&$fc) {
+    ftp_send($fc, "CDUP\n");
+    return ftp_result($fc);
+ }
+ function ftp_chdir(&$fc, $path) {
+    ftp_send($fc, "CWD $path\n");
+    return ftp_result($fc);
+ }
+ function ftp_mkdir(&$fc, $path) {
+    ftp_send($fc, "MKD $path\n");
+    return ftp_result($fc);
+ }
+ function ftp_rmdir(&$fc, $path) {
+    ftp_send($fc, "RMD $path\n");
+    return ftp_result($fc);
+ }
+ function ftp_pwd(&$fc) {
+    ftp_send($fc, "PWD $path\n");
+    $d = $fc["msg"];
+    $l = strpos($d, '"');
+    $d = substr($d, $l+1, strrpos($d, '"')-$l-1);
+    return($d);
+ }
+
+ function ftp_delete(&$fc, $file) {
+    ftp_send($fc, "DELE $path\n");
+    return ftp_result($fc);
+ }
+ function ftp_mv(&$fc, $from, $to) {
+    ftp_send($fc, "RNFR $from\n");
+    ftp_send($fc, "RNTO $to\n");
+    return ftp_result($fc);
+ }
+ function ftp_chmod(&$fc, $perm, $path) {
+    $perm = "0" . base_convert($perm, 10, 8);
+    ftp_send($fc, "SITE CHMOD $perm $path\n");
+    return ftp_result($fc);
+ }
+
+ function ftp_site(&$fc, $cmd) {
+    $cmd = rtrim($cmd);
+    ftp_send($fc, "SITE $cmd\n");
+    return ftp_result($fc);
+ }
+ function ftp_exec(&$fc, $cmd) {
+    ftp_site($fc, "EXEC $cmd\n");
+    return ftp_result($fc);
+ }
+ function ftp_raw(&$fc, $str) {
+    $str = rtrim($str) . "\n";
+    $r = ftp_send($fc, $str);
+    return(explode("\n", $r));
+ }
+
+ function ftp_systype(&$fc) {
+    return $fc["sys"];
+ }
+
+
+ #-- file transfer calls --------------------------------------------------
+
+
+ #-- file upload
+ function ftp_fput(&$fc, $to, $fh, $mode=FTP_BINARY, $chunksize=65536) {
+    if (!$fh) { return; }
+
+    #-- data connection
+    ftp_data_connection($fc);
+    if ($chunksize >= 65536) {
+       $chunksize = 65535;
+    }
+
+    #-- initiate file transfer
+    ftp_send($fc, "TYPE $mode\n");
+    set_time_limit(240);
+    ftp_send($fc, "STOR $to\n", 0, 1);
+
+    #-- server waiting for transfer?
+    if (($fc["err"] == 150) || ($fc["err"] == 125)) {
+
+       #-- connection mode
+       if (!$fc["pasv"]) {
+          $d = socket_accept($fc["s"]);
+          $data_write = "socket_write";
+          $data_close = "socket_close";
+       }
+       else {
+          $d = & $fc["d"];
+          $data_write = "fwrite";
+          $data_close = "fclose";
+       }
+
+       #-- stream mode, simple
+       if ($fc["mode"] == "S") {
+          while ($fh && !feof($fh)) {
+             $dat = fread($fh, $chunksize);
+             $data_write($d, $dat);
+          }
+       }
+       else {
+          while ($fh && !feof($fh)) {
+             $dat = fread($fh, $chunksize);
+             $n = strlen($dat);
+             $data_write($d, pack("cn", 0, $n));   // block header
+             $data_write($d, $dat);
+          }
+          $data_write($fc["d"], pack("ccc", 0x40, 0, 0));   // EOF
+       }
+
+       #-- close server socket
+       if (!$fc["pasv"]) {
+          socket_close($d);
+       }
+
+       #-- transmission ok
+       ftp_data_end($fc);
+       ftp_send($fc, "", 1);
+       $r = ($fc["err"] == 226) || ($fc["err"] == 250);
+
+       #-- reset options
+       if ($mode != FTP_ASCII) {
+          ftp_send($fc, "TYPE A\n");
+       }
+
+    }
+    else {
+       ftp_err("$fc[err] $fc[msg]");
+       $r = 0;
+    }
+
+    return($r);
+ }
+
+
+ function ftp_put(&$fc, $to, $fn, $mode=FTP_BINARY) {
+    if (!is_resource($fn)) {
+       $fn = fopen($fn, "rb");
+    }
+    $r = ftp_fput($fc, $to, $fn, $mode);
+    fclose($fn);
+    return($r);
+ }
+
+
+
+
+ #-- download
+ function ftp_fget(&$fc, $to, $fh, $mode=FTP_BINARY, $chunksize=65536) {
+    if (!$fh) { return; }
+
+    #-- open connection
+    ftp_data_connection($fc);
+
+    #-- initiate file transfer
+    ftp_send($fc, "TYPE $mode\n");
+    set_time_limit(240);
+    ftp_send($fc, "RETR $to\n", 0, 1);
+
+    #-- server waiting for transfer?
+    if (($fc["err"] == 150) || ($fc["err"] == 125)) {
+
+       #-- connection mode
+       if (!$fc["pasv"]) {
+          $d = socket_accept($fc["s"]);
+          $data_read = "socket_read";
+          $data_close = "socket_close";
+       }
+       else {
+          $d = & $fc["d"];
+          $data_read = "fread";
+          $data_close = "fclose";
+       }
+
+       #-- stream mode, simple
+       if ($fc["mode"] == "S") {
+          $dat = "+";
+          while (strlen($dat)) {
+             $dat = $data_read($d, $chunksize);
+             fwrite($fh, $dat);
+          }
+       }
+       else {
+          $eof = 0;
+          while (!$eof) {
+             list($flags, $len) = unpack("cn", $data_read($d, 3));
+             $eof = $flags & (0x40|0x80);
+
+             if ($len) {
+                $dat = $data_read($d, $len);
+                fwrite($fh, $dat);
+             }
+          }
+       }
+
+       #-- close server socket
+       if (!$fc["pasv"]) {
+          $data_close($d);
+       }
+
+       #-- transmission ok
+       ftp_data_end($fc);
+       ftp_send($fc, "", 1);
+       $r = ($fc["err"] == 226) || ($fc["err"] == 250);
+
+       #-- reset options
+       if ($mode != FTP_ASCII) {
+          ftp_send($fc, "TYPE A\n");
+       }
+
+    }
+    else {
+       ftp_err("$fc[err] $fc[msg]");
+       $r = 0;
+    }
+
+    return($r);
+ }
+
+
+ #-- directly into file
+ function ftp_get(&$fc, $to, $fn, $mode=FTP_BINARY) {
+    if (!is_resource($fn)) {
+       $fn = fopen($fn, "wb");
+    }
+    $r = ftp_fget($fc, $to, $fn, $mode);
+    fclose($fn);
+    return($r);
+ }
+
+
+
+ #-- establishes a data connection ---------------------------------------
+ function ftp_data_connection(&$fc) {
+    if (!$fc["d"] || feof($fc["d"])) {
+
+       #-- make client establish connection (PASsiVe server)
+       if ($fc["pasv"]) {
+          ftp_send($fc, "PASV\n");
+
+          #-- reply ok?
+          if ($fc["err"] == 227) {
+             $l = strpos($fc["msg"], "(");
+             $r = strpos($fc["msg"], ")", $l);
+             $uu = explode(",", substr($fc["msg"], $l + 1, $r - $l - 1));
+             $ip = "$uu[0].$uu[1].$uu[2].$uu[3]";
+             $port = ((int)$uu[4]<<8) + ((int)$uu[5]);
+
+             #-- all done
+             if ($port) {
+                if (!$fc["d"] = @fsockopen($ip, $port, $errno, $errstr, 25)) {
+                   ftp_err("data socket connection could not be established [$errno - $errstr]");
+                }
+             }
+             else {
+                ftp_err("data connection negotiation problem (server uses wrong syntax)");
+             }
+          }
+
+          #-- fall back
+          else {
+             $fc["pasv"] = 0;
+             ftp_err("falling back to standard (ACTiVe server) connection mode");
+             ftp_data_connection($fc);
+          }
+       }
+
+       #-- else choose port we wish the server to contact us
+       elseif (!$fc["s"]) {
+          if (!function_exists("socket_listen")) {
+             ftp_err("could not establish data connection, because PHP socket I/O functions are absent");
+          }
+          else {
+             $ip = strtr(gethostbyname("localhost"), ".", ",");
+
+             #-- loop, test randomly choosen ports
+             $retry = 20;
+             $s = 0;
+             while ((!$s) && ($retry-- >= 0)) {
+                $port = rand(3072, 65535);
+                $p1 = ($port >> 8);
+                $p2 = ($port & 0xFF);
+                ftp_send($fc, "PORT $ip,$p1,$p2\n");
+                if ($fc["err"] == 200) {
+                   $s = socket_create_listen($port);
+                }
+             }
+             if ($s) {
+                $fc["s"] = $s;
+             }
+             else {
+                ftp_err("could not create listening socket for (ACTiVe server) data connection");
+             }
+       }  }
+    }
+ }
+
+
+ #-- closes data connection, (in stream mode)
+ function ftp_data_end(&$fc) {
+    if (($fc["d"]) && ($fc["mode"] == "S")) {
+       if ($fc["pasv"]) {
+          fclose($fc["d"]);
+       }
+       else {
+          socket_close($fc["d"]);
+       }
+       $fc["d"] = false;
+    }
+ }
+
+
+}
+
+
+
+#------------------------------------------------------------- add-ons ---
+# require a connection in $GLOBALS['fc'];
+
+
+#-- transfers a file tree from source dir to destination on connected server
+function ftp_xcopy($from, $to=NULL) {
+   global $fc, $DEBUG;
+   #-- dir
+   if ($to) {
+      ftp_xmkdir($to);
+   }
+   else {
+      ftp_xmkdir($from);
+      $to = $from;
+   }
+   if (!$from) {
+      return;
+   }
+   #-- store files
+   if (is_dir($from)) {
+      if ($dh = opendir($from)) {
+         $from = trim($from, "/");
+         while ($fn = readdir($dh)) {
+            if ($fn[0] != ".") {
+               ftp_xcopy("$from/$fn");
+            }
+         }
+         closedir($dh);
+      }
+      else {
+         echo "error reading directory '$from'<br>\n";
+      }
+   }
+   else {
+      if ($f = fopen($from, "rb")) {
+         if (!$DEBUG) {
+#$cwd=getcwd(); echo "PUT $cwd/$from to $to  <br>\n";
+            ftp_put($fc, $to, $from, FTP_BINARY);
+            ftp_site($fc, "CHMOD 0644 $to");
+         }
+         else {
+            echo "upload '$from' to 'ftp://.../$to'<br>\n";
+         }
+         fclose($f);
+      }
+      else {
+         echo "error reading file '$from'<br>\n";
+      }
+   }
+}
+
+
+#-- creates directory trees for given filename strings and keeps track
+#   of what it created, so you can call it without thought
+function ftp_xmkdir($file) {
+   global $fc, $ftp_dirs, $DEBUG;
+   $p = strrpos($file, "/");
+   if (!$p) {
+      return;
+   }
+   $file = substr($file, 0, $p);
+   if (in_array($file, $ftp_dirs)) {
+      return;
+   }
+   $p = 0;
+   $file .= "/";
+   while ($p = strpos($file, "/", $p+1)) {
+      $dir = substr($file, 0, $p);
+      if (!in_array($dir, $ftp_dirs)) {
+         if (!$DEBUG) {
+            @ftp_mkdir($fc, $dir);
+            @ftp_site($fc, "CHMOD 0755 $dir");
+         }
+         $ftp_dirs[] = $dir;
+      }
+   }
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.meta
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.meta	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.meta	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,6 @@
+api: PHP
+type: functions
+title: gettext()
+description: emulates gettext functionality
+priority: auto
+category: library

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,381 @@
+<?php
+/*
+   This include script simulates gettext() functionality.
+    - It could read translation data from .mo and .po files.
+    - Lookup of plural forms mostly work (but not 100% compliant,
+      no real interpreter for Plural-Forms: expression).
+    - Categories/codesets are ignored.
+
+   Besides using setlocale() you should change the $_ENV["LANG"] var
+   to the desired language manually. Additionally all your scripts
+   could contain following (may also work with standard gettext):
+     $_ENV["LANGUAGE"] = $_SERVER["HTTP_ACCEPT_LANGUAGE"];
+   What's often more user-friendly than hardwired server-side values.
+*/
+
+
+#-- emulate only if not present in current PHP interpreter
+if (!function_exists("gettext")) {
+
+
+   #-- all-in-one combined implementation
+   #   (in original API only the first parameter is present)
+   function gettext($msg, $msg2=NULL, $domain=NULL, $category=NULL, $plural=NULL) {
+      global $_GETTEXT;
+
+      #-- get default params if corresponding args are empty
+      if (!isset($domain)) {
+         $domain = $_GETTEXT["%domain"];
+      }
+      if (empty($_GETTEXT[$domain])) {
+         bindtextdomain($domain);  // auto load from system dirs
+      }
+
+      #-- plural array position
+      if (!isset($plural)) {
+         $pli = 0;
+      }
+      elseif ($ph = $_GETTEXT[$domain]["%plural-c"]) {
+         $pli = gettext___plural_guess($ph, $plural);
+      }
+      else {
+         $pli = ($plural != 1) ? 1 : 0;   // English
+      }
+
+      #-- look up string
+      if (($trans = $_GETTEXT[$domain][$msg])
+      or ($pli) and ($trans = $_GETTEXT[$domain][$msg2]))
+      {
+         // handle plural entries
+         if (is_array($trans)) {
+            if (!isset($trans[$pli])) {
+               $pli = 0;   // missing translation
+            }
+            $trans = $trans[$pli];
+         }
+         // only return, if something found
+         if (strlen($trans)) {
+            $msg = $trans;
+         }
+      }
+
+      #-- handle $category (???)
+      // recode() ...
+
+      #-- give out whatever we have
+      return($msg);
+   }
+   
+
+   #-- return plural form array index for algorithm type
+   #   (compacted from C expression string beforehand)
+   function gettext___plural_guess(&$type, $n) {
+   
+      #-- guess from string with C expression and set integer shorthand
+      if (is_string($type)) {
+         if (($type == "nplurals=1;plural=0;") || !strlen($type)) {
+            $type = -1; // no plurals
+         }
+         elseif ($type == "nplurals=2;plural=n!=1;") {
+            $type = 1;  // English
+         }
+         elseif ($type == "nplurals=2;plural=n>1;") {
+            $type = 2;  // French
+         }
+         // special cases
+         elseif (strpos($type, "n%100!=11")) {
+            if (strpos($type, "n!=0")) {
+               $type == 21;  // Latvian
+            }
+            if (strpos($type, "n%10<=4")) {
+               $type = 22;   // a few Slavic langs (code similar to Polish below)
+            }
+            if (strpos($type, "n%10>=2")) {  // Lithuanian
+               $type = 23;
+            }
+            $type = 0;
+         }
+         // specials, group 2
+         elseif (strpos($type, "n<=4")) {   // Slovak
+            $type = 25;
+         }
+         elseif (strpos($type, "n==2")) {   // Irish
+            $type = 31;
+         }
+         elseif (strpos($type, "n%10>=2")) {   // Polish
+            $type = 26;
+         }
+         elseif (strpos($type, "n%100==3")) {   // Slovenian
+            $type = 28;
+         }
+         // fallbacks
+         elseif (strpos($type, ";plural=n;")) {
+            $type = 7;  // unused
+         }
+         // first at this point a tokenizer/parser/interpreter would have made sense
+         else {
+            $type = 0;  // no plurals
+         }
+      }
+
+      #-- return plural index value from pre-set formulas
+      switch ($type) {
+         case -1:  // no plural forms
+            return(0);
+         case 1:   // English, and lots of others...
+            return($n != 1 ? 1 : 0);
+         case 2:   // French, Brazilian Protuguese
+            return($n > 1 ? 1 : 0);
+         case 7:   // unused
+            return($n);
+
+         case 21:  // Latvian
+            return  (($n%10==1) && ($n%100!=11)) ? (0) :  ($n!=0 ? 1 : 2)  ;
+         case 22:  // Slavic langs
+            return  ($n%10==1) && ($n%100!=11) ? 0 :
+               ( ($n%10>=2) && ($n%10<=4) && ($n%100<10 || $n%100>=20) ? 1 : 2  )  ;
+         case 23:  // Lithuanian
+            return  ($n%10==1) && ($n%100!=11) ? 0 :
+               ( ($n%10>=2) && ($n%100<10 || $n%100>=20) ? 1 : 2  )  ;
+         case 25:  // Slovak
+            return  $n==1 ? 0 : ($n>=2 && $n<=4 ? 1 : 2)  ;
+         case 26:  // Polish
+             return  $n==1 ? 0 : ( $n%10>=2 && $n%10<=4 && ($n%100<10 || $n%100>=20) ? 1 : 2 )  ;
+         case 28:  // Slovenian
+            return  $n%100==1 ? 0 : ($n%100==2 || $n%100==3 || $n%100==4 ? 2 : 3)  ;
+         case 31:  // Irish
+            return  ($n == 1) ? (0) : (($n == 2) ? 1 : 2)  ;
+
+         default:
+            $type = -1;
+      }   // unsupported, always return non-plural index [0]
+      return(0);
+   }
+
+
+   #-- wrappers around monster function above
+   function ngettext($msg1, $msg2, $plural) {
+      return gettext($msg1, $msg2, NULL, NULL, $plural);
+   }
+   function dngettext($domain, $msg1, $msg2, $plural) {
+      return gettext($msg1, $msg2, $domain, NULL, $plural);
+   }
+   function dcngettext($domain, $msg1, $msg2, $plural, $category) {
+      return gettext($msg1, $msg2, $domain, $category, $plural);
+   }
+   function dcgettext($domain, $msg, $category) {
+      return gettext($msg, NULL, $domain, $category);
+   }
+   function dgettext($domain, $msg) {
+      return gettext($msg, NULL, $domain);
+   }
+
+
+   #-- sets current translation data source
+   #   (must have been loaded beforehand)
+   function textdomain($default="NULL") {
+      global $_GETTEXT;
+      $prev = $_GETTEXT["%domain"];
+      if (isset($default)) {
+         $_GETTEXT["%domain"] = $default;
+      }
+      return $prev;
+   }
+
+
+   #-- loads data files
+   function bindtextdomain($domain, $directory="/usr/share/locale:/usr/local/share/locale:./locale") {
+      global $_GETTEXT;
+      if (isset($_GETTEXT["domain"]) && (count($_GETTEXT["domain"]) > 3)) {
+         return;  // don't load twice
+      }
+      $_GETTEXT[$domain]["%dir"] = $directory;
+      $_GETTEXT["%locale"] = setlocale(LC_CTYPE, 0);
+
+      #-- allowed languages
+      $langs = "$_ENV[LANGUAGE],$_ENV[LC_ALL],$_ENV[LC_MESSAGE],$_ENV[LANG],"
+             . $_GETTEXT["%locale"] . ",$_SERVER[HTTP_ACCEPT_LANGUAGE],C,en";
+          
+      #-- add shortened language codes (en_UK.UTF-8 -> + en_UK, en)
+      foreach (explode(",",$langs) as $d) {
+         $d = trim($d);
+         // $dir2[] = $d;
+         $d = strtok($d, "@.-+=%:; ");
+         if (strlen($d)) {
+            $dir2[] = $d;
+         }
+         if (strpos($d, "_")) {
+            $dir2[] = strtok($d, "_");
+         }
+      }
+      
+      #-- search for matching directory and load data file
+      foreach (explode(":", $directory) as $directory) {
+         foreach ($dir2 as $lang) {
+            $base_fn = "$directory/$lang/LC_MESSAGES/$domain";
+
+            #-- binary format
+            if (file_exists($fn = "$base_fn.mo") && ($f = fopen($fn, "rb")))
+            {
+               gettext___load_mo($f, $domain);
+               break 2;
+            }
+
+            #-- text file
+            elseif (function_exists("gettext___load_po")
+            and file_exists($fn = "$base_fn.po") && ($f = fopen($fn, "r")))
+            {
+               gettext___load_po($f, $domain);
+               break 2;
+            }
+         }
+      }//foreach
+      
+      #-- extract headers
+      if ($head = $_GETTEXT[$domain][""]) {
+         foreach (explode("\n", $head) as $line) {
+            $header = strtok(":", $line);
+            $line = trim(strtok("\n"));
+            $_GETTEXT[$domain]["%po-header"][strtolower($header)] = $line;
+         }
+      
+         #-- plural-forms header
+         if (function_exists("gettext___plural_guess")
+         and ($h = $_GETTEXT[$domain]["%po-header"]["plural-forms"]))
+         {
+            $h = preg_replace("/[(){}\[\]^\s*\\]+/", "", $h);  // rm whitespace
+            gettext___plural_guess($h, 0);  // pre-decode into algorithm type integer
+            $_GETTEXT[$domain]["%plural-c"] = $h;
+         }
+      }
+
+      #-- set as default textdomain
+      if (empty($_GETTEXT["%domain"])) {
+         textdomain($domain);
+      }
+      return($domain);
+   }
+
+
+   #-- load string data from binary .mo files (ign checksums)
+   function gettext___load_mo($f, $domain) {
+      global $_GETTEXT;
+
+      #-- read in data file completely
+      $data = fread($f, 1<<20);
+      fclose($f);
+
+      #-- extract header fields and check file magic
+      if ($data) {
+         $header = substr($data, 0, 20);
+         $header = unpack("L1magic/L1version/L1count/L1o_msg/L1o_trn", $header);
+         extract($header);
+         if ((dechex($magic) == "950412de") && ($version == 0)) {
+
+            #-- fetch all entries
+            for ($n=0; $n<$count; $n++) {
+
+               #-- msgid
+               $r = unpack("L1len/L1offs", substr($data, $o_msg + $n * 8, 8));
+               $msgid = substr($data, $r["offs"], $r["len"]);
+               unset($msgid_plural);
+               if (strpos($msgid, "\000")) {
+                  list($msgid, $msgid_plural) = explode("\000", $msgid);
+               }
+
+               #-- translation(s)
+               $r = unpack("L1len/L1offs", substr($data, $o_trn + $n * 8, 8));
+               $msgstr = substr($data, $r["offs"], $r["len"]);
+               if (strpos($msgstr, "\000")) {
+                  $msgstr = explode("\000", $msgstr);
+               }
+
+               #-- add
+               $_GETTEXT[$domain][$msgid] = $msgstr;
+               if (isset($msgid_plural)) {
+                  $_GETTEXT[$domain][$msgid_plural] = &$_GETTEXT[$domain][$msgid];
+               }
+            }
+
+         }
+      }
+   }
+
+
+   #-- read from textual .po source file (not fully correct, and redundant
+   #   because the original gettext/libintl doesn't support this at all)
+   function gettext___load_po($f, $domain) {
+      global $_GETTEXT;
+      $c_esc = array("\\n"=>"\n", "\\r"=>"\r", "\\\\"=>"\\", "\\f"=>"\f", "\\t"=>"\t", "\\"=>"");
+
+      #-- read line-wise from text file   
+      do {
+         $line = trim(fgets($f));
+
+         #-- check what's in the current line
+         $space = strpos($line, " ");
+         // comment
+         if ($line[0] == "#") {
+            //continue;
+         }
+         // msgid
+         elseif (strncmp($line, "msgid", 5)==0) {
+            $msgid[] = trim(substr($line, $space+1), '"');
+         }
+         // translation
+         elseif (strncmp($line, "msgstr", 6)==0) {
+            $msgstr[] = trim(substr($line, $space+1), '"');
+         }
+         // continued (could be _id or _str)
+         elseif ($line[0] == '"') {
+            $line = trim($line, '"');
+            if (isset($msggstr)) {
+               $msgstr[count($msgstr)] .= $line;
+            }
+            else {
+               $msgid[count($msgid)] .= $line;
+            }
+         }
+
+         #-- append to global $_GETTEXT hash as soon as we have a complete dataset
+         if (isset($msgid) && isset($msgstr) && (empty($line) || ($line[0]=="#") || feof($f)) )
+         {
+            $msgid[0] = strtr($msgid[0], $c_esc);
+            foreach ($msgstr as $v) {
+               $_GETTEXT[$domain][$msgid[0]] = strtr($v, $c_esc);
+            }
+            if ($msgid[1]) {
+               $msgid[1] = strtr($msgid[1], $c_esc);
+               $_GETTEXT[$domain][$msgid[1]] = &$_GETTEXT[$domain][$msgid[0]];
+            }
+
+            $msgid = array();
+            $msgstr = array();
+         }
+
+      } while (!feof($f));
+      fclose($f);
+   }
+
+
+   #-- ignored setting (no idea what it really should do)
+   function bind_textdomain_codeset($domain, $codeset) {
+      global $_GETTEXT;
+      $_GETTEXT[$domain]["%codeset"] = $codeset;
+      return($domain);
+   }
+
+
+}
+
+
+#-- define gettexts preferred function name _ separately
+if (!function_exists("_")) {
+   function _($str) {
+      return gettext($str);
+   }
+}
+
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.txt
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.txt	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/gettext.txt	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,57 @@
+
+PHP-only gettext emulation
+--------------------------
+
+The "gettext.php" include script tries to reimplement GNU gettext in
+pure PHP. It is incomplete and divergent in many ways, but seems to
+work well in its goal to be a quick drop-in replacement.
+
+You load the script, like you'd include the "upgrade.php" script, and
+then have the family of gettext functions always available - if they
+are compiled in into your PHP binary or not. This way you can freely
+use standardized i18n features safely on any web server and with all
+your applications.
+
+There are however a few minor obstacles and differences in between
+the original and the emulation which you have to take care of. Most
+of the incompatibilites descend from lousily documented behaviour of
+the original and from lack of extensqive testing of the emulated
+versions.
+
+ - You should use setlocale() before any bindtextdomain(), because
+   this emulation does load the .mo/.po data files only once.
+
+ - The emulation only ever loads one translation file (it never
+   retrieves translation strings from different localizations,
+   so it is less useful in conjunction with Accept-Language header
+   settings - where multiple languages could be given).
+   [Original gettext may or may not load from multiple files??]
+
+ - To be compliant with the native implementation, you have to make
+   sure, that the .mo files are built from the *.po source files.
+   (The emulation tries to work on both, but it really shouldn't do
+   that.)
+
+ - Order of environment variable precedence is:
+     1. LANGUAGE
+     2. LC_ALL
+     3. LC_MESSAGE
+     4. LANG                    (multiple langs)
+     5. setlocale()
+     6. HTTP_ACCEPT_LANGUAGE    (incompliant with GNU gettext)
+
+ - There is a second variant of the script, which tries to handle
+   plural forms. This has multiple limitations:
+     - does not employ a full Plural-Forms parser (a C expression
+       which must be interpreted at runtime)
+     - matches and works only with a few built-in language plural
+       form syntaxes and orderings
+     - and it's fully untested as of yet
+
+ - It constructs a global $_GETTEXT[] variable which contains all
+   messages and translations at runtime in-memory. That means, it
+   is far more memory-hungry and less scalable than the original
+   GNU libintl in C.
+
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/mime.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/mime.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/mime.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,358 @@
+<?php
+/*
+   Simulates the mime_magic extension. Was originally implemented for
+   [http://nanoweb.si.kz/], but that mime magic data reading was
+   reinjected for this version (more unclean, though).
+   You still need to get the "mime_magic" file to use this, please see
+   file(1) for more informations.
+   Also simulates the image type/mime/ext functions.
+*/
+
+
+#-- mime-magic, type will be detected by analyzing the content
+if (!function_exists("mime_content_type")) {
+   function mime_content_type($fn) {
+
+      static $mime_magic_data;
+
+      #-- fallback
+      $type = false;
+
+      #-- read in first 3K of given file
+      if (is_dir($fn)) {
+         return("httpd/unix-directory");
+      }
+      elseif (is_resource($fn) || ($fn = @fopen($fn, "rb"))) {
+         $bin = fread($fn, $maxlen=3072);
+         fclose($fn);
+      }
+      elseif (!file_exists($fn)) {
+         return false;
+      }
+      else {
+         return("application/octet-stream");   // give up
+      }
+
+      #-- use PECL::fileinfo when available
+      if (function_exists("finfo_buffer")) {
+         if (!isset($mime_magic_data)) {
+            $mime_magic_data = finfo_open(MAGIC_MIME);
+         }
+         $type = finfo_buffer($bin);
+         return($type);
+      }
+      
+      #-- read in magic data, when called for the very first time
+      if (!isset($mime_content_type)) {
+      
+         if ((file_exists($fn = ini_get("mime_magic.magicfile")))
+          or (file_exists($fn = "/usr/share/misc/magic.mime"))
+          or (file_exists($fn = "/etc/mime-magic"))   )
+         {
+            $mime_magic_data = array();
+
+            #-- read in file
+            $f = fopen($fn, "r");
+            $fd = fread($f, 1<<20);
+            fclose($f);
+            $fd = str_replace("       ", "\t", $fd);
+
+            #-- look at each entry
+            foreach (explode("\n", $fd) as $line) {
+
+               #-- skip empty lines
+               if (!strlen($line) or ($line[0] == "#") or ($line[0] == "\n")) {
+                  continue;
+               }
+
+               #-- break into four fields at tabs
+               $l = preg_split("/\t+/", $line);
+               @list($pos, $typestr, $magic, $ct) = $l;
+#print_r($l);
+
+               #-- ignore >continuing lines
+               if ($pos[0] == ">") {
+                  continue;
+               }
+               #-- real mime type string?
+               $ct = strtok($ct, " ");
+               if (!strpos($ct, "/")) {
+                  continue;
+               }
+
+               #-- mask given?
+               $mask = 0;
+               if (strpos($typestr, "&")) {
+                  $typestr = strtok($typestr, "&");
+                  $mask = strtok(" ");
+                  if ($mask[0] == "0") {
+                     $mask = ($mask[1] == "x") ? hexdec(substr($mask, 2)) : octdec($mask);
+                  }
+                  else {
+                     $mask = (int)$mask;
+                  }
+               }
+
+               #-- strip prefixes
+               if ($magic[0] == "=") {
+                  $magic = substr($magic, 1);
+               }
+
+               #-- convert type
+               if ($typestr == "string") {
+                  $magic = stripcslashes($magic);
+                  $len = strlen($magic);
+                  if ($mask) { 
+                     continue;
+                  }
+               }
+               #-- numeric values
+               else {
+
+                  if ((ord($magic[0]) < 48) or (ord($magic[0]) > 57)) {
+#echo "\nmagicnumspec=$line\n";
+#var_dump($l);
+                     continue;  #-- skip specials like  >, x, <, ^, &
+                  }
+
+                  #-- convert string representation into int
+                  if ((strlen($magic) >= 4) && ($magic[1] == "x")) {
+                     $magic = hexdec(substr($magic, 2));
+                  }
+                  elseif ($magic[0]) {
+                     $magic = octdec($magic);
+                  }
+                  else {
+                     $magic = (int) $magic;
+                     if (!$magic) { continue; }   // zero is not a good magic value anyhow
+                  }
+
+                  #-- different types               
+                  switch ($typestr) {
+
+                     case "byte":
+                        $len = 1;
+                        break;
+                        
+                     case "beshort":
+                        $magic = ($magic >> 8) | (($magic & 0xFF) << 8);
+                     case "leshort":
+                     case "short":
+                        $len = 2;
+                        break;
+                     
+                     case "belong":
+                        $magic = (($magic >> 24) & 0xFF)
+                               | (($magic >> 8) & 0xFF00)
+                               | (($magic & 0xFF00) << 8)
+                               | (($magic & 0xFF) << 24);
+                     case "lelong":
+                     case "long":
+                        $len = 4;
+                        break;
+
+                     default:
+                        // date, ldate, ledate, leldate, beldate, lebelbe...
+                        continue;
+                  }
+               }
+               
+               #-- add to list
+               $mime_magic_data[] = array($pos, $len, $mask, $magic, trim($ct));
+            }
+         }
+#print_r($mime_magic_data);
+      }
+      
+      
+      #-- compare against each entry from the mime magic database
+      foreach ($mime_magic_data as $def) {
+
+         #-- entries are organized as follows
+         list($pos, $len, $mask, $magic, $ct) = $def;
+         
+         #-- ignored entries (we only read first 3K of file for opt. speed)
+         if ($pos >= $maxlen) {
+            continue;
+         }
+
+         $slice = substr($bin, $pos, $len);
+         #-- integer comparison value
+         if ($mask) {
+            $value = hexdec(bin2hex($slice));
+            if (($value & $mask) == $magic) {
+               $type = $ct;
+               break;
+            }
+         }
+         #-- string comparison
+         else {
+            if ($slice == $magic) {
+               $type = $ct;
+               break;
+            }
+         }
+      }// foreach
+      
+      #-- built-in defaults
+      if (!$type) {
+      
+         #-- some form of xml
+         if (strpos($bin, "<"."?xml ") !== false) {
+            return("text/xml");
+         }
+         #-- html
+         elseif ((strpos($bin, "<html>") !== false) || (strpos($bin, "<HTML>") !== false)
+         || strpos($bin, "<title>") || strpos($bin, "<TITLE>")
+         || (strpos($bin, "<!--") !== false) || (strpos($bin, "<!DOCTYPE HTML ") !== false)) {
+            $type = "text/html";
+         }
+         #-- mail msg
+         elseif ((strpos($bin, "\nReceived: ") !== false) || strpos($bin, "\nSubject: ")
+         || strpos($bin, "\nCc: ") || strpos($bin, "\nDate: ")) {
+            $type = "message/rfc822";
+         }
+         #-- php scripts
+         elseif (strpos($bin, "<"."?php") !== false) {
+            return("application/x-httpd-php");
+         }
+         #-- plain text, C source or so
+         elseif (strpos($bin, "function ") || strpos($bin, " and ")
+         || strpos($bin, " the ") || strpos($bin, "The ")
+         || (strpos($bin, "/*") !== false) || strpos($bin, "#include ")) {
+            return("text/plain");
+         }
+
+         #-- final fallback
+         else {
+            $type = "application/octet-stream";
+         }
+      }
+      
+      
+
+      #-- done
+      return $type;
+   }
+}
+
+
+
+#-- gives Media Type for the index numbers getimagesize() returned
+if (!function_exists("image_type_to_mime_type")) {
+   define("IMAGETYPE_GIF", 1);
+   define("IMAGETYPE_JPEG", 2);
+   define("IMAGETYPE_PNG", 3);
+   define("IMAGETYPE_SWF", 4);
+   define("IMAGETYPE_PSD", 5);  // post-4.3 from here ...
+   define("IMAGETYPE_BMP", 6);
+   define("IMAGETYPE_TIFF_II", 7);
+   define("IMAGETYPE_TIFF_MM", 8);
+   define("IMAGETYPE_JPC", 9);
+   define("IMAGETYPE_JP2", 10);
+   define("IMAGETYPE_JPX", 11);
+   define("IMAGETYPE_JB2", 12);
+   define("IMAGETYPE_SWC", 13);
+   define("IMAGETYPE_IFF", 14);
+   define("IMAGETYPE_WBMP", 15);
+   define("IMAGETYPE_XBM", 16);
+   define("IMAGETYPE_MNG", 77);
+   define("IMAGETYPE_XPM", 88);
+   define("IMAGETYPE_ZIF", 90);
+   define("IMAGETYPE_PBM", 80);
+   define("IMAGETYPE_PGM", 81);
+   define("IMAGETYPE_PPM", 82);
+   function image_type_to_mime_type($id) {
+      static $mime = array(
+         IMAGETYPE_GIF => "gif",
+         IMAGETYPE_JPEG => "jpeg",
+         IMAGETYPE_PNG => "png",
+         IMAGETYPE_SWF => "application/x-shockwave-flash",
+         IMAGETYPE_BMP => "bmp",
+         IMAGETYPE_JP2 => "jp2",
+         IMAGETYPE_WBMP => "vnd.wap.wbmp",
+         IMAGETYPE_XBM => "xbm",
+         IMAGETYPE_PSD => "x-photoshop",
+         IMAGETYPE_TIFF_II => "tiff",
+         IMAGETYPE_TIFF_MM => "tiff",
+         IMAGETYPE_JPC => "application/octet-stream",
+         IMAGETYPE_JP2 => "jp2",
+//         IMAGETYPE_JPX => "",
+//         IMAGETYPE_JB2 => "",
+         IMAGETYPE_SWC => "application/x-shockwave-flash",
+         IMAGETYPE_IFF => "iff",
+         IMAGETYPE_XPM => "x-xpm",
+         IMAGETYPE_ZIF => "unknown",
+         IMAGETYPE_MNG => "video/mng",
+         IMAGETYPE_PBM => "x-portable-bitmap",
+         IMAGETYPE_PGM => "x-portable-greymap",
+         IMAGETYPE_PPM => "x-portable-pixmap",
+      );
+      if (isset($mime[$id])) {
+         $m = $mime[$id];
+         strpos($m, "/") || ($m = "image/$m");
+      }
+      else {
+         $m = "image/unknown";
+      }
+      return($m);
+   }
+}
+
+#-- still in CVS
+if (!function_exists("image_type_to_extension")) {
+   function image_type_to_extension($id, $dot=true) {
+      static $ext = array(
+         0=>false,
+         1=>"gif", 2=>"jpeg", 3=>"png",
+         "swf", "psd", "bmp",
+         "tiff", "tiff",
+         "jpc", "jp2", "jpx", "jb2",
+         "swc", "wbmp", "xbm",
+         77=>"mng", 88=>"xpm", 90=>"zif",
+         80=>"pbm", 81=>"pgm", 82=>"ppm",
+      );
+      $m = $ext[$id];
+      if ($m && $dot) {
+         $m = ".$m";
+      }
+      return($m);
+   }
+}
+
+
+
+#-- we need this then, too
+if (!function_exists("exif_imagetype")) {
+   function exif_imagetype($fn) {
+      $magic = array(
+         "\211PNG" => IMAGETYPE_PNG,
+         "\377\330" => IMAGETYPE_JPEG,
+         "GIF89a" => IMAGETYPE_GIF,
+         "GIF94z" => IMAGETYPE_ZIF,
+         "FWS" => IMAGETYPE_SWF,
+         "II" => IMAGETYPE_TIFF_II,
+         "MM" => IMAGETYPE_TIFF_MM,
+         "/* XPM" => IMAGETYPE_XPM,
+         "BM" => IMAGETYPE_BMP,  // also for OS/2
+         "\212MNG" => IMAGETYPE_MNG,
+         "P1" => IMAGETYPE_PBM,
+         "P4" => IMAGETYPE_PBM,
+         "P2" => IMAGETYPE_PGM,
+         "P5" => IMAGETYPE_PGM,
+         "P3" => IMAGETYPE_PPM,
+         "P6" => IMAGETYPE_PPM,
+      );
+      if ($f = fopen($fn, "rb")) {
+         $bin = fread($f, 8);
+         fclose($f);
+         foreach ($magic as $scn=>$id) {
+            if (!strncmp($bin, $scn, strlen($scn))) {
+               return $id;
+            }
+         }
+      }
+   }
+}
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/odbc.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/odbc.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/odbc.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,113 @@
+<?php
+
+die("'odbc.php' is incomplete. Don't use this yet.\n");
+
+/*
+   This is just another SQL interface wrapper. It reimplements the ODBC
+   functions in PHP by itself chaining to PEAR::DB (a double wrapper,
+   to simplify this initial version).
+    - does not use integers as connection_id
+
+   Because any mysql_*() calls are easier replaced with odbc_() funcs,
+   but at the same time offer the same degree of database independence,
+   this can often make more sense than transitioning to PEAR::DB or the
+   ADOdb classes.
+    - PEAR::DB provides the saner OO-interface
+    - ADOdb is slightly faster, but has a less nicely abstracted API
+*/
+
+
+#-- declare odbc interface functions
+if (!function_exists("odbc_connect")) {
+
+   #-- load PEAR::DB
+   require_once("DB.php");
+
+
+   #-- initialize connection
+   function odbc_connect($dsn, $user, $password, $cursor_type=NULL) {
+
+      #-- mangle $dsn for PEAR
+      $dsn = str_replace("://", "://$user:$password@", $dsn);
+      // ... rename dbtype identifiers
+
+      #-- connect
+      $c = DB::connect($dsn);
+      if (!PEAR::isError($c)) {
+         return($c);
+      }
+   }
+
+   #-- incomplete
+   function odbc_pconnect($dsn, $user, $password, $cursor_type=NULL) {
+      return odbc_connect($dsn, $user, $password, $cursor_type);
+   }
+   
+   #-- end connection
+   function odbc_close($db) {
+      $db->disconnect();
+   }
+   
+   
+   #-- SQL command execution
+   function odbc_exec($db, $query) {
+      return $db->query($db);
+   }
+   function odbc_do($db, $query) {
+      return odbc_exec($db, $query);
+   }
+
+
+   #-- sql pre-parsing
+   function odbc_prepare($db, $query) {
+      return( array($db, $db->prepare($db)) );
+   }
+   #-- and execution of prepared query
+   function odbc_execute($pq, $args=NULL) {
+      return $pq[0]->execute($pq[1], $args);
+   }
+
+
+   #-- return result row
+   function odbc_fetch_array($res) {
+      return $res->fetchRow(DB_FETCHMODE_ASSOC);
+   }
+   function odbc_fetch_row($res) {
+      return $res->fetchRow(DB_FETCHMODE_ORDERED);
+   }
+   function odbc_fetch_object($res) {
+      return $res->fetchRow(DB_FETCHMODE_OBJECT);
+   }
+   function odbc_fetch_into($res, $count, &$array) {
+      $array = array();
+      while ($count--) {
+         $array[] =  $res->fetchRow(DB_FETCHMODE_ORDERED);
+      }
+   }
+   
+   
+   #-- more functions on result sets
+   function odbc_free_result(&$res) {
+      $res->free();
+      $res = NULL;
+   }
+   function odbc_next_result($res) {
+      return $res->nextResult();
+   }
+   function odbc_num_fields($res) {
+      return $res->numCols();
+   }
+   function odbc_num_rows($res) {
+      return $res->numRows();
+   }
+   
+   
+   #-- and there's more
+   //...
+
+   
+
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/old.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/old.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/old.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,399 @@
+<?php
+/*
+   Here we collect PHP functions for versions before 4.1 - it should be
+   noted that 4.0.x versions can't be made compatible with newer
+   versions anyhow, because the newer superglobals ($_GET, $_REQUEST) are
+   missing. Most of this is untested.
+   Have a look at PEAR::PHP_Compat for emulation of some of these (it's
+   not complete in this regard, too).
+*/
+
+#---------------------------------------------------------------- 4.0.7 ---
+
+#-- simulate superglobals
+# you still had to put "global $_REQUEST,$_GET,..." into any function that
+# used them - so this workaround is not all too useful anyhow, you should
+# not accept PHP versions prior 4.0.7 for your scripts in any case!
+if (!isset($GLOBALS["_REQUEST"])) {
+   $GLOBALS["_GET"] = & $HTTP_GET_VARS;
+   $GLOBALS["_POST"] = & $HTTP_POST_VARS;
+   $GLOBALS["_SERVER"] = & $HTTP_SERVER_VARS;
+   $GLOBALS["_ENV"] = & $HTTP_ENV_VARS;
+   $GLOBALS["_COOKIE"] = & $HTTP_COOKIE_VARS;
+   $GLOBALS["_FILES"] = & $HTTP_POST_FILES;
+   $GLOBALS["_REQUEST"] = array_merge($HTTP_GET_VARS, $HTTP_POST_VARS, $HTTP_COOKIE_VARS);
+}
+
+
+#---------------------------------------------------------------- 4.0.6 ---
+
+
+#-- uses callback function to remove entries from array
+if (!function_exists("array_filter")) {
+   function array_filter($array, $callback="is_int") {
+      foreach ($array as $key=>$val) {
+         if (!call_user_func_array($callback, array($val))) {
+            unset($array[$key]);
+         }
+      }
+      return($array);
+   }
+}
+
+
+#-- uses callback function to change array values, multiple input arrays
+if (!function_exists("array_map")) {
+   function array_map() {
+      $arrays = get_func_args();
+      $callback = shift($arrays);
+      $r = &$arrays[0];
+      foreach ($r as $key=>$val) {
+         $val = call_user_func_array($callback, $arrays);
+         $r[$key] = $val;
+      }
+      return($r);
+   }
+}
+
+
+#-- checks for existence or only syntax of function or obj/class+method name
+if (!function_exists("is_callable")) {
+   function is_callable($var, $syntax_only=0) {
+      $a = get_func_args();
+      if (count($a) >= 3) {
+         $fin = & $a[2];
+      }
+
+      #-- class/object+method
+      if (is_array($var)) {
+         if (count($var)!=2) {
+            return false;
+         }
+         list($obj, $method) = $var;
+         $class = $obj;
+         if (is_object($obj)) {
+            $class = get_class($obj);
+         }
+
+         if ($syntax_only) {
+            $r = preg_match('/^\w+$/', $method);
+            if (!is_object($obj)) {
+               $r = $r && preg_match('/^\w+$/', $obj);
+            }
+         }
+         else {
+            if (is_object($obj)) {
+               $r = method_exists($obj, $method);
+            }
+            else {
+               $all = get_class_methods($obj);
+               $r = in_array($method, $all);
+            }
+         }
+         if ($r) { $fin = strtolower("$class:$method"); }
+      }
+      #-- simple function name
+      elseif (is_string($var)) {
+         if ($syntax_only) {
+            $r = preg_match('/^\w+$/', $var);
+         }
+         else {
+            $r = function_exists($var);
+         }
+         if ($r) { $fin = strtolower($var); }
+      }
+      #-- ooops
+      else {
+         $r = false;
+      }
+      return $r;
+   }
+}
+
+
+
+
+#---------------------------------------------------------------- 4.0.5 ---
+# chroot
+
+
+#-- return index of value in array
+if (!function_exists("array_search")) {
+   function array_search($value, $array, $strict=false) {
+      $strict = $strict ? true : false;
+      foreach ($array as $key=>$v) {
+         if ($strict&&($v===$value) || !$strict&&($v==$value)) {
+            return($key);
+         }
+      }
+      return(NULL);  // PHP prior 4.2 also did so
+   }
+}
+
+
+#-- recursively collapse array into one value (via user callback)
+if (!function_exists("array_reduce")) {
+   function array_reduce($array, $callback, $value=NULL) {
+      foreach ($array as $v) {
+         if (is_array($v)) {
+            $v = array_reduce($v, $callback);
+         }
+         else {
+            $v = call_user_func_array($callback, array($value, $v));
+         }
+         $value = $v;
+      }
+      return($value);
+   }
+}
+
+
+#-- checks variable to be of a simple type
+if (!function_exists("is_scalar")) {
+   function is_scalar($var) {
+      return( !is_array($var) && !is_object($var) );
+   }
+}
+
+#-- only static value (mix of C/English/European/US)
+if (!function_exists("localeconv")) {
+   function localeconv() {
+      return array (
+        'decimal_point' => '.',
+        'thousands_sep' => '',
+        'int_curr_symbol' => 'EUR ',   // more international than USD
+        'currency_symbol' => '?',      // unnamed/trans currency symbol
+        'mon_decimal_point' => '.',
+        'mon_thousands_sep' => ',',
+        'positive_sign' => '',
+        'negative_sign' => '-',
+        'int_frac_digits' => 2,
+        'frac_digits' => 2,
+        'p_cs_precedes' => 1,
+        'p_sep_by_space' => 0,
+        'n_cs_precedes' => 1,
+        'n_sep_by_space' => 0,
+        'p_sign_posn' => 1,
+        'n_sign_posn' => 1,
+        'grouping' => array (0=>3, 1=>3,),
+        'mon_grouping' => array(0=>3, 1=>3,),
+      );
+   }
+}
+
+
+#-- function by name
+if (!function_exists("call_user_func_array")) {
+   function call_user_func_array($callback, $param_array=array()) {
+      if ($param_array) {
+         $param_array = array_values($param_array);
+         $params = "'" . implode("','", $param_array) . "'";
+      }
+      if (is_array($callback)) {
+         $obj = &$callback[0];
+         $method = $callback[1];
+         if (!method_exists($obj, $method)) {
+            trigger_error("call_user_method_array: method '$method' does not exist", E_ERROR);
+         }
+         elseif (is_object($obj)) {
+            eval("return \$obj->$method($params);");
+         }
+         else {
+            eval("return $obj::$method($params);");
+         }
+      }
+      elseif (!function_exists("$callback")) {
+         trigger_error("call_user_func_array: function '$method' does not exist", E_ERROR);
+      }
+      else {
+         switch (count($param_array)) {
+            case 0:
+               return $callback();
+            case 1:
+               return $callback($param_array[0]);
+            case 2:
+               return $callback($param_array[0], $param_array[1]);
+            case 3:
+               return $callback($param_array[0], $param_array[1], $param_array[2]);
+            case 4:
+               return $callback($param_array[0], $param_array[1], $param_array[2], $param_array[3]);
+            default:
+               eval("return $callback($params);");
+         }
+      }
+   }
+   function call_user_method_array($method, &$obj, $param_array=array()) {
+      call_user_func_array(array(&$obj, $method), $param_array);
+   }
+}
+
+
+
+
+#---------------------------------------------------------------- 4.0.4 ---
+
+
+
+#-- adds all values of given array into total sum
+if (!function_exists("array_sum")) {
+   function array_sum($array) {
+      $sum = 0;
+      foreach ($array as $val) {
+         $sum += $val;
+      }
+      return $sum;
+   }
+}
+
+#-- value of constant (if their name was returned as string from somewhere)
+if (!function_exists("constant")) {
+   function constant($name) {
+      if (defined($name)) {
+         eval("return $name");
+      }
+      else {
+         return NULL;
+      }
+   }
+}
+
+#-- more a language construct
+if (!function_exists("is_null")) {
+   function is_null($var) {
+      return($var === NULL);
+   }
+}
+
+
+
+#---------------------------------------------------------------- 4.0.3 ---
+# register_tick_function
+# unregister_tick_function
+
+if (!function_exists("pathinfo")) {
+   function pathinfo($fn) {
+      preg_match("#^(?:(.+)/)?([^/]+?(?:\.([^/\.]+))?)$#", $fn, $uu);
+      return array(
+         "dirname" => $uu[1],
+         "basename" => $uu[2],
+         "extension" => $uu[3],
+      );
+   }
+}
+
+if (!function_exists("escapeshellarg")) {
+   function escapeshellarg($arg) {
+      $arg = str_replace("'", "'\\''", $arg);
+      return "'$arg'";
+   }
+}
+
+if (!function_exists("is_uploaded_file")) {
+   function is_uploaded_file($fn) {
+      ( $dir = get_cfg_var("upload_tmp_dir") )
+       or
+      ( $dir = dirname(tempnam("", "")) );
+      return( realpath($dir) == realpath(dirname($fn)) );
+   }
+}
+
+if (!function_exists("move_uploaded_file")) {
+   function move_uploaded_file($fn, $dest) {
+      if (is_uploaded_file($fn)) {
+         return copy($fn, $dest) && unlink($fn);
+      }
+   }
+}
+
+
+#---------------------------------------------------------------- 4.0.2 ---
+# ob_get_length
+
+
+
+if (!function_exists("strncasecmp")) {
+   function strncasecmp($str1, $str2, $len=0) {
+      if ($len > 0) {
+         $str1 = substr($str1, 0, $len);
+         $str2 = substr($str2, 0, $len);
+      }
+      return strcasecmp($str1, $str2);
+   }
+}
+
+
+if (!function_exists("wordwrap")) {
+   function wordwrap($text, $width=75, $break="\n", $hardcut=0) {
+      $out = "";
+      foreach (explode("\n", $text) as $line) {
+         if ($out) {
+            $out .= "\n";
+         }
+         while (strlen($line)) {
+            if ($hardcut) {
+               $l = $width;
+            }
+            else {
+               $l = strrpos(substr($text, 0, $width), " ");
+               if ($l && ($l < strlen($line))) {
+                  $l = strlen($line);
+               }
+               if ($l === false) {
+                  $l = $width;
+               }
+            }
+            $out .= substr($line, 0, $l);
+            $out .= "\n";
+            $line = substr(0, $l);
+         }
+      }
+      return($out);
+   }
+}
+
+if (!function_exists("php_uname")) {
+   function php_uname($mode="a") {
+      switch ($mode) {
+         case "s":  $p = "--kernel-name";  break;
+         case "n":  $p = "--node-name";  break;
+         case "r":  $p = "--release";  break;
+         case "v":  $p = "--kernel-version";  break;
+         case "m":  $p = "--machine";  break;
+         default:  $p = "--all";  break;
+      }
+      return `uname $p`;
+   }
+}
+
+
+
+#---------------------------------------------------------------- 4.0.1 ---
+# levensth
+# fflush() - unimplementable
+# array_unique
+# array_diff
+# array_intersect
+# array_merge_recursive
+# crc32
+# fscanf
+# sscanf
+# str_pad
+# set_file_buffer
+# spliti
+
+if (!function_exists("php_sapi_name")) {
+   function php_sapi_name() {
+      if (isset($_ENV["CGI_INTERFACE"])) {
+         return "cgi";
+      }
+      elseif (strpos($_ENV["SERVER_SOFTWARE"], "Apache") !== false) {
+         return "apache";
+      }
+      // ...
+      else {
+         return "cgi";  // the silly "cli" variation didn't exist before 4.2
+      }
+   }
+}
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/openssl.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/openssl.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/openssl.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,5 @@
+<?php
+/*
+   Ok, that's a joke. (Not that this wasn't possible, though ...)
+*/
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/posix.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/posix.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/ext/posix.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,40 @@
+<?php
+/*
+   POSIX subsystem functions are emulated using regular commandline
+   utilities or by invoking Perl.  Of course not the full spectrum
+   of features can be simulated this way.  And normally all these
+   functions should be present.
+*/
+
+if (!function_exists("posix_mkfifo") && strlen($_ENV["SHELL"]) && !ini_get("safe_mode")) {
+
+   function posix_mkfifo($pathname, $mode=0400) {
+      $cmd = "/usr/bin/mkfifo -m 0" . decoct($mode) . " " . escape_shell_arg($pathname);
+      exec($cmd, $uu, $error);
+      return(!$error);
+   }
+   
+   function posix_getcwd() {
+      return realpath(getcwd());
+   }
+   
+   function posix_kill($pid, $sig) {
+      $cmd = "kill -" . ((int)$sig) . " " . ((int)$pid);
+      exec($cmd, $uu, $error);
+      return(!$error);
+   }
+
+   function posix_uname() {
+      return array(
+         "sysname" => `/bin/uname -s`,
+         "nodename" => `/bin/uname -n`,
+         "release" => `/bin/uname -r`,
+         "version" => `/bin/uname -v`,
+         "machine" => `/bin/uname -m`,
+         "domainname" => `/bin/domainname`,
+      );
+   }
+}
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/_listemulated
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/_listemulated	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/_listemulated	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,10 @@
+<?php
+
+include("../upgrade.php");
+
+$r = get_defined_functions();
+$r = $r["user"];
+echo "emulated functions are:\n";
+print_r($r);
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/_runparts
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/_runparts	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/_runparts	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,28 @@
+#!/bin/bash
+
+#-- params
+if [ -z "$1" ]
+then
+   echo "syntax:  _runparts [php412] [php501]  | more"
+   echo "Runs all PHP scripts in the tests/ directory with two interpreter versions"
+   echo "side by side, for comparison. If you don't have two of them installed, you"
+   echo "could simply specify 'cat' or 'false' as the second argument."
+else
+
+   #-- go
+   cd `dirname $0`
+   OLD=$1
+   NEW=$2
+   [ -z "$NEW" ] && NEW="cat"
+   for SCRIPT in *
+   do
+      $OLD $SCRIPT | tr -d "\r" | fmt -w 36 -s > /tmp/1
+      $NEW $SCRIPT | tr -d "\r" | fmt -w 36 -s > /tmp/2
+      echo "-----------------------------------------------------------------"
+      echo "[32m$SCRIPT[37m"
+      echo "-----------------------------------------------------------------"
+      pr -m --columns=2 -t  /tmp/1 /tmp/2
+      echo "--"
+   done
+
+fi   

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_change_key_case
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_change_key_case	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_change_key_case	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,13 @@
+<?php
+
+include("../upgrade.php");
+
+$a = array("low"=>32, "CamelCase"=>"Wiki");
+print_r($a);
+echo "\n";
+$a = array_change_key_case($a, CASE_UPPER);
+print_r($a);
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_chunk
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_chunk	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_chunk	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,12 @@
+<?php
+
+include("../upgrade.php");
+
+$a = array("a", "b", "c", "d", "e");
+$r = array_chunk($a, 2, 1);
+echo 'array_chunk($a, 2, 1) = ';
+print_r($r);
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_combine
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_combine	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_combine	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,19 @@
+<?php
+
+include("../upgrade.php");
+
+
+?>
+$a = array('green', 'red', 'yellow');
+$b = array('avocado', 'apple', 'banana');
+$c = array_combine($a, $b);
+
+print_r($c);
+<?php
+$a = array('green', 'red', 'yellow');
+$b = array('avocado', 'apple', 'banana');
+$c = array_combine($a, $b);
+
+print_r($c);
+?>
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_diff_assoc
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_diff_assoc	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_diff_assoc	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,18 @@
+<?php
+
+include("../upgrade.php");
+
+
+?>
+$a = array(5=>5, 14=>10000, "ccc"=>555, 555);
+$b = array(5=>5, 13=>10000,         15=>555);
+$res = array_diff_assoc($a, $b);
+
+print_r($res);
+<?php
+$a = array(5=>5, 14=>10000, "ccc"=>555, 555);
+$b = array(5=>5, 13=>10000,         15=>555);
+$res = array_diff_assoc($a, $b);
+print_r($res);
+?>
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_fill
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_fill	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_fill	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,10 @@
+<?php
+
+include("../upgrade.php");
+
+$a = 17;
+$a = array_fill(1, 17, $a);
+print_r($a);
+
+?>
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_intersect_assoc
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_intersect_assoc	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_intersect_assoc	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,17 @@
+<?php
+
+include("../upgrade.php");
+
+?>
+$a = array(5=>5, 14=>10000, "ccc"=>555, 555);
+$b = array(5=>5, 13=>10000, 555);
+$res = array_intersect_assoc($a, $b);
+
+print_r($res);
+<?php
+$a = array(5=>5, 14=>10000, "ccc"=>555, 555);
+$b = array(5=>5, 13=>10000, 555);
+$res = array_intersect_assoc($a, $b);
+print_r($res);
+?>
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_udiff_uassoc
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_udiff_uassoc	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_udiff_uassoc	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,54 @@
+<?php
+
+include("../ext/array.php");
+
+#-- from manual --
+
+class cr {
+    var $priv_member;
+    function cr($val)
+    {
+        $this->priv_member = $val;
+    }
+}
+    function comp_func_cr($a, $b)
+    {
+        if ($a->priv_member === $b->priv_member) return 0;
+        return ($a->priv_member > $b->priv_member)? 1:-1;
+    }
+    
+    function comp_func_key($a, $b)
+    {
+        if ($a === $b) return 0;
+        return ($a > $b)? 1:-1;
+    }
+
+
+$a = array(
+   "0.1" => new cr(9),
+   "0.5" => new cr(12),
+   0 => new cr(23),
+   1=> new cr(4),
+   2 => new cr(-15),
+);
+$b = array(
+   "0.2" => new cr(9),
+   "0.5" => new cr(22),
+   0 => new cr(3),
+   1=> new cr(4),
+   2 => new cr(-15),
+);
+
+$result = array_udiff_uassoc($a, $b, "comp_func_cr", "comp_func_key");
+$expected = array (
+  '0.1' => new cr(9),
+  '0.5' => new cr(12),
+  0 => new cr(23),
+);
+print_r($result);
+
+if ($result == $expected) {
+   echo "\n--> works correctly\n";
+}
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_walk_recursive
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_walk_recursive	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/array_walk_recursive	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,26 @@
+<?php
+
+include("../upgrade.php");
+
+$a = array(
+  "x1",
+  "x2\\",
+  array(
+     "x3aaa1",
+     "x3a\\a2",
+  ),
+  "x4\+end",
+);
+
+echo "__start:\n";
+array_walk_recursive($a, "outp");
+
+function outp(&$a) {
+   var_dump($a);
+   $a = stripslashes($a);
+}
+
+echo "\n__result:\n";
+var_dump($a);
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/base16
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/base16	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/base16	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,8 @@
+<?php
+include "../ext/base64.php";
+
+echo base16_encode("123");
+echo "\n";
+echo base16_decode("313233");
+
+?>

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/bcmath
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/bcmath	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/bcmath	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,14 @@
+<?php
+
+include("../ext/bcmath.php");
+
+bcscale(50);
+echo "1/17=";
+echo bcdiv("1", "17");
+echo "\n";
+
+echo "2^55%77777=";
+echo bcpowmod(2, 55, 77777);
+echo "\n";
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/class_parents
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/class_parents	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/class_parents	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,15 @@
+<?php
+
+include("../upgrade.php");
+
+class a {}
+class x extends a {}
+class y extends x {}
+class z extends a {}
+class eve extends y {}
+
+$y = new y;
+$r = class_parents($y);
+print_r($r);
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/file_put_contents
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/file_put_contents	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/file_put_contents	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,17 @@
+<?php
+
+include("../upgrade.php");
+
+$FN = "/tmp/test_fpc";
+
+echo 'file_put_contents("/tmp/test_fpc", "abc-test-text");'."\n";
+file_put_contents($FN, "abc-test-text");
+
+echo 'echo file_get_contents("/tmp/test_fpc");'."\n => ";
+echo file_get_contents($FN);
+
+unlink($FN);
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/floatval
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/floatval	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/floatval	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,8 @@
+floatval("1234.567abc") = <?php
+
+include("../upgrade.php");
+
+$str = "1234.567abc";
+echo floatval($str);
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/fmod
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/fmod	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/fmod	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,8 @@
+<?php
+
+include("../upgrade.php");
+
+$r = fmod(5.7, 1.3);
+echo "fmod(5.7, 1.3) = $r\n";
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/fnmatch
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/fnmatch	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/fnmatch	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,17 @@
+<?php
+
+include("../upgrade.php");
+
+$text = "Some text goes here...";
+echo '$text = "Some text goes here...";';
+echo "\nfnmatch('go*', $text) = ". (fnmatch('go*', $text) ?1:0);
+echo "\nfnmatch('*go', $text) = ". (fnmatch('*go', $text) ?1:0);
+echo "\nfnmatch('*go*', $text) = ". (fnmatch('*go*', $text) ?1:0);
+echo "\nfnmatch('*te?x*', $text) = ". (fnmatch('*te?x*', $text) ?1:0);
+echo "\nfnmatch('*te?t*', $text) = ". (fnmatch('*te?t*', $text) ?1:0);
+echo "\nfnmatch('So?m*', $text) = ". (fnmatch('So?m*', $text) ?1:0);
+echo "\nfnmatch('So*m*', $text) = ". (fnmatch('*So*m*', $text) ?1:0);
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/get_headers
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/get_headers	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/get_headers	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,8 @@
+<?php
+
+include("../upgrade.php");
+
+$r = get_headers("http://localhost/");
+print_r($r);
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/gettext
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/gettext	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/gettext	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,15 @@
+<?php
+
+include("../ext/gettext.php");
+
+#-- load
+echo "bindtextdomain(\"tar\");\n";
+bindtextdomain("tar");
+textdomain("tar");
+
+#-- query
+echo "_(\"stdin\") == \"";
+echo _("stdin");
+echo "\"\n";
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/glob
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/glob	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/glob	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,11 @@
+<?php
+
+include("../upgrade.php");
+
+echo 'glob("../tests/*m*") = ';
+$r = glob("../tests/*m*");
+print_r($r);
+
+
+?>
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/gzdecode
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/gzdecode	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/gzdecode	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,15 @@
+<?php
+
+include("../upgrade.php");
+
+$orig =
+"ORIGINAL_TEXT.................................................................................................................................................................................................................................End";
+$gz = gzencode($orig);
+echo "strlen(\$orig) == ".strlen($orig)."\n";
+echo "strlen(\$gz) == ".strlen($gz)."\n...\n";
+
+$text = gzdecode($gz);
+echo "gzdecode(\$gz) = \"$text\"\n\n";
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/headers_list
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/headers_list	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/headers_list	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,16 @@
+<?php
+
+include("../upgrade.php");
+
+header("Content-Type: text/x-display-on-console");
+header("X-Server: upgradephp-test/2.75.01d");
+echo "header(\"...\");\n\n";
+
+echo "\$r = headers_list();\n\n";
+error_reporting(E_ALL);
+$r = headers_list();
+print_r($r);
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/html_entity_decode
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/html_entity_decode	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/html_entity_decode	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,10 @@
+<?php
+
+include("../upgrade.php");
+
+echo 'html_entity_decode("&lt;&amp;&gt;&auml;&szlig;") = ';
+echo html_entity_decode("&lt;&amp;&gt;&auml;&szlig;");
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/http_build_query
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/http_build_query	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/http_build_query	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,15 @@
+<?php
+
+include("../upgrade.php");
+
+
+?>
+$data = array('foo', 'bar', "sub"=>array('b', 'c'), 'cow' => 'milk', 'php' =>'hypertext processor');
+echo http_build_query($data, "num_");
+
+<?php
+$data = array('foo', 'bar', "sub"=>array('b', 'c'), 'cow' => 'milk', 'php' =>'hypertext processor');
+echo http_build_query($data, "num_");
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/is_a
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/is_a	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/is_a	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,15 @@
+<?php
+
+include("../upgrade.php");
+
+class y {}
+class x extends y {}
+$x = new x;
+
+echo is_a($x, "x") ? "works" : "failed";
+echo "\n";
+echo is_a($x, "y") ? "works" : "failed";
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/md5_file
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/md5_file	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/md5_file	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,9 @@
+md5_file(__FILE__) = <?php
+
+include("../upgrade.php");
+
+echo md5_file(__FILE__);
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/mhash
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/mhash	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/mhash	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,27 @@
+<?php
+
+include("../upgrade.php");
+
+echo "HMAC-MD5 test cases (RFC2104/page 9):\n\n";
+
+# 1
+$k = str_pad("", 16, chr(0x0b));
+$text = "Hi There";
+$end = unpack("H32", mhash(MHASH_MD5, $text, $k));
+echo "key =     0x0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\n";
+echo "data =    \"$text\"\n";
+echo "digest =  0x$end[1]\n";
+echo "should =  0x9294727a3638bb1c13f48ef8158bfc9d\n\n";
+
+# 2
+$k = "Jefe";
+$text = "what do ya want for nothing?";
+$end = unpack("H32", mhash(MHASH_MD5, $text, $k));
+echo "key =     \"$k\"\n";
+echo "data =    \"$text\"\n";
+echo "digest =  0x$end[1]\n";
+echo "should =  0x750c783e6ab0b503eaa86e310a5db738\n\n";
+
+
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/mime_content_type
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/mime_content_type	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/mime_content_type	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,9 @@
+<?php
+
+include("../upgrade.php");
+include("../ext/mime.php");
+
+$t = mime_content_type(__FILE__);
+echo "mime_content_type(__FILE__) = $t\n\n";
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/scandir
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/scandir	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/scandir	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,9 @@
+<?php
+
+include("../upgrade.php");
+
+$r = scandir("..");
+echo "..\n\n";
+print_r($r);
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/spl_classes
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/spl_classes	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/spl_classes	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,9 @@
+<?php
+
+include("../upgrade.php");
+
+echo "print_r(spl_classes());\n\n";
+$r=spl_classes();
+print_r($r);
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_ireplace
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_ireplace	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_ireplace	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,12 @@
+<?php
+
+include("../upgrade.php");
+
+$text = "ABC_abc_DEF_def_AAaaAAaa_DDddEEee";
+echo "\$text = \"$text\";\n";
+echo 'str_ireplace("abc", "xxx", $text);'."\n\n";
+
+$text = str_ireplace("abc", "xxx", $text);
+echo "\$text = \"$text\";\n";
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_rot13
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_rot13	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_rot13	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,9 @@
+str_rot13('upgrade.php v4') = "<?php
+
+include("../upgrade.php");
+
+echo str_rot13('upgrade.php v4');
+
+?>"
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_shuffle
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_shuffle	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_shuffle	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,10 @@
+str_shuffle("ABCDEF") == "<?php
+
+include("../upgrade.php");
+
+srand(17);
+echo str_shuffle("ABCDEF");
+
+?>"
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_split
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_split	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_split	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,15 @@
+<?php
+
+include("../upgrade.php");
+
+
+?>
+$str = "Hello Friend";
+$r = str_split($str, 3);
+print_r($r);
+
+<?php
+$str = "Hello_Friend";
+$r = str_split($str, 3);
+print_r($r);
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_word_count
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_word_count	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/str_word_count	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,14 @@
+<?php
+
+include("../upgrade.php");
+
+
+$r = str_word_count("This is-a sample string.", 2);
+echo 'str_word_count("This is-a sample string.", 2) = ';
+print_r($r);
+
+
+?>
+
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/stripos
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/stripos	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/stripos	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,11 @@
+<?php
+
+include("../upgrade.php");
+
+$l = stripos("ABCDEFef", "e");
+echo "stripos(\"ABCDEFef\", \"e\") == $l\n\n";
+
+$r = strripos("ABCDefEF", "e");
+echo "strripos(\"ABCDefEF\", \"e\") == $r\n\n";
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/strpbrk
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/strpbrk	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/strpbrk	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,15 @@
+<?php
+
+include("../upgrade.php");
+
+?>
+$text = 'This is a Simple text.';
+
+echo strpbrk($text, 'mi');
+<?php
+$text = 'This is a Simple text.';
+echo strpbrk($text, 'mi')."\n\n";
+
+echo 'echo strpbrk($text, "S");'."\n";
+echo strpbrk($text, "S")."\n\n";
+?>

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/strripos
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/strripos	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/strripos	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,10 @@
+<?php
+
+include("../upgrade.php");
+
+echo 'strripos("aaaabc_DEFff_ABCccc", "a") == ';
+echo strripos("aaaabc_DEFff_ABCccc", "a");
+
+?>
+
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/substr_compare
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/substr_compare	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/substr_compare	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,12 @@
+<?php
+
+include("../upgrade.php");
+
+
+echo 'substr_compare("abcde", "bc", 1, 2) == '. substr_compare("abcde", "bc", 1, 2) . "   // 0\n";
+echo 'substr_compare("abcde", "bcg", 1, 2) == '. substr_compare("abcde", "bcg", 1, 2). "   // 0\n"; 
+echo 'substr_compare("abcde", "BC", 1, 2, true) == '. substr_compare("abcde", "BC", 1, 2, true) . "   // 0\n";
+echo 'substr_compare("abcde", "bc", 1, 3) == '. substr_compare("abcde", "bc", 1, 3) ."   // 1\n";
+echo 'substr_compare("abcde", "cd", 1, 2) == '. substr_compare("abcde", "cd", 1, 2) ."  // -1\n";
+echo 'substr_compare("abcde", "abc", 5, 1) == '. substr_compare("abcde", "abc", 5, 1) . "   // warning\n";
+?>

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/uuencode
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/uuencode	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/uuencode	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,11 @@
+<?php
+
+include("../upgrade.php");
+
+$uu = convert_uuencode("ABCDEFGHIJ");
+echo "\$uu = \"$uu\"\n\n";
+
+$text = convert_uudecode($uu);
+echo "\$text = \"$text\"\n\n";
+
+?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/vprintf
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/vprintf	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/tests/vprintf	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,8 @@
+<?php
+
+include("../upgrade.php");
+
+vprintf("%d, %d\n", array(17, 5));
+
+?>
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/upgrade.meta
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/upgrade.meta	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/upgrade.meta	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,11 @@
+api: PHP
+type: emulation
+priority: auto
+category: library
+sort: -200
+provides: upgrade-php
+title: PHP-Upgrade
+description: backwards-compatility layer for older PHP versions
+license: Public Domain
+url: http://freshmeat.net/p/upgradephp
+version: 13

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/upgrade.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/upgrade.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/upgrade/upgrade.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -0,0 +1,1612 @@
+<?php
+/*
+   This include() script adds missing PHP functions to earlier interpreter
+   versions, so you can make downwards compatible scripts without having
+   to stick to the least common denominator. It only defines the ones that
+   are really missing - the faster native functions will be used whenever
+   available.
+
+   - many of the emulation functions are one-liners
+   - a few features have been added that never made it into one of the
+     official versions (CVS code and the ever-absent "gzdecode" and
+     "file_put_contents" for example)
+   - a few very extravagant functions (array_u?diff*_u*assoc?) and other
+     extensions have been separated out into ext/
+   - the advanced OO-capabilities and language syntax extensions of PHP5
+     and ZE2 cannot seriously be emulated here, this emulation only takes 
+     care of procedural interfaces
+   - with only this part loaded, you get "PHP 4.1 COMPATIBILITY"
+   - this is PuplicDomain (no copyright, no license, no warranty) so you
+     can melt it into anything, regardless of your preferred license (you
+     may strip this paragraph and turn it all into GPL, BSD, GNU LGPL,
+     Artistic, MPL, PHP license, M$ EULA, or whatever you like best)
+   
+   Get update notes via "http://freshmeat.net/projects/upgradephp" or
+   google for it. Any contribution is appreciated. <milky*users?sf?net>
+*/
+
+
+
+#------------------------------------------------------------------ CVS ---
+// most of this appeared in 5.0
+// ...
+
+
+
+
+#------------------------------------------------------------------ 6.0 ---
+// following functions were never implemented in PHP
+
+
+#-- inflates a string enriched with gzip headers
+#   (this is the logical counterpart to gzencode(), but don't tell anyone!)
+if (!function_exists("gzdecode")) {
+   function gzdecode($data, $maxlen=NULL) {
+
+      #-- decode header
+      $len = strlen($data);
+      if ($len < 20) {
+         return;
+      }
+      $head = substr($data, 0, 10);
+      $head = unpack("n1id/C1cm/C1flg/V1mtime/C1xfl/C1os", $head);
+      list($ID, $CM, $FLG, $MTIME, $XFL, $OS) = array_values($head);
+      $FTEXT = 1<<0;
+      $FHCRC = 1<<1;
+      $FEXTRA = 1<<2;
+      $FNAME = 1<<3;
+      $FCOMMENT = 1<<4;
+      $head = unpack("V1crc/V1isize", substr($data, $len-8, 8));
+      list($CRC32, $ISIZE) = array_values($head);
+
+      #-- check gzip stream identifier
+      if ($ID != 0x1f8b) {
+         trigger_error("gzdecode: not in gzip format", E_USER_WARNING);
+         return;
+      }
+      #-- check for deflate algorithm
+      if ($CM != 8) {
+         trigger_error("gzdecode: cannot decode anything but deflated streams", E_USER_WARNING);
+         return;
+      }
+
+      #-- start of data, skip bonus fields
+      $s = 10;
+      if ($FLG & $FEXTRA) {
+         $s += $XFL;
+      }
+      if ($FLG & $FNAME) {
+         $s = strpos($data, "\000", $s) + 1;
+      }
+      if ($FLG & $FCOMMENT) {
+         $s = strpos($data, "\000", $s) + 1;
+      }
+      if ($FLG & $FHCRC) {
+         $s += 2;  // cannot check
+      }
+      
+      #-- get data, uncompress
+      $data = substr($data, $s, $len-$s);
+      if ($maxlen) {
+         $data = gzinflate($data, $maxlen);
+         return($data);  // no checks(?!)
+      }
+      else {
+         $data = gzinflate($data);
+      }
+      
+      #-- check+fin
+      $chk = crc32($data);
+      if ($CRC32 != $chk) {
+         trigger_error("gzdecode: checksum failed (real$chk != comp$CRC32)", E_USER_WARNING);
+      }
+      elseif ($ISIZE != strlen($data)) {
+         trigger_error("gzdecode: stream size mismatch", E_USER_WARNING);
+      }
+      else {
+         return($data);
+      }
+   }
+}
+
+
+#-- get all already made headers(),
+#   CANNOT be emulated, because output buffering functions
+#   already swallow up any sent http header
+if (!function_exists("ob_get_headers")) {
+   function ob_get_headers() {
+      return (array)NULL;
+   }
+}
+
+
+#-- encodes required named XML entities, like htmlentities(),
+#   but does not re-encode numeric &#xxxx; character references
+#   - could screw up scripts which then implement this themselves
+#   - doesn't fix bogus or invalid numeric entities
+if (!function_exists("xmlentities")) {
+   function xmlentities($str) {
+      return strtr($str, array(
+        "&#"=>"&#", "&"=>"&amp;", "'"=>"&apos;",
+        "<"=>"&lt;", ">"=>"&gt;", "\""=>"&quot;", 
+      ));
+   }
+}
+
+
+
+#------------------------------------------------------------------ 5.0 ---
+# set_exception_handler - unimpl.
+# restore_exception_handler - unimpl.
+# debug_print_backtrace - unimpl.
+# class_implements - unimplementable
+# proc_terminate - unimpl?
+# proc_get_status - unimpl.
+# --
+# proc_nice
+# dns_get_record
+# date_sunrise - undoc.
+# date_sunset - undoc.
+
+
+
+#-- constant: end of line
+if (!defined("PHP_EOL")) {
+   define("PHP_EOL", ( (DIRECTORY_SEPARATOR == "\\") ?"\015\012" :(strncmp(PHP_OS,"D",1)?"\012":"\015") )  ); #"
+}
+
+
+#-- case-insensitive string search function,
+#   - finds position of first occourence of a string c-i
+#   - parameters identical to strpos()
+if (!function_exists("stripos")) {
+   function stripos($haystack, $needle, $offset=NULL) {
+   
+      #-- simply lowercase args
+      $haystack = strtolower($haystack);
+      $needle = strtolower($needle);
+      
+      #-- search
+      $pos = strpos($haystack, $needle, $offset);
+      return($pos);
+   }
+}
+
+
+#-- case-insensitive string search function
+#   - but this one starts from the end of string (right to left)
+#   - offset can be negative or positive
+if (!function_exists("strripos")) {
+   function strripos($haystack, $needle, $offset=NULL) {
+
+      #-- lowercase incoming strings
+      $haystack = strtolower($haystack);
+      $needle = strtolower($needle);
+
+      #-- [-]$offset tells to ignore a few string bytes,
+      #   we simply cut a bit from the right
+      if (isset($offset) && ($offset < 0)) {
+         $haystack = substr($haystack, 0, strlen($haystack) - 1);
+      }
+
+      #-- let PHP do it
+      $pos = strrpos($haystack, $needle);
+
+      #-- [+]$offset => ignore left haystack bytes
+      if (isset($offset) && ($offset > 0) && ($pos > $offset)) {
+         $pos = false;
+      }
+
+      #-- result      
+      return($pos);
+   }
+}
+
+
+#-- case-insensitive version of str_replace
+if (!function_exists("str_ireplace")) {
+   function str_ireplace($search, $replace, $subject, $count=NULL) {
+
+      #-- call ourselves recursively, if parameters are arrays/lists 
+      if (is_array($search)) {
+         $replace = array_values($replace);
+         foreach (array_values($search) as $i=>$srch) {
+            $subject = str_ireplace($srch, $replace[$i], $subject);
+         }
+      }
+      
+      #-- sluice replacement strings through the Perl-regex module
+      #   (faster than doing it by hand)
+      else {
+         $replace = addcslashes($replace, "$\\");
+         $search = "{" . preg_quote($search) . "}i";
+         $subject = preg_replace($search, $replace, $subject);
+      }
+
+      #-- result
+      return($subject);
+   }
+}
+
+
+#-- performs a http HEAD request
+if (!function_exists("get_headers")) {
+   function get_headers($url, $parse=0) {
+   
+      #-- extract URL parts ($host, $port, $path, ...)
+      $c = parse_url($url);
+      extract($c);
+      if (!isset($port)) { 
+         $port = 80;
+      }
+      
+      #-- try to open TCP connection      
+      $f = fsockopen($host, $port, $errno, $errstr, $timeout=15);
+      if (!$f) {
+         return;
+      }
+
+      #-- send request header
+      socket_set_blocking($f, true);
+      fwrite($f, "HEAD $path HTTP/1.0\015\012"
+               . "Host: $host\015\012"
+               . "Connection: close\015\012"
+               . "Accept: */*, xml/*\015\012"
+               . "User-Agent: ".trim(ini_get("user_agent"))."\015\012"
+               . "\015\012");
+
+      #-- read incoming lines
+      $ls = array();
+      while ( !feof($f) && ($line = trim(fgets($f, 1<<16))) ) {
+         
+         #-- read header names to make result an hash (names in array index)
+         if ($parse) {
+            if ($l = strpos($line, ":")) {
+               $name = substr($line, 0, $l);
+               $value = trim(substr($line, $l + 1));
+               #-- merge headers
+               if (isset($ls[$name])) {
+                  $ls[$name] .= ", $value";
+               }
+               else {
+                  $ls[$name] = $value;
+               }
+            }
+            #-- HTTP response status header as result[0]
+            else {
+               $ls[] = $line;
+            }
+         }
+         
+         #-- unparsed header list (numeric indices)
+         else {
+            $ls[] = $line;
+         }
+      }
+
+      #-- close TCP connection and give result
+      fclose($f);
+      return($ls);
+   }
+}
+
+
+#-- list of already/potentially sent HTTP responsee headers(),
+#   CANNOT be implemented (except for Apache module maybe)
+if (!function_exists("headers_list")) {
+   function headers_list() {
+      trigger_error("headers_list(): not supported by this PHP version", E_USER_WARNING);
+      return (array)NULL;
+   }
+}
+
+
+#-- write formatted string to stream/file,
+#   arbitrary numer of arguments
+if (!function_exists("fprintf")) {
+   function fprintf(/*...*/) {
+      $args = func_get_args();
+      $stream = array_shift($args);
+      return fwrite($stream, call_user_func_array("sprintf", $args));
+   }
+}
+
+
+#-- write formatted string to stream, args array
+if (!function_exists("vfprintf")) {
+   function vfprintf($stream, $format, $args=NULL) {
+      return fwrite($stream, vsprintf($format, $args));
+   }
+}
+
+
+#-- splits a string in evenly sized chunks
+#   and returns this as array
+if (!function_exists("str_split")) {
+   function str_split($str, $chunk=1) {
+      $r = array();
+      
+      #-- return back as one chunk completely, if size chosen too low
+      if ($chunk < 1) {
+         $r[] = $str;
+      }
+      
+      #-- add substrings to result array until subject strings end reached
+      else {
+         $len = strlen($str);
+         for ($n=0; $n<$len; $n+=$chunk) {
+            $r[] = substr($str, $n, $chunk);
+         }
+      }
+      return($r);
+   }
+}
+
+
+#-- constructs a QUERY_STRING (application/x-www-form-urlencoded format, non-raw)
+#   from a nested array/hash with name=>value pairs
+#   - only first two args are part of the original API - rest used for recursion
+if (!function_exists("http_build_query")) {
+   function http_build_query($data, $int_prefix="", $subarray_pfix="", $level=0) {
+   
+      #-- empty starting string
+      $s = "";
+      ($SEP = ini_get("arg_separator.output")) or ($SEP = "&");
+      
+      #-- traverse hash/array/list entries 
+      foreach ($data as $index=>$value) {
+         
+         #-- add sub_prefix for subarrays (happens for recursed innovocation)
+         if ($subarray_pfix) {
+            if ($level) {
+               $index = "[" . $index . "]";
+            }
+            $index =  $subarray_pfix . $index;
+         }
+         #-- add user-specified prefix for integer-indices
+         elseif (is_int($index) && strlen($int_prefix)) {
+            $index = $int_prefix . $index;
+         }
+         
+         #-- recurse for sub-arrays
+         if (is_array($value)) {
+            $s .= http_build_query($value, "", $index, $level + 1);
+         }
+         else {   // or just literal URL parameter
+            $s .= $SEP . $index . "=" . urlencode($value);
+         }
+      }
+      
+      #-- remove redundant "&" from first round (-not checked above to simplifiy loop)
+      if (!$subarray_pfix) {
+         $s = substr($s, strlen($SEP));
+      }
+
+      #-- return result / to previous array level and iteration
+      return($s);
+   }
+}
+
+
+#-- transform into 3to4 uuencode
+#   - this is the bare encoding, not the uu file format
+if (!function_exists("convert_uuencode")) {
+   function convert_uuencode($data) {
+
+      #-- init vars
+      $out = "";
+      $line = "";
+      $len = strlen($data);
+#      $data .= "\252\252\252";   // PHP and uuencode(1) use some special garbage??, looks like "\000"* and "`\n`" simply appended
+
+      #-- canvass source string
+      for ($n=0; $n<$len; ) {
+      
+         #-- make 24-bit integer from first three bytes
+         $x = (ord($data[$n++]) << 16)
+            + (ord($data[$n++]) <<  8)
+            + (ord($data[$n++]) <<  0);
+            
+         #-- disperse that into 4 ascii characters
+         $line .= chr( 32 + (($x >> 18) & 0x3f) )
+                . chr( 32 + (($x >> 12) & 0x3f) )
+                . chr( 32 + (($x >>  6) & 0x3f) )
+                . chr( 32 + (($x >>  0) & 0x3f) );
+                
+         #-- cut lines, inject count prefix before each
+         if (($n % 45) == 0) {
+            $out .= chr(32 + 45) . "$line\n";
+            $line = "";
+         }
+      }
+
+      #-- throw last line, +length prefix
+      if ($trail = ($len % 45)) {
+         $out .= chr(32 + $trail) . "$line\n";
+      }
+
+      // uuencode(5) doesn't tell so, but spaces are replaced with the ` char in most implementations
+      $out = strtr("$out \n", " ", "`");
+      return($out);
+   }
+}
+
+
+#-- decodes uuencoded() data again
+if (!function_exists("convert_uudecode")) {
+   function convert_uudecode($data) {
+
+      #-- prepare
+      $out = "";
+      $data = strtr($data, "`", " ");
+      
+      #-- go through lines
+      foreach(explode("\n", ltrim($data)) as $line) {
+         if (!strlen($line)) {
+            break;  // end reached
+         }
+         
+         #-- current line length prefix
+         unset($num);
+         $num = ord($line{0}) - 32;
+         if (($num <= 0) || ($num > 62)) {  // 62 is the maximum line length
+            break;          // according to uuencode(5), so we stop here too
+         }
+         $line = substr($line, 1);
+         
+         #-- prepare to decode 4-char chunks
+         $add = "";
+         for ($n=0; strlen($add)<$num; ) {
+         
+            #-- merge 24 bit integer from the 4 ascii characters (6 bit each)
+            $x = ((ord($line[$n++]) - 32) << 18)
+               + ((ord($line[$n++]) - 32) << 12)  // were saner with "& 0x3f"
+               + ((ord($line[$n++]) - 32) <<  6)
+               + ((ord($line[$n++]) - 32) <<  0);
+               
+            #-- reconstruct the 3 original data chars
+            $add .= chr( ($x >> 16) & 0xff )
+                  . chr( ($x >>  8) & 0xff )
+                  . chr( ($x >>  0) & 0xff );
+         }
+
+         #-- cut any trailing garbage (last two decoded chars may be wrong)
+         $out .= substr($add, 0, $num);
+         $line = "";
+      }
+
+      return($out);
+   }
+}
+
+
+#-- return array of filenames in a given directory
+#   (only works for local files)
+if (!function_exists("scandir")) {
+   function scandir($dirname, $desc=0) {
+   
+      #-- check for file:// protocol, others aren't handled
+      if (strpos($dirname, "file://") === 0) {
+         $dirname = substr($dirname, 7);
+         if (strpos($dirname, "localh") === 0) {
+            $dirname = substr($dirname, strpos($dirname, "/"));
+         }
+      }
+      
+      #-- directory reading handle
+      if ($dh = opendir($dirname)) {
+         $ls = array();
+         while ($fn = readdir($dh)) {
+            $ls[] = $fn;  // add to array
+         }
+         closedir($dh);
+         
+         #-- sort filenames
+         if ($desc) {
+            rsort($ls);
+         }
+         else {
+            sort($ls);
+         }
+         return $ls;
+      }
+
+      #-- failure
+      return false;
+   }
+}
+
+
+#-- like date(), but returns an integer for given one-letter format parameter
+if (!function_exists("idate")) {
+   function idate($formatchar, $timestamp=NULL) {
+   
+      #-- reject non-simple type parameters
+      if (strlen($formatchar) != 1) {
+         return false;
+      }
+      
+      #-- get current time, if not given
+      if (!isset($timestamp)) {
+         $timestamp = time();
+      }
+      
+      #-- get and turn into integer
+      $str = date($formatchar, $timestamp);
+      return (int)$str;
+   }
+}
+
+
+
+#-- combined sleep() and usleep() 
+if (!function_exists("time_nanosleep")) {
+   function time_nanosleep($sec, $nano) {
+      sleep($sec);
+      usleep($nano);
+   }
+}
+
+
+
+#-- search first occourence of any of the given chars, returns rest of haystack
+#   (char_list must be a string for compatibility with the real PHP func)
+if (!function_exists("strpbrk")) {
+   function strpbrk($haystack, $char_list) {
+   
+      #-- prepare
+      $len = strlen($char_list);
+      $min = strlen($haystack);
+      
+      #-- check with every symbol from $char_list
+      for ($n = 0; $n < $len; $n++) {
+         $l = strpos($haystack, $char_list{$n});
+         
+         #-- get left-most occourence
+         if (($l !== false) && ($l < $min)) {
+            $min = $l;
+         }
+      }
+      
+      #-- result
+      if ($min) {
+         return(substr($haystack, $min));
+      }
+      else {
+         return(false);
+      }
+   }
+}
+
+
+
+#-- logo image activation URL query strings (gaga feature)
+if (!function_exists("php_real_logo_guid")) {
+   function php_real_logo_guid() { return php_logo_guid(); }
+   function php_egg_logo_guid() { return zend_logo_guid(); }
+}
+
+
+#-- no need to implement this
+#   (there aren't interfaces in PHP4 anyhow)
+if (!function_exists("get_declared_interfaces")) {
+   function get_declared_interfaces() {
+      trigger_error("get_declared_interfaces(): Current script won't run reliably with PHP4.", E_USER_WARNING);
+      return( (array)NULL );
+   }
+}
+
+
+#-- creates an array from lists of $keys and $values
+#   (both should have same number of entries)
+if (!function_exists("array_combine")) {
+   function array_combine($keys, $values) {
+   
+      #-- convert input arrays into lists
+      $keys = array_values($keys);
+      $values = array_values($values);
+      $r = array();
+      
+      #-- one from each
+      foreach ($values as $i=>$val) {
+         if ($key = $keys[$i]) {
+            $r[$key] = $val;
+         }
+         else {
+            $r[] = $val;   // useless, PHP would have long aborted here
+         }
+      }
+      return($r);
+   }
+}
+
+
+#-- apply userfunction to each array element (descending recursively)
+#   use it like:  array_walk_recursive($_POST, "stripslashes");
+#   - $callback can be static function name or object/method, class/method
+if (!function_exists("array_walk_recursive")) {
+   function array_walk_recursive(&$input, $callback, $userdata=NULL) {
+      #-- each entry
+      foreach ($input as $key=>$value) {
+
+         #-- recurse for sub-arrays
+         if (is_array($value)) {
+            array_walk_recursive($input[$key], $callback, $userdata);
+         }
+
+         #-- $callback handles scalars
+         else {
+            call_user_func_array($callback, array(&$input[$key], $key, $userdata) );
+         }
+      }
+
+      // no return value
+   }
+}
+
+
+#-- complicated wrapper around substr() and and strncmp()
+if (!function_exists("substr_compare")) {
+   function substr_compare($haystack, $needle, $offset=0, $len=0, $ci=0) {
+
+      #-- check params   
+      if ($len <= 0) {   // not well documented
+         $len = strlen($needle);
+         if (!$len) { return(0); }
+      }
+      #-- length exception
+      if ($len + $offset >= strlen($haystack)) {
+         trigger_error("substr_compare: given length exceeds main_str", E_USER_WARNING);
+         return(false);
+      }
+
+      #-- cut
+      if ($offset) {
+         $haystack = substr($haystack, $offset, $len);
+      }
+      #-- case-insensitivity
+      if ($ci) {
+         $haystack = strtolower($haystack);
+         $needle = strtolower($needle);
+      }
+
+      #-- do
+      return(strncmp($haystack, $needle, $len));
+   }
+}
+
+
+#-- stub, returns empty list as usual;
+#   you must load "ext/spl.php" beforehand to get this
+if (!function_exists("spl_classes")) {
+   function spl_classes() {
+      trigger_error("spl_classes(): not built into this PHP version");
+      return (array)NULL;
+   }
+}
+
+
+
+#-- gets you list of class names the given objects class was derived from, slow
+if (!function_exists("class_parents")) {
+   function class_parents($obj) {
+   
+      #-- first get full list
+      $all = get_declared_classes();
+      $r = array();
+      
+      #-- filter out
+      foreach ($all as $potential_parent) {
+         if (is_subclass_of($obj, $potential_parent)) {
+            $r[$potential_parent] = $potential_parent;
+         }
+      }
+      return($r);
+   }
+}
+
+
+#-- an alias
+if (!function_exists("session_commit") && function_exists("session_write_close")) {
+   function session_commit() {
+      // simple
+      session_write_close();
+   }
+}
+
+
+#-- aliases
+if (!function_exists("dns_check_record")) {
+   function dns_check_record($host, $type=NULL) {
+      // synonym to
+      return checkdnsrr($host, $type);
+   }
+}
+if (!function_exists("dns_get_mx")) {
+   function dns_get_mx($host, $mx) {
+      $args = func_get_args();
+      // simple alias - except the optional, but referenced third parameter
+      if ($args[2]) {
+         $w = & $args[2];
+      }
+      else {
+         $w = false;
+      }
+      return getmxrr($host, $mx, $w);
+   }
+}
+
+
+#-- setrawcookie(),
+#   can this be emulated 100% exactly?
+if (!function_exists("setrawcookie")) {
+   // we output everything directly as HTTP header(), PHP doesn't seem
+   // to manage an internal cookie list anyhow
+   function setrawcookie($name, $value=NULL, $expire=NULL, $path=NULL, $domain=NULL, $secure=0) {
+      if (isset($value) && strpbrk($value, ",; \r\t\n\f\014\013")) {
+         trigger_error("setrawcookie: value may not contain any of ',; \r\n' and some other control chars; thrown away", E_USER_WARNING);
+      }
+      else {
+         $h = "Set-Cookie: $name=$value"
+            . ($expire ? "; expires=" . gmstrftime("%a, %d-%b-%y %H:%M:%S %Z", $expire) : "")
+            . ($path ? "; path=$path": "")
+            . ($domain ? "; domain=$domain" : "")
+            . ($secure ? "; secure" : "");
+         header($h);
+      }
+   }
+}
+
+
+#-- write-at-once file access (counterpart to file_get_contents)
+if (!function_exists("file_put_contents")) {
+   function file_put_contents($filename, $data, $flags=0, $resource=NULL) {
+
+      #-- prepare
+      $mode = ($flags & FILE_APPEND ? "a" : "w" ) ."b";
+      $incl = $flags & FILE_USE_INCLUDE_PATH;
+      $length = strlen($data);
+
+      #-- open for writing
+      $f = fopen($filename, $mode, $incl);
+      if ($f) {
+         $written = fwrite($f, $data);
+         fclose($f);
+         
+         #-- only report success, if completely saved
+         return($length == $written);
+      }
+   }
+}
+
+
+#-- file-related constants
+if (!defined("FILE_APPEND")) {
+   define("FILE_USE_INCLUDE_PATH", 1);
+   define("FILE_IGNORE_NEW_LINES", 2);
+   define("FILE_SKIP_EMPTY_LINES", 4);
+   define("FILE_APPEND", 8);
+   define("FILE_NO_DEFAULT_CONTEXT", 16);
+}
+
+
+#-- more new constants for 5.0
+if (!defined("E_STRICT")) {
+   define("E_STRICT", 2048);  // _STRICT is a special case of _NOTICE (_DEBUG)
+   # PHP_CONFIG_FILE_SCAN_DIR
+}
+
+
+#-- array count_recursive()
+if (!defined("COUNT_RECURSIVE")) {
+   define("COUNT_NORMAL", 0);       // count($array, 0);
+   define("COUNT_RECURSIVE", 1);    // not supported
+}
+
+
+#-- we introduce a new function, because we cannot emulate the
+#   newly introduced second parameter to count()
+if (!function_exists("count_recursive")) {
+   function count_recursive($array, $mode=1) {
+      if (!$mode) {
+         return(count($array));
+      }
+      else {
+         $c = count($array);
+         foreach ($array as $sub) {
+            if (is_array($sub)) {
+               $c += count_recursive($sub);
+            }
+         }
+         return($c);
+      }
+   }
+}
+
+
+
+
+
+
+
+#------------------------------------------------------------------ 4.3 ---
+# money_format - unimpl?
+# sha1, sha1_file - too much code to pack it into here; and this
+#                   has already been implemented elsewhere, btw
+
+
+#-- simplified file read-at-once function
+if (!function_exists("file_get_contents")) {
+   function file_get_contents($filename, $use_include_path=1) {
+
+      #-- open file, let fopen() report error
+      $f = fopen($filename, "rb", $use_include_path);
+      if (!$f) { return; }
+
+      #-- read max 2MB
+      $content = fread($f, 1<<21);
+      fclose($f);
+      return($content);
+   }
+}
+
+
+
+#-- shell-like filename matching (* and ? globbing characters)
+if (!function_exists("fnmatch")) {
+
+   #-- associated constants
+   define("FNM_PATHNAME", 1<<0);  // no wildcard ever matches a "/"
+   define("FNM_NOESCAPE", 1<<1);  // backslash can't escape meta chars
+   define("FNM_PERIOD",   1<<2);  // leading dot must be given explicit
+   define("FNM_LEADING_DIR", 1<<3);  // not in PHP
+   define("FNM_CASEFOLD", 0x50);  // match case-insensitive
+   define("FNM_EXTMATCH", 1<<5);  // not in PHP
+   
+   #-- implementation
+   function fnmatch($pattern, $str, $flags=0x0000) {
+      
+      #-- 'hidden' files
+      if ($flags & FNM_PERIOD) {
+         if (($str[0] == ".") && ($pattern[0] != ".")) {
+            return(false);    // abort early
+         }
+      }
+
+      #-- case-insensitivity
+      $rxci = "";
+      if ($flags & FNM_CASEFOLD) {
+         $rxci = "i";
+      }
+      #-- handline of pathname separators (/)
+      $wild = ".";
+      if ($flags & FNM_PATHNAME) {
+         $wild = "[^/".DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR."]";
+      }
+
+      #-- check for cached regular expressions
+      static $cmp = array();
+      if (isset($cmp["$pattern+$flags"])) {
+         $rx = $cmp["$pattern+$flags"];
+      }
+
+      #-- convert filename globs into regex
+      else {
+         $rx = preg_quote($pattern);
+         $rx = strtr($rx, array(
+            "\\*"=>"$wild*?", "\\?"=>"$wild", "\\["=>"[", "\\]"=>"]",
+         ));
+         $rx = "{^" . $rx . "$}" . $rxci;
+         
+         #-- cache
+         if (count($cmp) >= 50) {
+            $cmp = array();   // free
+         }
+         $cmp["$pattern+$flags"] = $rx;
+      }
+      
+      #-- compare
+      return(preg_match($rx, $str));
+   }
+}
+
+
+#-- file search and name matching (with shell patterns)
+if (!function_exists("glob")) {
+
+   #-- introduced constants
+   define("GLOB_MARK", 1<<0);
+   define("GLOB_NOSORT", 1<<1);
+   define("GLOB_NOCHECK", 1<<2);
+   define("GLOB_NOESCAPE", 1<<3);
+   define("GLOB_BRACE", 1<<4);
+   define("GLOB_ONLYDIR", 1<<5);
+   define("GLOB_NOCASE", 1<<6);
+   define("GLOB_DOTS", 1<<7);
+   // unlikely to work under Win(?), without replacing the explode() with
+   // a preg_split() incorporating the native DIRECTORY_SEPARATOR as well
+
+   #-- implementation
+   function glob($pattern, $flags=0x0000) {
+      $ls = array();
+      $rxci = ($flags & GLOB_NOCASE) ? "i" : "";
+#echo "\n=> glob($pattern)...\n";
+      
+      #-- transform glob pattern into regular expression
+      #   (similar to fnmatch() but still different enough to require a second func)
+      if ($pattern) {
+
+         #-- look at each directory/fn spec part separately
+         $parts2 = explode("/", $pattern);
+         $pat = preg_quote($pattern);
+         $pat = strtr($pat, array("\\*"=>".*?", "\\?"=>".?"));
+         if ($flags ^ GLOB_NOESCAPE) {
+            // uh, oh, ouuch - the above is unclean enough...
+         }
+         if ($flags ^ GLOB_BRACE) {
+            $pat = preg_replace("/\{(.+?)\}/e", 'strtr("[$1]", ",", "")', $pat);
+         }
+         $parts = explode("/", $pat);
+#echo "parts == ".implode(" // ", $parts) . "\n";
+         $lasti = count($parts) - 1;
+         $dn = "";
+         foreach ($parts as $i=>$p) {
+
+            #-- basedir included (yet no pattern matching necessary)
+            if (!strpos($p, "*?") && (strpos($p, ".?")===false)) {
+               $dn .= $parts2[$i] . ($i!=$lasti ? "/" : "");
+#echo "skip:$i, cause no pattern matching char found -> only a basedir spec\n";
+               continue;
+            }
+            
+            #-- start reading dir + match filenames against current pattern
+            if ($dh = opendir($dn ?$dn:'.')) {
+               $with_dot = ($p[1]==".") || ($flags & GLOB_DOTS);
+#echo "part:$i:$p\n";
+#echo "reading dir \"$dn\"\n";
+               while ($fn = readdir($dh)) {
+                  if (preg_match("\007^$p$\007$rxci", $fn)) {
+
+                     #-- skip over 'hidden' files
+                     if (($fn[0] == ".") && !$with_dot) {
+                        continue;
+                     }
+
+                     #-- add filename only if last glob/pattern part
+                     if ($i==$lasti) {
+                        if (is_dir("$dn$fn")) {
+                           if ($flags & GLOB_ONLYDIR) {
+                              continue;
+                           }
+                           if ($flags & GLOB_MARK) {
+                              $fn .= "/";
+                           }
+                        }
+#echo "adding '$fn' for dn=$dn to list\n";
+                        $ls[] = "$dn$fn";
+                     }
+
+                     #-- initiate a subsearch, merge result list in
+                     elseif (is_dir("$dn$fn")) {
+                        // add reamaining search patterns to current basedir
+                        $remaind = implode("/", array_slice($parts2, $i+1));
+                        $ls = array_merge($ls, glob("$dn$fn/$remaind", $flags));
+                     }
+                  }
+               }
+               closedir($dh);
+
+               #-- prevent scanning a 2nd part/dir in same glob() instance:
+               break;  
+            }
+
+            #-- given dirname doesn't exist
+            else {
+               return($ls);
+            }
+
+         }// foreach $parts
+      }
+
+      #-- return result list
+      if (!$ls && ($flags & GLOB_NOCHECK)) {
+         $ls[] = $pattern;
+      }
+      if ($flags ^ GLOB_NOSORT) {
+         sort($ls);
+      }
+#print_r($ls);
+#echo "<=\n";
+      return($ls);
+   }
+} //@FIX: fully comment, remove debugging code (- as soon as it works ;)
+
+
+#-- redundant alias for isset()
+if (!function_exists("array_key_exists")) {
+   function array_key_exists($key, $search) {
+      return isset($search[$key]);
+   }
+}
+
+
+#-- who could need that?
+if (!function_exists("array_intersect_assoc")) {
+   function array_intersect_assoc( /*array, array, array...*/ ) {
+
+      #-- parameters, prepare
+      $in = func_get_args();
+      $cmax = count($in);
+      $whatsleftover = array();
+      
+      #-- walk through each array pair
+      #   (take first as checklist)
+      foreach ($in[0] as $i => $v) {
+         for ($c = 1; $c < $cmax; $c++) {
+            #-- remove entry, as soon as it isn't present
+            #   in one of the other arrays
+            if (!isset($in[$c][$i]) || (@$in[$c][$i] !== $v)) {
+               continue 2;
+            }
+         }
+         #-- it was found in all other arrays
+         $whatsleftover[$i] = $v;
+      }
+      return $whatsleftover;
+   }
+}
+
+
+#-- the opposite of the above
+if (!function_exists("array_diff_assoc")) {
+   function array_diff_assoc( /*array, array, array...*/ ) {
+
+      #-- params
+      $in = func_get_args();
+      $diff = array();
+      
+      #-- compare each array with primary/first
+      foreach ($in[0] as $i=>$v) {
+         for ($c=1; $c<count($in); $c++) {
+            #-- skip as soon as it matches with entry in another array
+            if (isset($in[$c][$i]) && ($in[$c][$i] == $v)) {
+               continue 2;
+            }
+         }
+         #-- else
+         $diff[$i] = $v;
+      }
+      return $diff;
+   }
+}
+
+
+#-- opposite of htmlentities
+if (!function_exists("html_entity_decode")) {
+   function html_entity_decode($string, $quote_style=ENT_COMPAT, $charset="ISO-8859-1") {
+      //@FIX: we fall short on anything other than Latin-1
+      $y = array_flip(get_html_translation_table(HTML_ENTITIES, $quote_style));
+      return strtr($string, $y);
+   }
+}
+
+
+#-- extracts single words from a string
+if (!function_exists("str_word_count")) {
+   function str_word_count($string, $result=0) {
+   
+      #-- let someone else do the work
+      preg_match_all('/([\w](?:[-\'\w]?[\w]+)*)/', $string, $uu);
+
+      #-- return full word list
+      if ($result == 1) {
+         return($uu[1]);
+      }
+      
+      #-- array() of $pos=>$word entries
+      elseif ($result >= 2) {
+         $r = array();
+         $l = 0;
+         foreach ($uu[1] as $word) {
+            $l = strpos($string, $word, $l);
+            $r[$l] = $word;
+            $l += strlen($word);  // speed up next search
+         }
+         return($r);
+      }
+
+      #-- only count
+      else {
+         return(count($uu[1]));
+      }
+   }
+}
+
+
+#-- creates a permutation of the given strings characters
+#   (let's hope the random number generator was alread initialized)
+if (!function_exists("str_shuffle")) {
+   function str_shuffle($str) {
+      $r = "";
+
+      #-- cut string down with every iteration
+      while (strlen($str)) {
+         $n = strlen($str) - 1;
+         if ($n) {
+            $n = rand(0, $n);   // glibcs` rand is ok since 2.1 at least
+         }
+         
+         #-- cut out elected char, add to result string
+         $r .= $str{$n};
+         $str = substr($str, 0, $n) . substr($str, $n + 1);
+      }
+      return($r);
+   }
+}
+
+
+#-- simple shorthands
+if (!function_exists("get_include_path")) {
+   function get_include_path() {
+      return(get_cfg_var("include_path"));
+   }
+   function set_include_path($new) {
+      return ini_set("include_path", $new);
+   }
+   function restore_include_path() {
+      ini_restore("include_path");
+   }
+}
+
+
+#-- constants for 4.3
+if (!defined("PATH_SEPARATOR")) {
+   define("PATH_SEPARATOR", ((DIRECTORY_SEPARATOR=='\\') ? ';' :':'));
+   define("PHP_SHLIB_SUFFIX", ((DIRECTORY_SEPARATOR=='\\') ? 'dll' :'so'));
+}
+if (!defined("PHP_SAPI")) {
+   define("PHP_SAPI", php_sapi_name());
+}
+if (!defined("__FUNCTION__")) {
+   define("__FUNCTION__", NULL);   // empty string would signalize main()
+}
+
+
+#-- not identical to what PHP reports (it seems to `which` for itself)
+if (!defined("PHP_PREFIX") && isset($_ENV["_"])) { 
+   define("PHP_PREFIX", substr($_ENV["_"], 0, strpos($_ENV["_"], "bin/")));
+}
+
+
+
+
+
+
+#------------------------------------------------------------------ 4.2 ---
+# almost complete!?
+
+
+#-- shy away from this one - it was broken in all real PHP4.2 versions, and
+#   this function emulation script won't change that
+if (!function_exists("str_rot13")) {
+   function str_rot13($str) {
+      static $from = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
+      static $to = "NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm";
+      return strtr($str, $from, $to);
+   }
+}
+
+
+#-- well, if you need it
+if (!function_exists("array_change_key_case")) {
+   
+   #-- introduced constants
+   define("CASE_LOWER", 0);
+   define("CASE_UPPER", 1);
+   
+   #-- implementation
+   function array_change_key_case($array, $case=CASE_LOWER) {
+   
+      #-- loop through
+      foreach ($array as $i=>$v) {
+         #-- do anything for strings only
+         if (is_string($i)) {
+            unset($array[$i]);
+            $i = ($case==CASE_LOWER) ? strtolower($i) : strtoupper($i);
+            $array[$i] = $v;
+         }
+         // non-recursive      
+      }
+      return($array);
+   }
+}
+
+
+#-- create fixed-length array made up of $value data
+if (!function_exists("array_fill")) {
+   function array_fill($start_index, $num, $value) {
+
+      #-- params
+      $r = array();
+      $i = $start_index;
+      $end = $num + $start_index;
+      
+      #-- append
+      for (; $i < $end; $i++)
+      {
+         $r[$i] = $value;
+      }
+      return($r);
+   }
+}
+
+
+#-- split an array into evenly sized parts
+if (!function_exists("array_chunk")) {
+   function array_chunk($input, $size, $preserve_keys=false) {
+   
+      #-- array for chunked output
+      $r = array();
+      $n = -1;  // chunk index
+      
+      #-- enum input array blocks
+      foreach ($input as $i=>$v) {
+      
+         #-- new chunk
+         if (($n < 0) || (count($r[$n]) == $size)) {
+            $n++;
+            $r[$n] = array();
+         }
+         
+         #-- add input value into current [$n] chunk
+         if ($preserve_keys) {
+            $r[$n][$i] = $v;
+         }
+         else {
+            $r[$n][] = $v;
+         }
+      }
+      return($r);
+   }
+}
+
+
+#-- convenience wrapper
+if (!function_exists("md5_file")) {
+   function md5_file($filename, $raw_output=false) {
+
+      #-- read file, apply hash function
+      $data = file_get_contents($filename, "rb");
+      $r = md5($data);
+      $data = NULL;
+         
+      #-- transform? and return
+      if ($raw_output) {
+         $r = pack("H*", $r);
+      }
+      return $r;
+   }
+}
+
+
+#-- object type checking
+if (!function_exists("is_a")) {
+   function is_a($obj, $classname) {
+   
+      #-- lowercase everything for comparison
+      $classnaqme = strtolower($classname);
+      $obj_class =  strtolower(get_class($obj));
+      
+      #-- two possible checks
+      return ($obj_class == $classname) or is_subclass_of($obj, $classname);
+   }
+}
+
+
+#-- floating point modulo
+if (!function_exists("fmod")) {
+   function fmod($x, $y) {
+      $r = $x / $y;
+      $r -= (int)$r;
+      $r *= $y;
+      return($r);
+   }
+}
+
+
+#-- makes float variable from string
+if (!function_exists("floatval")) {
+   function floatval($str) {
+      $str = ltrim($str);
+      return (float)$str;
+   }
+}
+
+
+#-- floats
+if (!function_exists("is_infinite")) {
+
+   #-- constants as-is
+   define("NAN", "NAN");
+   define("INF", "INF");   // there is also "-INF"
+   
+   #-- simple checks
+   function is_infinite($f) {
+      $s = (string)$f;
+      return(  ($s=="INF") || ($s=="-INF")  );
+   }
+   function is_nan($f) {
+      $s = (string)$f;
+      return(  $s=="NAN"  );
+   }
+   function is_finite($f) {
+      $s = (string)$f;
+      return(  !strpos($s, "N")  );
+   }
+}
+
+
+#-- throws value-instantiation PHP-code for given variable
+#   (a bit different from the standard, was intentional for its orig use)
+if (!function_exists("var_export")) {
+   function var_export($var, $return=false, $indent="", $output="") {
+
+      #-- output as in-class variable definitions
+      if (is_object($var)) {
+         $output = "class " . get_class($var) . " {\n";
+         foreach (((array)$var) as $id=>$var) {
+            $output .= "  var \$$id = " . var_export($var, true) . ";\n";
+         }
+         $output .= "}";
+      }
+      
+      #-- array constructor
+      elseif (is_array($var)) {
+         foreach ($var as $id=>$next) {
+            if ($output) $output .= ",\n";
+                    else $output = "array(\n";
+            $output .= $indent . '  '
+                    . (is_numeric($id) ? $id : '"'.addslashes($id).'"')
+                    . ' => ' . var_export($next, true, "$indent  ");
+         }
+         if (empty($output)) $output = "array(";
+         $output .= "\n{$indent})";
+       #if ($indent == "") $output .= ";";
+      }
+      
+      #-- literals
+      elseif (is_numeric($var)) {
+         $output = "$var";
+      }
+      elseif (is_bool($var)) {
+         $output = $var ? "true" : "false";
+      }
+      else {
+         $output = "'" . preg_replace("/([\\\\\'])/", '\\\\$1', $var) . "'";
+      }
+
+      #-- done
+      if ($return) {
+         return($output);
+      }
+      else {
+         print($output);
+      }
+   }
+}
+
+
+#-- strcmp() variant that respects locale setting,
+#   existed since PHP 4.0.5, but under Win32 first since 4.3.2
+if (!function_exists("strcoll")) {
+   function strcoll($str1, $str2) {
+      return strcmp($str1, $str2);
+   }
+}
+
+
+
+
+
+#------------------------------------------------------------------ 4.1 ---
+# nl_langinfo - unimpl?
+# getmygid
+# version_compare
+#
+# See also "ext/math41.php" for some more (rarely used mathematical funcs).
+
+
+
+
+#-- aliases (an earlier fallen attempt to unify PHP function names)
+if (!function_exists("diskfreespace")) {
+   function diskfreespace() {
+      return disk_free_sapce();
+   }
+   function disktotalspace() {
+      return disk_total_sapce();
+   }
+}
+
+
+#-- variable count of arguments (in array list) printf variant
+if (!function_exists("vprintf")) {
+   function vprintf($format, $args=NULL) {
+      call_user_func_array("fprintf", get_func_args());
+   }
+}
+
+
+#-- same as above, but doesn't output directly and returns formatted string
+if (!function_exists("vsprintf")) {
+   function vsprintf($format, $args=NULL) {
+      $args = array_merge(array($format), array_values((array)$args));
+      return call_user_func_array("sprintf", $args);
+   }
+}
+
+
+#-- can be used to simulate a register_globals=on environment
+if (!function_exists("import_request_variables")) {
+   function import_request_variables($types="GPC", $pfix="") {
+      
+      #-- associate abbreviations to global var names
+      $alias = array(
+         "G" => "_GET",
+         "P" => "_POST",
+         "C" => "_COOKIE",
+         "S" => "_SERVER",   // non-standard
+         "E" => "_ENV",      // non-standard
+      );
+      #-- alias long names (PHP < 4.0.6)
+      if (!isset($_REQUEST)) {
+         $_GET = & $HTTP_GET_VARS;
+         $_POST = & $HTTP_POST_VARS;
+         $_COOKIE = & $HTTP_COOKIE_VARS;
+      }
+      
+      #-- copy
+      for ($i=0; $i<strlen($types); $i++) {
+         if ($FROM = $alias[strtoupper($c)]) {
+            foreach ($$FROM as $key=>$val) {
+               if (!isset($GLOBALS[$pfix.$key])) {
+                  $GLOBALS[$pfix . $key] = $val;
+               }
+            }
+         }
+      }
+      // done
+   }
+}
+
+
+// a few mathematical functions follow
+// (wether we should really emulate them is a different question)
+
+#-- me has no idea what this function means
+if (!function_exists("hypot")) {
+   function hypot($num1, $num2) {
+      return sqrt($num1*$num1 + $num2*$num2);  // as per PHP manual ;)
+   }
+}
+
+#-- more accurate logarithm func, but we cannot simulate it
+#   (too much work, too slow in PHP)
+if (!function_exists("log1p")) {
+   function log1p($x) {
+      return(  log(1+$x)  );
+   }
+   #-- same story for:
+   function expm1($x) {
+      return(  exp($x)-1  );
+   }
+}
+
+#-- as per PHP manual
+if (!function_exists("sinh")) {
+   function sinh($f) {
+      return(  (exp($f) - exp(-$f)) / 2  );
+   }
+   function cosh($f) {
+      return(  (exp($f) + exp(-$f)) / 2  );
+   }
+   function tanh($f) {
+      return(  sinh($f) / cosh($f)  );   // ok, that one makes sense again :)
+   }
+}
+
+#-- these look a bit more complicated
+if (!function_exists("asinh")) {
+   function asinh($x) {
+      return(  log($x + sqrt($x*$x+1))  );
+   }
+   function acosh($x) {
+      return(  log($x + sqrt($x*$x-1))  );
+   }
+   function atanh($x) {
+      return(  log1p( 2*$x / (1-$x) ) / 2  );
+   }
+}
+
+
+#-- HMAC from RFC2104, but see also PHP_Compat and Crypt_HMAC
+if (!function_exists("mhash")) {
+
+   #-- constants
+   define("MHASH_CRC32", 0);
+   define("MHASH_MD5", 1);       // RFC1321
+   define("MHASH_SHA1", 2);      // RFC3174
+   define("MHASH_TIGER", 7);
+   define("MHASH_MD4", 16);      // RFC1320
+   define("MHASH_SHA256", 17);
+   define("MHASH_ADLER32", 18);
+   
+   #-- implementation
+   function mhash($hashtype, $text, $key) {
+   
+      #-- hash function
+      if (!($func = mhash_get_hash_name($hashtype)) || !function_exists($func)) {
+         return trigger_error("mhash: cannot use hash algorithm #$hashtype/$func", E_USER_ERROR);
+      }
+      if (!$key) {
+         trigger_error("mhash: called without key", E_USER_WARNING);
+      }
+      
+      #-- params
+      $bsize = mhash_get_block_size($hashtype);   // fixed size, 64
+
+      #-- pad key
+      if (strlen($key) > $bsize) {  // hash key, when it's too long
+         $key = $func($key); 
+         $key = pack("H*", $key);   // binarify
+      }
+      $key = str_pad($key, $bsize, "\0");  // fill up with NULs (1)
+      
+      #-- prepare inner and outer padding stream
+      $ipad = str_pad("", $bsize, "6");   // %36
+      $opad = str_pad("", $bsize, "\\");  // %5C
+      
+      #-- call hash func    // php can XOR strings for us
+      $dgst = pack("H*",  $func(  ($key ^ $ipad)  .  $text  ));  // (2,3,4)
+      $dgst = pack("H*",  $func(  ($key ^ $opad)  .  $dgst  ));  // (5,6,7)
+      return($dgst);
+   }
+   
+   #-- return which hash functions are implemented
+   function mhash_count() {
+      return(MHASH_SHA1);
+   }
+   
+   #-- map numeric identifier to hash function name
+   function mhash_get_hash_name($i) {
+      static $hash_funcs = array(
+          MHASH_CRC32 => "crc32",   // would need dechex()ing in main func?
+          MHASH_MD5 => "md5",
+          MHASH_SHA1 => "sha1",
+      );
+      return(strtoupper($hash_funcs[$i]));
+   }
+   
+   #-- static value
+   function mhash_get_block_size($i) {
+      return(64);
+   }
+}
+
+
+
+#-- other stuff
+/*
+  removed funcs??
+      [18] => leak
+*/
+
+
+
+#-- pre-4.1 -- end
+// no need to implement anything below that, because such old versions
+// will be incompatbile anyhow (- none of the newer superglobals known),
+// but see also "ext/old"
+
+
+?>

Modified: YDFramework2.0/trunk/YDFramework2/YDF2_init.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDF2_init.php	2006-12-09 18:08:01 UTC (rev 2249)
+++ YDFramework2.0/trunk/YDFramework2/YDF2_init.php	2006-12-09 18:13:10 UTC (rev 2250)
@@ -222,6 +222,13 @@
     }
 
     /**
+     *	This function will include a upgrade file that simulates php functions not present in this php system
+     */
+    function YDIncludeCompatibility() {
+        include_once( dirname( __FILE__ ) . '/3rdparty/upgrade/upgrade.php' );
+    }
+
+    /**
      *	This function will add a marker to the global timer.
      *
      *	@param $name	The name of the marker.



From ximian at mail.berlios.de  Sat Dec  9 22:33:10 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 9 Dec 2006 22:33:10 +0100
Subject: [ydf-devel] r2251 - in YDFramework2.0/trunk/YDFramework2: 3rdparty
	3rdparty/captcha 3rdparty/fonts YDClasses
	YDClasses/YDFormElements addons addons/YDCaptcha
Message-ID: <200612092133.kB9LXANt007133@sheep.berlios.de>

Author: ximian
Date: 2006-12-09 22:31:11 +0100 (Sat, 09 Dec 2006)
New Revision: 2251

Added:
   YDFramework2.0/trunk/YDFramework2/3rdparty/captcha/
   YDFramework2.0/trunk/YDFramework2/3rdparty/captcha/php-captcha.inc.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/COPYRIGHT.TXT
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/README.TXT
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/RELEASENOTES.TXT
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/Vera.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraBI.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraBd.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraIt.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoBI.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoBd.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoIt.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMono.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraSe.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraSeBd.ttf
   YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/local.conf
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php
   YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/
   YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/YDCaptcha.php
Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php
Log:
- added new YDForm element: CAPTCHA  :)
- added new form rule 'captcha' that checks if a captcha element is valid
- added new YD addon YDCaptcha for captcha creation

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/captcha/php-captcha.inc.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/captcha/php-captcha.inc.php	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/captcha/php-captcha.inc.php	2006-12-09 21:31:11 UTC (rev 2251)
@@ -0,0 +1,490 @@
+<?php
+   /***************************************************************/
+   /* PhpCaptcha - A visual and audio CAPTCHA generation library
+   
+      Software License Agreement (BSD License)
+   
+      Copyright (C) 2005-2006, Edward Eliot.
+      All rights reserved.
+      
+      Redistribution and use in source and binary forms, with or without
+      modification, are permitted provided that the following conditions are met:
+
+         * Redistributions of source code must retain the above copyright
+           notice, this list of conditions and the following disclaimer.
+         * Redistributions in binary form must reproduce the above copyright
+           notice, this list of conditions and the following disclaimer in the
+           documentation and/or other materials provided with the distribution.
+         * Neither the name of Edward Eliot nor the names of its contributors 
+           may be used to endorse or promote products derived from this software 
+           without specific prior written permission of Edward Eliot.
+
+      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS "AS IS" AND ANY
+      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+      WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+      DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY
+      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+      SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+   
+      Last Updated:  18th April 2006                               */
+   /***************************************************************/
+   
+   /************************ Documentation ************************/
+   /*
+   
+   Documentation is available at http://www.ejeliot.com/pages/2
+   
+   */
+   /************************ Default Options **********************/
+   
+   // start a PHP session - this class uses sessions to store the generated 
+   // code. Comment out if you are calling already from your application
+   // session_start();
+   
+   // class defaults - change to effect globally
+   
+   define('CAPTCHA_SESSION_ID', 'php_captcha');
+   define('CAPTCHA_WIDTH', 200); // max 500
+   define('CAPTCHA_HEIGHT', 50); // max 200
+   define('CAPTCHA_NUM_CHARS', 5);
+   define('CAPTCHA_NUM_LINES', 70);
+   define('CAPTCHA_CHAR_SHADOW', false);
+   define('CAPTCHA_OWNER_TEXT', '');
+   define('CAPTCHA_CHAR_SET', ''); // defaults to A-Z
+   define('CAPTCHA_CASE_INSENSITIVE', true);
+   define('CAPTCHA_BACKGROUND_IMAGES', '');
+   define('CAPTCHA_MIN_FONT_SIZE', 16);
+   define('CAPTCHA_MAX_FONT_SIZE', 25);
+   define('CAPTCHA_USE_COLOUR', false);
+   define('CAPTCHA_FILE_TYPE', 'jpeg');
+   define('CAPTCHA_FLITE_PATH', '/usr/bin/flite');
+   define('CAPTCHA_AUDIO_PATH', '/tmp/'); // must be writeable by PHP process
+   
+   /************************ End Default Options **********************/
+   
+   // don't edit below this line (unless you want to change the class!)
+   
+   class PhpCaptcha {
+      var $oImage;
+      var $aFonts;
+      var $iWidth;
+      var $iHeight;
+      var $iNumChars;
+      var $iNumLines;
+      var $iSpacing;
+      var $bCharShadow;
+      var $sOwnerText;
+      var $aCharSet;
+      var $bCaseInsensitive;
+      var $vBackgroundImages;
+      var $iMinFontSize;
+      var $iMaxFontSize;
+      var $bUseColour;
+      var $sFileType;
+      var $sCode = '';
+      
+      function PhpCaptcha(
+         $aFonts, // array of TrueType fonts to use - specify full path
+         $iWidth = CAPTCHA_WIDTH, // width of image
+         $iHeight = CAPTCHA_HEIGHT // height of image
+      ) {
+         // get parameters
+         $this->aFonts = $aFonts;
+         $this->SetNumChars(CAPTCHA_NUM_CHARS);
+         $this->SetNumLines(CAPTCHA_NUM_LINES);
+         $this->DisplayShadow(CAPTCHA_CHAR_SHADOW);
+         $this->SetOwnerText(CAPTCHA_OWNER_TEXT);
+         $this->SetCharSet(CAPTCHA_CHAR_SET);
+         $this->CaseInsensitive(CAPTCHA_CASE_INSENSITIVE);
+         $this->SetBackgroundImages(CAPTCHA_BACKGROUND_IMAGES);
+         $this->SetMinFontSize(CAPTCHA_MIN_FONT_SIZE);
+         $this->SetMaxFontSize(CAPTCHA_MAX_FONT_SIZE);
+         $this->UseColour(CAPTCHA_USE_COLOUR);
+         $this->SetFileType(CAPTCHA_FILE_TYPE);   
+         $this->SetWidth($iWidth);
+         $this->SetHeight($iHeight);
+      }
+      
+      function CalculateSpacing() {
+         $this->iSpacing = (int)($this->iWidth / $this->iNumChars);
+      }
+      
+      function SetWidth($iWidth) {
+         $this->iWidth = $iWidth;
+         if ($this->iWidth > 500) $this->iWidth = 500; // to prevent perfomance impact
+         $this->CalculateSpacing();
+      }
+      
+      function SetHeight($iHeight) {
+         $this->iHeight = $iHeight;
+         if ($this->iHeight > 200) $this->iHeight = 200; // to prevent performance impact
+      }
+      
+      function SetNumChars($iNumChars) {
+         $this->iNumChars = $iNumChars;
+         $this->CalculateSpacing();
+      }
+      
+      function SetNumLines($iNumLines) {
+         $this->iNumLines = $iNumLines;
+      }
+      
+      function DisplayShadow($bCharShadow) {
+         $this->bCharShadow = $bCharShadow;
+      }
+      
+      function SetOwnerText($sOwnerText) {
+         $this->sOwnerText = $sOwnerText;
+      }
+      
+      function SetCharSet($vCharSet) {
+         // check for input type
+         if (is_array($vCharSet)) {
+            $this->aCharSet = $vCharSet;
+         } else {
+            if ($vCharSet != '') {
+               // split items on commas
+               $aCharSet = explode(',', $vCharSet);
+            
+               // initialise array
+               $this->aCharSet = array();
+            
+               // loop through items 
+               foreach ($aCharSet as $sCurrentItem) {
+                  // a range should have 3 characters, otherwise is normal character
+                  if (strlen($sCurrentItem) == 3) {
+                     // split on range character
+                     $aRange = explode('-', $sCurrentItem);
+                  
+                     // check for valid range
+                     if (count($aRange) == 2 && $aRange[0] < $aRange[1]) {
+                        // create array of characters from range
+                        $aRange = range($aRange[0], $aRange[1]);
+                     
+                        // add to charset array
+                        $this->aCharSet = array_merge($this->aCharSet, $aRange);
+                     }
+                  } else {
+                     $this->aCharSet[] = $sCurrentItem;
+                  }
+               }
+            }
+         }
+      }
+      
+      function CaseInsensitive($bCaseInsensitive) {
+         $this->bCaseInsensitive = $bCaseInsensitive;
+      }
+      
+      function SetBackgroundImages($vBackgroundImages) {
+         $this->vBackgroundImages = $vBackgroundImages;
+      }
+      
+      function SetMinFontSize($iMinFontSize) {
+         $this->iMinFontSize = $iMinFontSize;
+      }
+      
+      function SetMaxFontSize($iMaxFontSize) {
+         $this->iMaxFontSize = $iMaxFontSize;
+      }
+      
+      function UseColour($bUseColour) {
+         $this->bUseColour = $bUseColour;
+      }
+      
+      function SetFileType($sFileType) {
+         // check for valid file type
+         if (in_array($sFileType, array('gif', 'png', 'jpeg'))) {
+            $this->sFileType = $sFileType;
+         } else {
+            $this->sFileType = 'jpeg';
+         }
+      }
+      
+      function DrawLines() {
+         for ($i = 0; $i < $this->iNumLines; $i++) {
+            // allocate colour
+            if ($this->bUseColour) {
+               $iLineColour = imagecolorallocate($this->oImage, rand(100, 250), rand(100, 250), rand(100, 250));
+            } else {
+               $iRandColour = rand(100, 250);
+               $iLineColour = imagecolorallocate($this->oImage, $iRandColour, $iRandColour, $iRandColour);
+            }
+            
+            // draw line
+            imageline($this->oImage, rand(0, $this->iWidth), rand(0, $this->iHeight), rand(0, $this->iWidth), rand(0, $this->iHeight), $iLineColour);
+         }
+      }
+      
+      function DrawOwnerText() {
+         // allocate owner text colour
+         $iBlack = imagecolorallocate($this->oImage, 0, 0, 0);
+         // get height of selected font
+         $iOwnerTextHeight = imagefontheight(2);
+         // calculate overall height
+         $iLineHeight = $this->iHeight - $iOwnerTextHeight - 4;
+         
+         // draw line above text to separate from CAPTCHA
+         imageline($this->oImage, 0, $iLineHeight, $this->iWidth, $iLineHeight, $iBlack);
+         
+         // write owner text
+         imagestring($this->oImage, 2, 3, $this->iHeight - $iOwnerTextHeight - 3, $this->sOwnerText, $iBlack);
+         
+         // reduce available height for drawing CAPTCHA
+         $this->iHeight = $this->iHeight - $iOwnerTextHeight - 5;
+      }
+      
+      function GenerateCode() {
+         // reset code
+         $this->sCode = '';
+         
+         // loop through and generate the code letter by letter
+         for ($i = 0; $i < $this->iNumChars; $i++) {
+            if (count($this->aCharSet) > 0) {
+               // select random character and add to code string
+               $this->sCode .= $this->aCharSet[array_rand($this->aCharSet)];
+            } else {
+               // select random character and add to code string
+               $this->sCode .= chr(rand(65, 90));
+            }
+         }
+         
+         // save code in session variable
+         if ($this->bCaseInsensitive) {
+            $_SESSION[CAPTCHA_SESSION_ID] = strtoupper($this->sCode);
+         } else {
+            $_SESSION[CAPTCHA_SESSION_ID] = $this->sCode;
+         }
+      }
+      
+      function DrawCharacters() {
+         // loop through and write out selected number of characters
+         for ($i = 0; $i < strlen($this->sCode); $i++) {
+            // select random font
+            $sCurrentFont = $this->aFonts[array_rand($this->aFonts)];
+            
+            // select random colour
+            if ($this->bUseColour) {
+               $iTextColour = imagecolorallocate($this->oImage, rand(0, 100), rand(0, 100), rand(0, 100));
+            
+               if ($this->bCharShadow) {
+                  // shadow colour
+                  $iShadowColour = imagecolorallocate($this->oImage, rand(0, 100), rand(0, 100), rand(0, 100));
+               }
+            } else {
+               $iRandColour = rand(0, 100);
+               $iTextColour = imagecolorallocate($this->oImage, $iRandColour, $iRandColour, $iRandColour);
+            
+               if ($this->bCharShadow) {
+                  // shadow colour
+                  $iRandColour = rand(0, 100);
+                  $iShadowColour = imagecolorallocate($this->oImage, $iRandColour, $iRandColour, $iRandColour);
+               }
+            }
+            
+            // select random font size
+            $iFontSize = rand($this->iMinFontSize, $this->iMaxFontSize);
+            
+            // select random angle
+            $iAngle = rand(-30, 30);
+            
+            // get dimensions of character in selected font and text size
+            $aCharDetails = imageftbbox($iFontSize, $iAngle, $sCurrentFont, $this->sCode[$i], array());
+            
+            // calculate character starting coordinates
+            $iX = $this->iSpacing / 4 + $i * $this->iSpacing;
+            $iCharHeight = $aCharDetails[2] - $aCharDetails[5];
+            $iY = $this->iHeight / 2 + $iCharHeight / 4; 
+            
+            // write text to image
+            imagefttext($this->oImage, $iFontSize, $iAngle, $iX, $iY, $iTextColour, $sCurrentFont, $this->sCode[$i], array());
+            
+            if ($this->bCharShadow) {
+               $iOffsetAngle = rand(-30, 30);
+               
+               $iRandOffsetX = rand(-5, 5);
+               $iRandOffsetY = rand(-5, 5);
+               
+               imagefttext($this->oImage, $iFontSize, $iOffsetAngle, $iX + $iRandOffsetX, $iY + $iRandOffsetY, $iShadowColour, $sCurrentFont, $this->sCode[$i], array());
+            }
+         }
+      }
+      
+      function WriteFile($sFilename) {
+         if ($sFilename == '') {
+            // tell browser that data is jpeg
+            header("Content-type: image/$this->sFileType");
+         }
+         
+         switch ($this->sFileType) {
+            case 'gif':
+               $sFilename != '' ? imagegif($this->oImage, $sFilename) : imagegif($this->oImage);
+               break;
+            case 'png':
+               $sFilename != '' ? imagepng($this->oImage, $sFilename) : imagepng($this->oImage);
+               break;
+            default:
+               $sFilename != '' ? imagejpeg($this->oImage, $sFilename) : imagejpeg($this->oImage);
+         }
+      }
+      
+      function Create($sFilename = '') {
+         // check for required gd functions
+         if (!function_exists('imagecreate') || !function_exists("image$this->sFileType") || ($this->vBackgroundImages != '' && !function_exists('imagecreatetruecolor'))) {
+            return false;
+         }
+         
+         // get background image if specified and copy to CAPTCHA
+         if (is_array($this->vBackgroundImages) || $this->vBackgroundImages != '') {
+            // create new image
+            $this->oImage = imagecreatetruecolor($this->iWidth, $this->iHeight);
+            
+            // create background image
+            if (is_array($this->vBackgroundImages)) {
+               $iRandImage = array_rand($this->vBackgroundImages);
+               $oBackgroundImage = imagecreatefromjpeg($this->vBackgroundImages[$iRandImage]);
+            } else {
+               $oBackgroundImage = imagecreatefromjpeg($this->vBackgroundImages);
+            }
+            
+            // copy background image
+            imagecopy($this->oImage, $oBackgroundImage, 0, 0, 0, 0, $this->iWidth, $this->iHeight);
+            
+            // free memory used to create background image
+            imagedestroy($oBackgroundImage);
+         } else {
+            // create new image
+            $this->oImage = imagecreate($this->iWidth, $this->iHeight);
+         }
+         
+         // allocate white background colour
+         imagecolorallocate($this->oImage, 255, 255, 255);
+         
+         // check for owner text
+         if ($this->sOwnerText != '') {
+            $this->DrawOwnerText();
+         }
+         
+         // check for background image before drawing lines
+         if (!is_array($this->vBackgroundImages) && $this->vBackgroundImages == '') {
+            $this->DrawLines();
+         }
+         
+         $this->GenerateCode();
+         $this->DrawCharacters();
+         
+         // write out image to file or browser
+         $this->WriteFile($sFilename);
+         
+         // free memory used in creating image
+         imagedestroy($this->oImage);
+         
+         return true;
+      }
+      
+      // call this method statically
+      function Validate($sUserCode, $bCaseInsensitive = true) {
+         if ($bCaseInsensitive) {
+            $sUserCode = strtoupper($sUserCode);
+         }
+         
+         if (!empty($_SESSION[CAPTCHA_SESSION_ID]) && $sUserCode == $_SESSION[CAPTCHA_SESSION_ID]) {
+            // clear to prevent re-use
+            unset($_SESSION[CAPTCHA_SESSION_ID]);
+            
+            return true;
+         }
+         
+         return false;
+      }
+   }
+   
+   // this class will only work correctly if a visual CAPTCHA has been created first using PhpCaptcha
+   class AudioPhpCaptcha {
+      var $sFlitePath;
+      var $sAudioPath;
+      var $sCode;
+      
+      function AudioPhpCaptcha(
+         $sFlitePath = CAPTCHA_FLITE_PATH, // path to flite binary
+         $sAudioPath = CAPTCHA_AUDIO_PATH // the location to temporarily store the generated audio CAPTCHA
+      ) {
+         $this->SetFlitePath($sFlitePath);
+         $this->SetAudioPath($sAudioPath);
+         
+         // retrieve code if already set by previous instance of visual PhpCaptcha
+         if (isset($_SESSION[CAPTCHA_SESSION_ID])) {
+            $this->sCode = $_SESSION[CAPTCHA_SESSION_ID];
+         }
+      }
+      
+      function SetFlitePath($sFlitePath) {
+         $this->sFlitePath = $sFlitePath;
+      }
+      
+      function SetAudioPath($sAudioPath) {
+         $this->sAudioPath = $sAudioPath;
+      }
+      
+      function Mask($sText) {
+         $iLength = strlen($sText);
+         
+         // loop through characters in code and format
+         $sFormattedText = '';
+         for ($i = 0; $i < $iLength; $i++) {
+            // comma separate all but first and last characters
+            if ($i > 0 && $i < $iLength - 1) {
+               $sFormattedText .= ', ';
+            } elseif ($i == $iLength - 1) { // precede last character with "and"
+               $sFormattedText .= ' and ';
+            }
+            $sFormattedText .= $sText[$i];
+         }
+         
+         $aPhrases = array(
+            "The %1\$s characters are as follows: %2\$s",
+            "%2\$s, are the %1\$s letters",
+            "Here are the %1\$s characters: %2\$s",
+            "%1\$s characters are: %2\$s",
+            "%1\$s letters: %2\$s"
+         );
+         
+         $iPhrase = array_rand($aPhrases);
+         
+         return sprintf($aPhrases[$iPhrase], $iLength, $sFormattedText);
+      }
+      
+      function Create() {
+         $sText = $this->Mask($this->sCode);
+         $sFile = md5($this->sCode.time());
+         
+         // create file with flite
+         shell_exec("$this->sFlitePath -t \"$sText\" -o $this->sAudioPath$sFile.wav");
+         
+         // set headers
+         header('Content-type: audio/x-wav');
+         header("Content-Disposition: attachment;filename=$sFile.wav");
+         
+         // output to browser
+         echo file_get_contents("$this->sAudioPath$sFile.wav");
+         
+         // delete temporary file
+         @unlink("$this->sAudioPath$sFile.wav");
+      }
+   }
+   
+   // example sub class
+   class PhpCaptchaColour extends PhpCaptcha {
+      function PhpCaptchaColour($aFonts, $iWidth = CAPTCHA_WIDTH, $iHeight = CAPTCHA_HEIGHT) {
+         // call parent constructor
+         parent::PhpCaptcha($aFonts, $iWidth, $iHeight);
+         
+         // set options
+         $this->UseColour(true);
+      }
+   }
+?>

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/COPYRIGHT.TXT
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/COPYRIGHT.TXT	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/COPYRIGHT.TXT	2006-12-09 21:31:11 UTC (rev 2251)
@@ -0,0 +1,124 @@
+Bitstream Vera Fonts Copyright
+
+The fonts have a generous copyright, allowing derivative works (as
+long as "Bitstream" or "Vera" are not in the names), and full
+redistribution (so long as they are not *sold* by themselves). They
+can be be bundled, redistributed and sold with any software.
+
+The fonts are distributed under the following copyright:
+
+Copyright
+=========
+
+Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved. Bitstream
+Vera is a trademark of Bitstream, Inc.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of the fonts accompanying this license ("Fonts") and associated
+documentation files (the "Font Software"), to reproduce and distribute
+the Font Software, including without limitation the rights to use,
+copy, merge, publish, distribute, and/or sell copies of the Font
+Software, and to permit persons to whom the Font Software is furnished
+to do so, subject to the following conditions:
+
+The above copyright and trademark notices and this permission notice
+shall be included in all copies of one or more of the Font Software
+typefaces.
+
+The Font Software may be modified, altered, or added to, and in
+particular the designs of glyphs or characters in the Fonts may be
+modified and additional glyphs or characters may be added to the
+Fonts, only if the fonts are renamed to names not containing either
+the words "Bitstream" or the word "Vera".
+
+This License becomes null and void to the extent applicable to Fonts
+or Font Software that has been modified and is distributed under the
+"Bitstream Vera" names.
+
+The Font Software may be sold as part of a larger software package but
+no copy of one or more of the Font Software typefaces may be sold by
+itself.
+
+THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL
+BITSTREAM OR THE GNOME FOUNDATION BE LIABLE FOR ANY CLAIM, DAMAGES OR
+OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL,
+OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR
+OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT
+SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.
+
+Except as contained in this notice, the names of Gnome, the Gnome
+Foundation, and Bitstream Inc., shall not be used in advertising or
+otherwise to promote the sale, use or other dealings in this Font
+Software without prior written authorization from the Gnome Foundation
+or Bitstream Inc., respectively. For further information, contact:
+fonts at gnome dot org.
+
+Copyright FAQ
+=============
+
+   1. I don't understand the resale restriction... What gives?
+
+      Bitstream is giving away these fonts, but wishes to ensure its
+      competitors can't just drop the fonts as is into a font sale system
+      and sell them as is. It seems fair that if Bitstream can't make money
+      from the Bitstream Vera fonts, their competitors should not be able to
+      do so either. You can sell the fonts as part of any software package,
+      however.
+
+   2. I want to package these fonts separately for distribution and
+      sale as part of a larger software package or system.  Can I do so?
+
+      Yes. A RPM or Debian package is a "larger software package" to begin 
+      with, and you aren't selling them independently by themselves. 
+      See 1. above.
+
+   3. Are derivative works allowed?
+      Yes!
+
+   4. Can I change or add to the font(s)?
+      Yes, but you must change the name(s) of the font(s).
+
+   5. Under what terms are derivative works allowed?
+
+      You must change the name(s) of the fonts. This is to ensure the
+      quality of the fonts, both to protect Bitstream and Gnome. We want to
+      ensure that if an application has opened a font specifically of these
+      names, it gets what it expects (though of course, using fontconfig,
+      substitutions could still could have occurred during font
+      opening). You must include the Bitstream copyright. Additional
+      copyrights can be added, as per copyright law. Happy Font Hacking!
+
+   6. If I have improvements for Bitstream Vera, is it possible they might get 
+       adopted in future versions?
+
+      Yes. The contract between the Gnome Foundation and Bitstream has
+      provisions for working with Bitstream to ensure quality additions to
+      the Bitstream Vera font family. Please contact us if you have such
+      additions. Note, that in general, we will want such additions for the
+      entire family, not just a single font, and that you'll have to keep
+      both Gnome and Jim Lyles, Vera's designer, happy! To make sense to add
+      glyphs to the font, they must be stylistically in keeping with Vera's
+      design. Vera cannot become a "ransom note" font. Jim Lyles will be
+      providing a document describing the design elements used in Vera, as a
+      guide and aid for people interested in contributing to Vera.
+
+   7. I want to sell a software package that uses these fonts: Can I do so?
+
+      Sure. Bundle the fonts with your software and sell your software
+      with the fonts. That is the intent of the copyright.
+
+   8. If applications have built the names "Bitstream Vera" into them, 
+      can I override this somehow to use fonts of my choosing?
+
+      This depends on exact details of the software. Most open source
+      systems and software (e.g., Gnome, KDE, etc.) are now converting to
+      use fontconfig (see www.fontconfig.org) to handle font configuration,
+      selection and substitution; it has provisions for overriding font
+      names and subsituting alternatives. An example is provided by the
+      supplied local.conf file, which chooses the family Bitstream Vera for
+      "sans", "serif" and "monospace".  Other software (e.g., the XFree86
+      core server) has other mechanisms for font substitution.
+

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/README.TXT
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/README.TXT	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/README.TXT	2006-12-09 21:31:11 UTC (rev 2251)
@@ -0,0 +1,11 @@
+Contained herin is the Bitstream Vera font family.
+
+The Copyright information is found in the COPYRIGHT.TXT file (along
+with being incoporated into the fonts themselves).
+
+The releases notes are found in the file "RELEASENOTES.TXT".
+
+We hope you enjoy Vera!
+
+                        Bitstream, Inc.
+			The Gnome Project

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/RELEASENOTES.TXT
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/RELEASENOTES.TXT	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/RELEASENOTES.TXT	2006-12-09 21:31:11 UTC (rev 2251)
@@ -0,0 +1,162 @@
+Bitstream Vera Fonts - April 16, 2003
+=====================================
+
+The version number of these fonts is 1.10 to distinguish them from the
+beta test fonts.
+
+Note that the Vera copyright is incorporated in the fonts themselves.
+The License field in the fonts contains the copyright license as it
+appears below. The TrueType copyright field is not large enough to
+contain the full license, so the license is incorporated (as you might
+think if you thought about it) into the license field, which
+unfortunately can be obscure to find.  (In pfaedit, see: Element->Font
+Info->TTFNames->License).
+
+Our apologies for it taking longer to complete the fonts than planned.
+Beta testers requested a tighter line spacing (less leading) and Jim
+Lyles redesigned Vera's accents to bring its line spacing to more
+typical of other fonts.  This took additional time and effort.  Our
+thanks to Jim for this effort above and beyond the call of duty.
+
+There are four monospace and sans faces (normal, oblique, bold, bold
+oblique) and two serif faces (normal and bold). Fontconfig/Xft2 (see
+www.fontconfig.org) can artificially oblique the serif faces for you:
+this loses hinting and distorts the faces slightly, but is visibly
+different than normal and bold, and reasonably pleasing.
+
+On systems with fontconfig 2.0 or 2.1 installed, making your sans,
+serif and monospace fonts default to these fonts is very easy.  Just
+drop the file local.conf into your /etc/fonts directory.  This will
+make the Bitstream fonts your default fonts for all applications using
+fontconfig (if sans, serif, or monospace names are used, as they often
+are as default values in many desktops). The XML in local.conf may
+need modification to enable subpixel decimation, if appropriate,
+however, the commented out phrase does so for XFree86 4.3, in the case
+that the server does not have sufficient information to identify the
+use of a flat panel.  Fontconfig 2.2 adds Vera to the list of font
+families and will, by default use it as the default sans, serif and
+monospace fonts.
+
+During the testing of the final Vera fonts, we learned that screen
+fonts in general are only typically hinted to work correctly at
+integer pixel sizes.  Vera is coded internally for integer sizes only.
+We need to investigate further to see if there are commonly used fonts
+that are hinted to be rounded but are not rounded to integer sizes due
+to oversights in their coding.
+
+Most fonts work best at 8 pixels and below if anti-aliased only, as
+the amount of work required to hint well at smaller and smaller sizes
+becomes astronomical.  GASP tables are typically used to control
+whether hinting is used or not, but Freetype/Xft does not currently
+support GASP tables (which are present in Vera).
+
+To mitigate this problem, both for Vera and other fonts, there will be
+(very shortly) a new fontconfig 2.2 release that will, by default not
+apply hints if the size is below 8 pixels. if you should have a font
+that in fact has been hinted more agressively, you can use fontconfig
+to note this exception. We believe this should improve many hinted
+fonts in addition to Vera, though implemeting GASP support is likely
+the right long term solution.
+
+Font rendering in Gnome or KDE is the combination of algorithms in
+Xft2 and Freetype, along with hinting in the fonts themselves. It is
+vital to have sufficient information to disentangle problems that you
+may observe.
+
+Note that having your font rendering system set up correctly is vital
+to proper judgement of problems of the fonts:
+
+    * Freetype may or may not be configured to in ways that may
+      implement execution of possibly patented (in some parts of the world)
+      TrueType hinting algorithms, particularly at small sizes.  Best
+      results are obtained while using these algorithms.
+
+    * The freetype autohinter (used when the possibly patented
+      algorithms are not used) continues to improve with each release. If
+      you are using the autohinter, please ensure you are using an up to
+      date version of freetype before reporting problems.
+
+    * Please identify what version of freetype you are using in any
+      bug reports, and how your freetype is configured.
+
+    * Make sure you are not using the freetype version included in
+      XFree86 4.3, as it has bugs that significantly degrade most fonts,
+      including Vera. if you build XFree86 4.3 from source yourself, you may
+      have installed this broken version without intending it (as I
+      did). Vera was verified with the recently released Freetype 2.1.4. On
+      many systems, 'ldd" can be used to see which freetype shared library
+      is actually being used.
+
+    * Xft/X Render does not (yet) implement gamma correction.  This
+      causes significant problems rendering white text on a black background
+      (causing partial pixels to be insufficiently shaded) if the gamma of
+      your monitor has not been compensated for, and minor problems with
+      black text on a while background.  The program "xgamma" can be used to
+      set a gamma correction value in the X server's color pallette. Most
+      monitors have a gamma near 2.
+
+    * Note that the Vera family uses minimal delta hinting. Your
+      results on other systems when not used anti-aliased may not be
+      entirely satisfying. We are primarily interested in reports of
+      problems on open source systems implementing Xft2/fontconfig/freetype
+      (which implements antialiasing and hinting adjustements, and
+      sophisticated subpixel decimation on flatpanels).  Also, the
+      algorithms used by Xft2 adjust the hints to integer widths and the
+      results are crisper on open source systems than on Windows or
+      MacIntosh.
+
+    * Your fontconfig may (probably does) predate the release of
+      fontconfig 2.2, and you may see artifacts not present when the font is
+      used at very small sizes with hinting enabled. "vc-list -V" can be
+      used to see what version you have installed.
+
+We believe and hope that these fonts will resolve the problems
+reported during beta test.  The largest change is the reduction of
+leading (interline spacing), which had annoyed a number of people, and
+reduced Vera's utility for some applcations.  The Vera monospace font
+should also now make '0' and 'O' and '1' and 'l' more clearly
+distinguishable.
+
+The version of these fonts is version 1.10.  Fontconfig should be
+choosing the new version of the fonts if both the released fonts and
+beta test fonts are installed (though please discard them: they have
+names of form tt20[1-12]gn.ttf).  Note that older versions of
+fontconfig sometimes did not rebuild their cache correctly when new
+fonts are installed: please upgrade to fontconfig 2.2. "fc-cache -f"
+can be used to force rebuilding fontconfig's cache files.
+
+If you note problems, please send them to fonts at gnome dot org, with
+exactly which face and size and unicode point you observe the problem
+at. The xfd utility from XFree86 CVS may be useful for this (e.g. "xfd
+-fa sans").  A possibly more useful program to examine fonts at a
+variety of sizes is the "waterfall" program found in Keith Packard's
+CVS.
+
+        $ cvs -d :pserver:anoncvs at keithp.com:/local/src/CVS login
+        Logging in to :pserver:anoncvs at keithp.com:2401/local/src/CVS
+        CVS password: <hit return>
+        $ cvs -d :pserver:anoncvs at keithp.com:/local/src/CVS co waterfall
+        $ cd waterfall
+        $ xmkmf -a
+        $ make
+        # make install
+        # make install.man
+
+Again, please make sure you are running an up-to-date freetype, and
+that you are only examining integer sizes.
+
+Reporting Problems
+==================
+
+Please send problem reports to fonts at gnome org, with the following
+information:
+
+   1. Version of Freetype, Xft2 and fontconfig
+   2. Whether TT hinting is being used, or the autohinter
+   3. Application being used
+   4. Character/Unicode code point that has problems (if applicable)
+   5. Version of which operating system
+   6. Please include a screenshot, when possible.
+
+Please check the fonts list archives before reporting problems to cut
+down on duplication.

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/Vera.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/Vera.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraBI.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraBI.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraBd.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraBd.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraIt.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraIt.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoBI.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoBI.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoBd.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoBd.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoIt.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMoIt.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMono.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraMono.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraSe.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraSe.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraSeBd.ttf
===================================================================
(Binary files differ)


Property changes on: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/VeraSeBd.ttf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/local.conf
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/local.conf	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/fonts/local.conf	2006-12-09 21:31:11 UTC (rev 2251)
@@ -0,0 +1,32 @@
+<?xml version="1.0"?>
+<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
+<!-- /etc/fonts.conf file to configure system font access -->
+<fontconfig>
+        <!--  Enable sub-pixel rendering
+        <match target="font">
+                <test qual="all" name="rgba">
+                        <const>unknown</const>
+                </test>
+                <edit name="rgba" mode="assign"><const>rgb</const></edit>
+        </match>
+         -->
+
+        <alias>
+                <family>serif</family>
+                <prefer>
+                        <family>Bitstream Vera Serif</family>
+                </prefer>
+        </alias>
+        <alias>
+                <family>sans-serif</family>
+                <prefer>
+                        <family>Bitstream Vera Sans</family>
+                </prefer>
+        </alias>
+        <alias>
+                <family>monospace</family>
+                <prefer>
+                        <family>Bitstream Vera Sans Mono</family>
+                </prefer>
+        </alias>
+</fontconfig>

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php	2006-12-09 21:31:11 UTC (rev 2251)
@@ -132,6 +132,7 @@
             $this->registerElement( 'autocompleter', 'YDFormElement_Autocompleter', 'YDFormElement_Autocompleter.php' );
             $this->registerElement( 'switchmenu', 'YDFormElement_SwitchMenu', 'YDFormElement_SwitchMenu.php' );
             $this->registerElement( 'grid', 'YDFormElement_Grid', 'YDFormElement_Grid.php' );
+            $this->registerElement( 'captcha', 'YDFormElement_Captcha', 'YDFormElement_Captcha.php' );
 
 
             // Add the rules
@@ -172,6 +173,7 @@
             $this->registerRule( 'rangelength_escape', array( 'YDValidateRules', 'rangelength_escape' ), 'YDValidateRules.php' );
             $this->registerRule( 'httpurl', array( 'YDValidateRules', 'httpurl' ), 'YDValidateRules.php' );
             $this->registerRule( 'maxhyperlinks', array( 'YDValidateRules', 'maxhyperlinks' ), 'YDValidateRules.php' );
+            $this->registerRule( 'captcha', array( 'YDValidateRules', 'captcha' ), 'YDValidateRules.php' );
 
             // Add the filters
             $this->registerFilter( 'trim', 'trim' );
@@ -571,6 +573,8 @@
                 $this->_rules[ $element ] = array();
             }
             array_push( $this->_rules[ $element ], array( 'rule' => $rule, 'error' => $error, 'options' => $options ) );
+
+            if ( $rule == 'captcha' ) $this->addRule( $element, 'required', $error, $options );
         }
 
         /**

Added: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php	2006-12-09 21:31:11 UTC (rev 2251)
@@ -0,0 +1,121 @@
+<?php
+
+    /*
+
+        Yellow Duck Framework version 2.0
+        (c) Copyright 2002-2005 Pieter Claerhout
+
+        This library is free software; you can redistribute it and/or
+        modify it under the terms of the GNU Lesser General Public
+        License as published by the Free Software Foundation; either
+        version 2.1 of the License, or (at your option) any later version.
+
+        This library is distributed in the hope that it will be useful,
+        but WITHOUT ANY WARRANTY; without even the implied warranty of
+        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+        Lesser General Public License for more details.
+
+        You should have received a copy of the GNU Lesser General Public
+        License along with this library; if not, write to the Free Software
+        Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+
+    */
+
+    // Check if the framework is loaded
+    if ( ! defined( 'YD_FW_NAME' ) ) {
+        die( 'Yellow Duck Framework is not loaded.' );
+    }
+
+    // Includes
+    include_once( YD_DIR_HOME_CLS . '/YDForm.php');
+    include_once( YD_DIR_HOME . '/3rdparty/captcha/php-captcha.inc.php' );
+
+    /**
+     *	This is the class that define a captcha form element.
+     */
+    class YDFormElement_Captcha extends YDFormElement {
+
+        /**
+         *	This is the class constructor for the YDFormElement_Captcha class.
+         *
+         *	@param $form		The name of the form to which this element is connected.
+         *	@param $name		The name of the form element.
+         *	@param $label		(optional) The label for the form element.
+         *	@param $attributes	(optional) The attributes for the form element.
+         *	@param $options		(optional) The options for the elment.
+         */
+        function YDFormElement_Captcha( $form, $name, $label='', $attributes=array(), $options=array() ) {
+
+            // init parent
+            $this->YDFormElement( $form, $name, $label, $attributes, $options );
+
+            // set type
+            $this->_type = 'captcha';
+			
+			// create default image url
+			$this->_url = YDRequest::getCurrentUrl( true ) . '?do=ShowCaptcha';
+        }
+
+
+        /**
+         *	This function will return the element as HTML.
+         *
+         *	@returns	The form element as HTML text.
+         */
+        function toHtml() {
+
+            // Create the list of attributes
+            $attribs = array(
+                'type' => 'text', 'name' => $this->_form . '_' . $this->_name, 'value' => $this->_value, 'size' => 8
+            );
+            $attribs = array_merge( $this->_attributes, $attribs );
+
+            // Get the HTML
+            return '<img src="' . $this->_url . '" style="vertical-align: middle"/> <input' . YDForm::_convertToHtmlAttrib( $attribs ) . ' />';
+
+        }
+
+
+        /**
+         *	This function returns the default javascript event of this element
+         */
+        function getJSEvent(){ 
+
+            return 'onchange';
+        }
+
+
+        /**
+         *	This function gets an element value using javascript
+         *
+         *	@param $options		(optional) The options for the elment.
+         */
+        function getJS( $options = null ){ 
+
+            // return js code
+            return 'return document.getElementById("' . $this->getAttribute('id') . '").value;';
+        }
+
+
+        /**
+         *	This function sets an element value using javascript
+         *
+         *	@param $result		The result value
+         *	@param $attribute	(optional) Element attribute
+         *	@param $options		(optional) The options for the elment.
+         */
+        function setJS( $result, $attribute = null, $options = null ){ 
+
+             // if atribute is not defined we must create the default one
+             if ( is_null( $attribute ) ) $attribute = 'value';
+
+             // convert $result
+             $result = htmlspecialchars( $result );
+
+             // assign result
+             return 'document.getElementById("' . $this->getAttribute( 'id' ) . '").' . $attribute . ' = "' . $result . '";';
+        }
+
+    }
+
+?>
\ No newline at end of file

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php	2006-12-09 21:31:11 UTC (rev 2251)
@@ -736,6 +736,20 @@
 
         }
 
+        /**
+         *	This function returns true if the variable matches captcha image
+         *
+         *	@param $val		The value to test.
+         *	@param $opts	(not required)
+         */
+        function captcha( $val, $opts='' ) {
+
+            include_once( YD_DIR_HOME . '/3rdparty/captcha/php-captcha.inc.php' );
+
+            return PhpCaptcha::Validate( $val );
+        }
+
+
     }
 
 ?>
\ No newline at end of file

Added: YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/YDCaptcha.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/YDCaptcha.php	2006-12-09 18:13:10 UTC (rev 2250)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/YDCaptcha.php	2006-12-09 21:31:11 UTC (rev 2251)
@@ -0,0 +1,106 @@
+<?php
+
+    /*
+
+        Yellow Duck Framework version 2.0
+        (c) Copyright 2002-2005 Pieter Claerhout
+
+        This library is free software; you can redistribute it and/or
+        modify it under the terms of the GNU Lesser General Public
+        License as published by the Free Software Foundation; either
+        version 2.1 of the License, or (at your option) any later version.
+
+        This library is distributed in the hope that it will be useful,
+        but WITHOUT ANY WARRANTY; without even the implied warranty of
+        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+        Lesser General Public License for more details.
+
+        You should have received a copy of the GNU Lesser General Public
+        License along with this library; if not, write to the Free Software
+        Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+
+    */
+
+    // Check if the framework is loaded
+    if ( ! defined( 'YD_FW_NAME' ) ) {
+        die( 'Yellow Duck Framework is not loaded.' );
+    }
+
+	// include antispam lib
+    include_once( YD_DIR_HOME . '/3rdparty/captcha/php-captcha.inc.php' );
+
+
+    /**
+     *  This class handles a captcha image
+     */
+    class YDCaptcha extends YDAddOnModule {
+
+        /**
+         *  Class constructor for the YDCaptcha class.
+         */
+        function YDCaptcha() {
+
+            // Initializes YDBase
+            $this->YDAddOnModule();
+
+            // Setup the module
+            $this->_author = 'Francisco Azevedo';
+            $this->_version = '1.0';
+            $this->_copyright = '(c) 2006 Francisco Azevedo, francisco at fusemail.com';
+            $this->_description = 'This class manages a captcha image system.';
+
+			// compute fonts directory
+			$fdir = YD_DIR_HOME . '/3rdparty/fonts/';
+
+			// define fonts to use
+			$fonts = array( $fdir . 'VeraBd.ttf', $fdir . 'VeraIt.ttf', $fdir . 'Vera.ttf');
+
+			// create image object
+			$this->_img = new PhpCaptcha( $fonts, 150, 40 );
+			
+			$this->_img->DisplayShadow( false );
+			$this->_img->UseColour( false );
+			$this->_img->SetNumChars( 4 );
+        }
+
+
+        /**
+         *	This function set the number of characters to display
+         *
+         *	@param $num		Number of characters
+         */
+        function setNumChars( $num ){
+			$this->_img->setNumChars( $num );
+		}
+
+
+        /**
+         *	This function defines use of shadows
+         *
+         *	@param $flag		True or false boolean
+         */
+        function displayShadow( $flag ){
+			$this->_img->displayShadow( $flag );
+		}
+
+
+        /**
+         *	This function defines use of colours
+         *
+         *	@param $flag		True or false boolean
+         */
+        function useColour( $flag ){
+			$this->_img->useColour( $flag );
+		}
+
+
+        /**
+         *  This function exports the image
+         */
+        function create() {
+			return $this->_img->Create();
+        }
+
+  }
+
+?>
\ No newline at end of file



From ximian at mail.berlios.de  Sat Dec  9 22:34:53 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 9 Dec 2006 22:34:53 +0100
Subject: [ydf-devel] r2252 - YDFramework2.0/trunk/examples
Message-ID: <200612092134.kB9LYreI007206@sheep.berlios.de>

Author: ximian
Date: 2006-12-09 22:34:28 +0100 (Sat, 09 Dec 2006)
New Revision: 2252

Added:
   YDFramework2.0/trunk/examples/form_captcha.php
Modified:
   YDFramework2.0/trunk/examples/index.tpl
Log:
- added example on how to use a captcha element

Added: YDFramework2.0/trunk/examples/form_captcha.php
===================================================================
--- YDFramework2.0/trunk/examples/form_captcha.php	2006-12-09 21:31:11 UTC (rev 2251)
+++ YDFramework2.0/trunk/examples/form_captcha.php	2006-12-09 21:34:28 UTC (rev 2252)
@@ -0,0 +1,60 @@
+<?php
+
+    // standard include
+    include_once( dirname( __FILE__ ) . '/../YDFramework2/YDF2_init.php' );
+
+    // YDF includes
+    YDInclude( 'YDForm.php' );
+    YDInclude( 'YDRequest.php' );
+
+    class form_captcha extends YDRequest {
+
+        // constructor
+        function form_captcha() {
+            $this->YDRequest();
+        }
+
+        // default action
+        function actionDefault() {
+
+            // create form
+            $form = new YDForm( 'myform' );
+
+			// add elements
+            $form->addElement( 'text',    'txt', 'Enter your name:' );
+            $form->addElement( 'captcha', 'cap', 'Enter code:' );
+            $form->addElement( 'submit',  'cmd', 'Send' );
+
+			// add rules
+            $form->addRule( 'txt', 'required', 'Your name is required' );
+            $form->addRule( 'cap', 'captcha',  'Security code is not valid' );
+
+            if ( $form->validate() ) {
+                YDDebugUtil::dump( $form->getValues(), 'Form values' );
+            } else {
+                $form->display();
+            }
+
+        }
+
+		// Reserved action that creates the image
+        function actionShowCaptcha() {
+
+			// include captcha lib
+			YDInclude( 'YDCaptcha.php' );
+
+			// create captcha object
+			$captcha = new YDCaptcha();
+//			$captcha->useColour( true );
+//			$captcha->setNumChars( 3 );
+
+			// return image
+			return $captcha->Create();
+        }
+
+    }
+
+    // Process the request
+    YDInclude( 'YDF2_process.php' );
+
+?>

Modified: YDFramework2.0/trunk/examples/index.tpl
===================================================================
--- YDFramework2.0/trunk/examples/index.tpl	2006-12-09 21:31:11 UTC (rev 2251)
+++ YDFramework2.0/trunk/examples/index.tpl	2006-12-09 21:34:28 UTC (rev 2252)
@@ -186,7 +186,7 @@
             <td width="43%"><b>&nbsp;</b></td>
         </tr>
         <tr>
-            <td rowspan="12" valign="top">&nbsp;</td>
+            <td rowspan="13" valign="top">&nbsp;</td>
             <td valign="top"><a href="form.php">Form handling and validation</a> </td>
             <td valign="top">
                 <a href="{$YD_SELF_SCRIPT}?do=source&id=form.php">form.php</a>
@@ -254,6 +254,10 @@
                 <a href="{$YD_SELF_SCRIPT}?do=source&id=form_checkboxgroup.tpl">form_checkboxgroup.tpl</a>            </td>
         </tr>
         <tr>
+          <td valign="top"><a href="form_captcha.php">Using the captcha element</a></td>
+          <td valign="top"><a href="{$YD_SELF_SCRIPT}?do=source&id=form_captcha.php">form_captcha.php</a> </td>
+        </tr>
+        <tr>
             <td colspan="2"><b>&nbsp;<br/>Using logfiles</b></td>
             <td width="43%"><b>&nbsp;</b></td>
         </tr>
@@ -611,8 +615,7 @@
           <td valign="top"><a href="{$YD_SELF_SCRIPT}?do=source&id=ajax/persistent_store.php">ajax/persistent_store.php</a> </td>
         </tr>
         <tr>
-          <td valign="top"><a href="ajax/form_runtime.php">Adding extra form elements in a response </a><br/>
-          </td>
+          <td valign="top"><a href="ajax/form_runtime.php">Adding extra form elements in a response </a><br/>          </td>
           <td valign="top"><a href="{$YD_SELF_SCRIPT}?do=source&id=ajax/form_runtime.php">ajax/form_runtime.php</a> </td>
           </tr>
         <tr>
@@ -799,8 +802,7 @@
         <tr>
             <td valign="top"><a href="akismet.php">Using YDAkismet</a></td>
             <td valign="top">
-                <a href="{$YD_SELF_SCRIPT}?do=source&id=akismet.php">akismet.php</a>
-            </td>
+                <a href="{$YD_SELF_SCRIPT}?do=source&id=akismet.php">akismet.php</a>            </td>
         </tr>
         </table>
 



From ximian at mail.berlios.de  Sat Dec  9 23:18:26 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sat, 9 Dec 2006 23:18:26 +0100
Subject: [ydf-devel] r2253 -
	YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements
Message-ID: <200612092218.kB9MIQ7n012127@sheep.berlios.de>

Author: ximian
Date: 2006-12-09 23:18:06 +0100 (Sat, 09 Dec 2006)
New Revision: 2253

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php
Log:
on captcha element:
  * now, can be used on ajax (added md5 microtime to force browse download)
  * added setTextPosition() that defines text box position: before image or after image

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php	2006-12-09 21:34:28 UTC (rev 2252)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php	2006-12-09 22:18:06 UTC (rev 2253)
@@ -53,11 +53,24 @@
             $this->_type = 'captcha';
 			
 			// create default image url
-			$this->_url = YDRequest::getCurrentUrl( true ) . '?do=ShowCaptcha';
+			$this->_url = YDRequest::getCurrentUrl( true ) . '?do=ShowCaptcha&id=' . md5( microtime() );
+
+			// text box position
+			$this->_textPosition_left = false;
         }
 
 
         /**
+         *	This function set text element position
+         *
+         *	@param $onleft		Boolean that defines if text is before image (TRUE) or after image (FALSE)
+         */
+        function setTextPosition( $onleft = true ) {
+			$this->_textPosition_left = $onleft;
+		}
+
+
+        /**
          *	This function will return the element as HTML.
          *
          *	@returns	The form element as HTML text.
@@ -71,8 +84,14 @@
             $attribs = array_merge( $this->_attributes, $attribs );
 
             // Get the HTML
-            return '<img src="' . $this->_url . '" style="vertical-align: middle"/> <input' . YDForm::_convertToHtmlAttrib( $attribs ) . ' />';
+			$img = '<img width="150" height="40" src="' . $this->_url . '" style="vertical-align: middle"/>';
+			$txt = '<input' . YDForm::_convertToHtmlAttrib( $attribs ) . ' />';
 
+			if ( $this->_textPosition_left ){
+				return $txt . ' ' . $img;
+			}else{
+				return $img . ' ' . $txt;
+			}
         }
 
 



From ximian at mail.berlios.de  Sun Dec 10 01:41:25 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Sun, 10 Dec 2006 01:41:25 +0100
Subject: [ydf-devel] r2254 - in YDFramework2.0/trunk/YDFramework2/YDClasses:
	. YDFormElements
Message-ID: <200612100041.kBA0fPIZ003245@sheep.berlios.de>

Author: ximian
Date: 2006-12-10 01:40:52 +0100 (Sun, 10 Dec 2006)
New Revision: 2254

Added:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Timezone.php
Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDUtil.php
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php
Log:
* enhancement: YDArrayUtil::getGMT fixed, much better and complete
* new: YDForm element 'timezone' that is a pre-populated select box with all possible timezones
            $form->addElement( 'timezone', 'mytime', 'Select timezone' );
            $form->addElement( 'timezone', 'mytime', 'Select timezone', array(), 'simple' );
* new: validate rule 'timezone' that checks if a variable is a valid timezone

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php	2006-12-09 22:18:06 UTC (rev 2253)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDForm.php	2006-12-10 00:40:52 UTC (rev 2254)
@@ -133,8 +133,8 @@
             $this->registerElement( 'switchmenu', 'YDFormElement_SwitchMenu', 'YDFormElement_SwitchMenu.php' );
             $this->registerElement( 'grid', 'YDFormElement_Grid', 'YDFormElement_Grid.php' );
             $this->registerElement( 'captcha', 'YDFormElement_Captcha', 'YDFormElement_Captcha.php' );
+            $this->registerElement( 'timezone', 'YDFormElement_Timezone', 'YDFormElement_Timezone.php' );
 
-
             // Add the rules
             $this->registerRule( 'value', array( 'YDValidateRules', 'value' ), 'YDValidateRules.php' );
             $this->registerRule( 'required', array( 'YDValidateRules', 'required' ), 'YDValidateRules.php' );
@@ -174,6 +174,7 @@
             $this->registerRule( 'httpurl', array( 'YDValidateRules', 'httpurl' ), 'YDValidateRules.php' );
             $this->registerRule( 'maxhyperlinks', array( 'YDValidateRules', 'maxhyperlinks' ), 'YDValidateRules.php' );
             $this->registerRule( 'captcha', array( 'YDValidateRules', 'captcha' ), 'YDValidateRules.php' );
+            $this->registerRule( 'timezone', array( 'YDValidateRules', 'timezone' ), 'YDValidateRules.php' );
 
             // Add the filters
             $this->registerFilter( 'trim', 'trim' );

Added: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Timezone.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Timezone.php	2006-12-09 22:18:06 UTC (rev 2253)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Timezone.php	2006-12-10 00:40:52 UTC (rev 2254)
@@ -0,0 +1,60 @@
+<?php
+
+    /*
+
+        Yellow Duck Framework version 2.0
+        (c) Copyright 2002-2005 Pieter Claerhout
+
+        This library is free software; you can redistribute it and/or
+        modify it under the terms of the GNU Lesser General Public
+        License as published by the Free Software Foundation; either
+        version 2.1 of the License, or (at your option) any later version.
+
+        This library is distributed in the hope that it will be useful,
+        but WITHOUT ANY WARRANTY; without even the implied warranty of
+        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+        Lesser General Public License for more details.
+
+        You should have received a copy of the GNU Lesser General Public
+        License along with this library; if not, write to the Free Software
+        Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+
+    */
+
+    // Check if the framework is loaded
+    if ( ! defined( 'YD_FW_NAME' ) ) {
+        die( 'Yellow Duck Framework is not loaded.' );
+    }
+
+    // Includes
+    include_once( dirname( __FILE__ ) . '/YDFormElement_Select.php');
+
+    /**
+     *	This is the class that define a select timezone.
+     */
+    class YDFormElement_Timezone extends YDFormElement_Select {
+
+        /**
+         *	This is the class constructor for the YDFormElement_Timezone class.
+         *
+         *	@param $form		The name of the form to which this element is connected.
+         *	@param $name		The name of the form element.
+         *	@param $label		(optional) The label for the form element.
+         *	@param $attributes	(optional) The attributes for the form element.
+         *	@param $options		(optional) Format string: 'simple' or 'full'
+         */
+        function YDFormElement_Timezone( $form, $name, $label='', $attributes=array(), $options='full' ) {
+
+            // initialize parent
+            $this->YDFormElement_Select( $form, $name, $label, $attributes, YDArrayUtil::getGMT( $options ) );
+
+            // set type
+            $this->_type = 'timezone';
+
+			// set default
+			$this->setDefault( 0 );
+        }
+
+    }
+
+?>
\ No newline at end of file

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDUtil.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDUtil.php	2006-12-09 22:18:06 UTC (rev 2253)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDUtil.php	2006-12-10 00:40:52 UTC (rev 2254)
@@ -270,18 +270,54 @@
         /**
          *  This function will return a array with gmts.
          *
-         *  @returns	Array: array( -23 => '-23', ..., 0 => '0', ..., 23 => '+23' );
+         *  @param $format      Format to return
+         *
+         *  @returns	Array. If format is NULL returns complete array.
+         *                                  'simple' returns: array( -11 => '(GMT -11:00)', -10 => ...
+         *                                  'full'   returns: array( -11 => '(GMT -11:00) Nome, Midway Island, Samoa', -10 => ...
          *  @static
          */
-		function getGMT(){
+		function getGMT( $format = null ){
 
-			$gmts = array();
-			for($i = -23; $i <= 23; $i++) 
-				if ($i < 1 ) $gmts[$i] =      strval($i);
-				else		 $gmts[$i] = '+'. strval($i);
+			$gmts = array(	'-11'   => array( '(GMT -11:00)', 'Nome, Midway Island, Samoa' ),
+							'-10'   => array( '(GMT -10:00)', 'Hawaii' ),
+							 '-9'   => array( '(GMT  -9:00)', 'Alaska' ),
+							 '-8'   => array( '(GMT  -8:00)', 'Pacific Time' ),
+							 '-7'   => array( '(GMT  -7:00)', 'Mountain Time' ),
+							 '-6'   => array( '(GMT  -6:00)', 'Central Time, Mexico City' ),
+							 '-5'   => array( '(GMT  -5:00)', 'Eastern Time, Bogota, Lima, Quito' ),
+							 '-4'   => array( '(GMT  -4:00)', 'Atlantic Time, Caracas, La Paz' ),
+							 '-3.5' => array( '(GMT  -3:30)', 'Newfoundland' ),
+							 '-3'   => array( '(GMT  -3:00)', 'Brazil, Buenos Aires, Georgetown, Falkland Is.' ),
+							 '-2'   => array( '(GMT  -2:00)', 'Mid-Atlantic, Ascention Is., St Helena' ),
+							 '-1'   => array( '(GMT  -1:00)', 'Azores, Cape Verde Islands' ),
+							  '0'   => array( '(GMT   0:00)', 'Casablanca, Dublin, Edinburgh, London, Lisbon, Monrovia' ),
+							  '1'   => array( '(GMT  +1:00)', 'Berlin, Brussels, Copenhagen, Madrid, Paris, Rome' ),
+							  '2'   => array( '(GMT  +2:00)', 'Kaliningrad, South Africa, Warsaw' ),
+							  '3'   => array( '(GMT  +3:00)', 'Baghdad, Riyadh, Moscow, Nairobi' ),
+							  '2.5' => array( '(GMT  +3:30)', 'Tehran' ),
+							  '4'   => array( '(GMT  +4:00)', 'Abu Dhabi, Baku, Muscat, Tbilisi' ),
+							  '4.5' => array( '(GMT  +4:30)', 'Kabul' ),
+							  '5'   => array( '(GMT  +5:00)', 'Islamabad, Karachi, Tashkent' ),
+						      '5.5' => array( '(GMT  +5:30)', 'Bombay, Calcutta, Madras, New Delhi' ),
+							  '6'   => array( '(GMT  +6:00)', 'Almaty, Colombo, Dhaka' ),
+							  '7'   => array( '(GMT  +7:00)', 'Bangkok, Hanoi, Jakarta' ),
+							  '8'   => array( '(GMT  +8:00)', 'Beijing, Hong Kong, Perth, Singapore, Taipei' ),
+							  '9'   => array( '(GMT  +9:00)', 'Osaka, Sapporo, Seoul, Tokyo, Yakutsk' ),
+							  '9.5' => array( '(GMT  +9:30)', 'Adelaide, Darwin' ),
+							 '10'   => array( '(GMT +10:00)', 'Melbourne, Papua New Guinea, Sydney, Vladivostok' ),
+							 '11'   => array( '(GMT +11:00)', 'Magadan, New Caledonia, Solomon Islands' ),
+							 '12'   => array( '(GMT +12:00)', 'Auckland, Wellington, Fiji, Marshall Island' ) );
+			
+			if ( is_null( $format ) ) return $gmts;
+
+			foreach( $gmts as $t => $arr ){
+				if ( $format == 'simple' ) $gmts[ $t ] = $arr[ 0 ];
+				else                       $gmts[ $t ] = $arr[ 0 ] . ' ' . $arr[ 1 ];
+			}
+
 			return $gmts;
 		}
-
     }
 
     /**

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php	2006-12-09 22:18:06 UTC (rev 2253)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDValidateRules.php	2006-12-10 00:40:52 UTC (rev 2254)
@@ -750,6 +750,22 @@
         }
 
 
+        /**
+         *	This function returns true if the variable matches a valid gmt value
+         *
+         *	@param $val		The value to test.
+         *	@param $opts	(not required)
+         */
+        function timezone( $val, $opts='' ) {
+
+			YDInclude( 'YDUtil.php' );
+
+			$arr = YDArrayUtil::getGMT();
+
+            return isset( $arr[ $val ] );
+        }
+
+
     }
 
 ?>
\ No newline at end of file



From pclaerhout at mail.berlios.de  Sun Dec 17 12:28:58 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 12:28:58 +0100
Subject: [ydf-devel] r2255 - YDFramework2.0/trunk/examples/weblog/manage
Message-ID: <200612171128.kBHBSwpq000716@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 12:28:58 +0100 (Sun, 17 Dec 2006)
New Revision: 2255

Modified:
   YDFramework2.0/trunk/examples/weblog/manage/comments.tpl
Log:
When you now edit comment spam, you can't change anything but you can now see the contents properly.

Modified: YDFramework2.0/trunk/examples/weblog/manage/comments.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/comments.tpl	2006-12-10 00:40:52 UTC (rev 2254)
+++ YDFramework2.0/trunk/examples/weblog/manage/comments.tpl	2006-12-17 11:28:58 UTC (rev 2255)
@@ -133,7 +133,7 @@
                         {$comment.userip}
                     </td>
                     <td class="adminRowR">
-                        <a href="{$YD_SELF_SCRIPT}?do=edit&id={$comment.id}">{t w="edit"}</a>
+                        <a href="{$YD_SELF_SCRIPT}?do=edit&id={$comment.id}">{t w="view"}</a>
                         |
                         <a href="{$YD_SELF_SCRIPT}?do=delete&id={$comment.id}"
                          onClick="return YDConfirmDelete( '{$comment.comment|bbcode|strip_tags|strip|truncate|addslashes}' );">{t w="delete"}</a>
@@ -183,7 +183,13 @@
         <table width="700" cellspacing="0" cellpadding="0" border="0">
             <tr>
                 <th class="adminRowLG">&raquo; {t w="change_comment_desc"}</th>
-                <th class="adminRowLGR">&raquo; <a href="{$YD_SELF_SCRIPT}"><b>{t w="back"}</b></a></th>
+                <th class="adminRowLGR">
+                    {if $comment.is_spam}
+                        &raquo; <a href="{$YD_SELF_SCRIPT}?filter=spam"><b>{t w="back"}</b></a>
+                    {else}
+                        &raquo; <a href="{$YD_SELF_SCRIPT}"><b>{t w="back"}</b></a>
+                    {/if}
+                </th>
             </tr>
             <tr>
                 <td class="adminRowL" width="300">{t w="item"}</td>
@@ -203,31 +209,76 @@
             </tr>
             <tr>
                 <td class="adminRowL">{$form.username.label_html}</td>
-                <td class="adminRowC">{$form.username.html}</td>
+                <td class="adminRowL">
+                    {if $comment.is_spam}
+                        {$comment.username|default:'-'}
+                    {else}
+                        {$form.username.html}
+                    {/if}
+                </td>
             </tr>
             <tr>
                 <td class="adminRowL">{$form.useremail.label_html}</td>
-                <td class="adminRowC">{$form.useremail.html}</td>
+                <td class="adminRowL">
+                    {if $comment.is_spam}
+                        {$comment.useremail|default:'-'}
+                    {else}
+                        {$form.useremail.html}
+                    {/if}
+                </td>
             </tr>
             <tr>
                 <td class="adminRowL">{$form.userwebsite.label_html}</td>
-                <td class="adminRowC">{$form.userwebsite.html}</td>
+                <td class="adminRowL">
+                    {if $comment.is_spam}
+                        {$comment.userwebsite|default:'-'}
+                    {else}
+                        {$form.userwebsite.html}
+                    {/if}
+                </td>
             </tr>
             <tr>
-                <td class="adminRowL" colspan="2">
-                    {$form.comment.label_html}
-                    <br/>
-                    {$form.comment.html}
-                </td>
+                {if $comment.is_spam}
+                    <td class="adminRowL">{$form.comment.label_html}</td>
+                    <td class="adminRowL">
+                        {$comment.comment|htmlentities|default:'-'}
+                    </td>
+                {else}
+                    <td class="adminRowL" colspan="2">
+                        {$form.comment.label_html}
+                        <br/>
+                        {$form.comment.html}
+                    </td>
+                {/if}
             </tr>
             <tr>
                 <td class="adminRowL">{$form.created.label_html}</td>
-                <td class="adminRowL">{$form.created.html}</td>
+                <td class="adminRowL">
+                    {if $comment.is_spam}
+                        {$comment.created|date:'%Y/%m/%d %H:%M:%S'}
+                    {else}
+                        {$form.created.html}
+                    {/if}
+                </td>
             </tr>
             <tr>
                 <td class="adminRowL">{$form.is_spam.label_html}</td>
-                <td class="adminRowL">{$form.is_spam.html}</td>
+                <td class="adminRowL">
+                    {if $comment.is_spam}
+                        <a href="{$YD_SELF_SCRIPT}?do=mark_as_not_spam&id={$comment.id}">{t w="mark_as_not_spam"}</a>
+                    {else}
+                        {$form.is_spam.html}
+                    {/if}
+                </td>
             </tr>
+            {if $comment.is_spam}
+                <tr>
+                    <td class="adminRowL">{t w="weight"}</td>
+                    <td class="adminRowL">
+                        {$comment.comment|strlen}
+                    </td>
+                </tr>
+            {/if}
             <tr>
                 <td class="adminRowL" colspan="2" style="border: 0px;">
                     {$form._cmdSubmit.html}



From pclaerhout at mail.berlios.de  Sun Dec 17 12:39:03 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 12:39:03 +0100
Subject: [ydf-devel] r2256 -
	YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements
Message-ID: <200612171139.kBHBd3Hh025785@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 12:39:00 +0100 (Sun, 17 Dec 2006)
New Revision: 2256

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php
Log:
Changed the default separators for checkbox groups from &nbsp; to a normal space.

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php	2006-12-17 11:28:58 UTC (rev 2255)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_CheckboxGroup.php	2006-12-17 11:39:00 UTC (rev 2256)
@@ -60,7 +60,7 @@
             if ( isset ( $attributes['sep'] ) ) {
 
                 // find horizontal and left tags
-                if ( is_int( strpos( $attributes[ 'sep' ], 'h' ) ) ) $this->_separator = '&nbsp;&nbsp;&nbsp;';
+                if ( is_int( strpos( $attributes[ 'sep' ], 'h' ) ) ) $this->_separator = ' ';
                 if ( is_int( strpos( $attributes[ 'sep' ], 'l' ) ) ) $this->_position  = 'left';
                 unset( $attributes[ 'sep' ] );
 



From pclaerhout at mail.berlios.de  Sun Dec 17 13:08:00 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 13:08:00 +0100
Subject: [ydf-devel] r2257 - in YDFramework2.0/trunk/examples/weblog: .
	skins/default
Message-ID: <200612171208.kBHC80Au026589@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 13:07:59 +0100 (Sun, 17 Dec 2006)
New Revision: 2257

Added:
   YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl
Modified:
   YDFramework2.0/trunk/examples/weblog/item.php
   YDFramework2.0/trunk/examples/weblog/skins/default/comment_email.tpl
Log:
The spam comment email now contains a lot more information about the request. Very handy to find common properties against spam attacks.

Modified: YDFramework2.0/trunk/examples/weblog/item.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/item.php	2006-12-17 11:39:00 UTC (rev 2256)
+++ YDFramework2.0/trunk/examples/weblog/item.php	2006-12-17 12:07:59 UTC (rev 2257)
@@ -149,15 +149,16 @@
                         $eml->addBcc( $user['email'], $user['name'] );
                     }
 
-                    // Set the subject
+                    // Set the subject and body
                     if ( strval( $comment['is_spam'] ) == '0' ) {
                         $eml->setSubject( t('new_comment') . ': ' . strip_tags( $item['title'] ) );
+                        $eml->setHtmlBody( $this->fetch( 'comment_email' ) );
                     } else {
                         $eml->setSubject( '[spam] ' . t('new_comment') . ': ' . strip_tags( $item['title'] ) );
+                        $eml->setHtmlBody( $this->fetch( 'comment_email_spam' ) );
                     }
 
                     // Send the email
-                    $eml->setHtmlBody( $this->fetch( 'comment_email' ) );
                     $eml->send();
 
                 }

Modified: YDFramework2.0/trunk/examples/weblog/skins/default/comment_email.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default/comment_email.tpl	2006-12-17 11:39:00 UTC (rev 2256)
+++ YDFramework2.0/trunk/examples/weblog/skins/default/comment_email.tpl	2006-12-17 12:07:59 UTC (rev 2257)
@@ -49,5 +49,4 @@
 
 </body>
 
-</html>
-
+</html>
\ No newline at end of file

Added: YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl	2006-12-17 11:39:00 UTC (rev 2256)
+++ YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl	2006-12-17 12:07:59 UTC (rev 2257)
@@ -0,0 +1,83 @@
+<html>
+
+<head>
+
+    <title>{$weblog.title}</title>
+
+    <meta name="generator" content="{$YD_FW_NAMEVERS}" />
+
+    <link rel="stylesheet" href="{$skin_dir}/default.css" type="text/css" media="screen" />
+
+    <style type="text/css" media="screen">
+        body        {literal}{{/literal} background: url("{$image_dir}/kubrickbgcolor.jpg");                                 {literal}}{/literal}
+        #page       {literal}{{/literal} background: url("{$image_dir}/kubrickbgwide.jpg") repeat-y top; border: none;       {literal}}{/literal}
+        #header     {literal}{{/literal} background: url("{$image_dir}/kubrickheader.jpg") no-repeat top center;             {literal}}{/literal}
+        #footer     {literal}{{/literal} background: url("{$image_dir}/kubrickfooter.jpg") no-repeat bottom; border: none;   {literal}}{/literal}
+        #header     {literal}{{/literal} margin: 0 !important; margin: 0; padding: 1px; height: 0px; width: 758px;           {literal}}{/literal}
+        #headerimg  {literal}{{/literal} margin: 0; height: 0px; width: 740px;                                               {literal}}{/literal}
+        .bbtextarea {literal}{{/literal} width: 650px; height: 160px;                                                        {literal}}{/literal}
+    </style>
+
+</head>
+
+<body>
+
+    <div id="page">
+
+        <div id="header"></div>
+
+        <div id="content" class="narrowcolumn">
+
+            <h3>[spam] {t w="new_comment"}<br/>{$item.title}</h3>
+            <p><b>{t w="posted_from"}</b><br/>{$comment.userip}</p>
+            <p><b>User Agent</b><br/>{$comment.useragent|default:'-'}</p>
+            <p><b>Request URI</b><br/>{$comment.userrequrl|default:'-'}</p>
+            <p><b>{t w="name"}</b><br/>{$comment.username|default:'-'}</p>
+            <p><b>{t w="mail"}</b><br/>{$comment.useremail|default:'-'}</p>
+            <p><b>{t w="website"}</b><br/>{$comment.userwebsite|default:'-'}</p>
+            <p><b>{t w="created_on"}</b><br/>{$comment.created|date:'%Y/%m/%d %H:%M:%S'}</p>
+            <p><b>{t w="weight"}</b><br/>{$comment.comment|strlen}</p>
+            <p><b>{t w="comment"}</b><br/>{$comment.comment|htmlentities|default:'-'}</p>
+
+            <h3>$_GET</h3>
+            {foreach from=$smarty.get item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_POST</h3>
+            {foreach from=$smarty.post item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_SERVER</h3>
+            {foreach from=$smarty.server item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_COOKIE</h3>
+            {foreach from=$smarty.cookies item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_ENV</h3>
+            {foreach from=$smarty.env item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_SESSION</h3>
+            {foreach from=$smarty.session item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            &nbsp;
+
+        </div>
+
+        <div id="footer"></div>
+
+    </div>
+
+</body>
+
+</html>
+



From pclaerhout at mail.berlios.de  Sun Dec 17 13:09:08 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 13:09:08 +0100
Subject: [ydf-devel] r2258 -
	YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox
Message-ID: <200612171209.kBHC98iZ026929@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 13:09:02 +0100 (Sun, 17 Dec 2006)
New Revision: 2258

Added:
   YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl
Log:
Added a missing file from the previous commit.

Added: YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl	2006-12-17 12:07:59 UTC (rev 2257)
+++ YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl	2006-12-17 12:09:02 UTC (rev 2258)
@@ -0,0 +1,82 @@
+<html>
+
+<head>
+
+    <title>{$weblog.title}</title>
+
+    <meta name="generator" content="{$YD_FW_NAMEVERS}" />
+
+    <link rel="stylesheet" href="{$skin_dir}/default.css" type="text/css" media="screen" />
+
+    <style type="text/css" media="screen">
+        body        {literal}{{/literal} background: url("{$image_dir}/kubrickbgcolor.jpg");                                 {literal}}{/literal}
+        #page       {literal}{{/literal} background: url("{$image_dir}/kubrickbgwide.jpg") repeat-y top; border: none;       {literal}}{/literal}
+        #header     {literal}{{/literal} background: url("{$image_dir}/kubrickheader.jpg") no-repeat top center;             {literal}}{/literal}
+        #footer     {literal}{{/literal} background: url("{$image_dir}/kubrickfooter.jpg") no-repeat bottom; border: none;   {literal}}{/literal}
+        #header     {literal}{{/literal} margin: 0 !important; margin: 0; padding: 1px; height: 0px; width: 758px;           {literal}}{/literal}
+        #headerimg  {literal}{{/literal} margin: 0; height: 0px; width: 740px;                                               {literal}}{/literal}
+        .bbtextarea {literal}{{/literal} width: 650px; height: 160px;                                                        {literal}}{/literal}
+    </style>
+
+</head>
+
+<body>
+
+    <div id="page">
+
+        <div id="header"></div>
+
+        <div id="content" class="narrowcolumn">
+
+            <h3>[spam] {t w="new_comment"}<br/>{$item.title}</h3>
+            <p><b>{t w="posted_from"}</b><br/>{$comment.userip}</p>
+            <p><b>User Agent</b><br/>{$comment.useragent|default:'-'}</p>
+            <p><b>Request URI</b><br/>{$comment.userrequrl|default:'-'}</p>
+            <p><b>{t w="name"}</b><br/>{$comment.username|default:'-'}</p>
+            <p><b>{t w="mail"}</b><br/>{$comment.useremail|default:'-'}</p>
+            <p><b>{t w="website"}</b><br/>{$comment.userwebsite|default:'-'}</p>
+            <p><b>{t w="created_on"}</b><br/>{$comment.created|date:'%Y/%m/%d %H:%M:%S'}</p>
+            <p><b>{t w="weight"}</b><br/>{$comment.comment|strlen}</p>
+            <p><b>{t w="comment"}</b><br/>{$comment.comment|htmlentities|default:'-'}</p>
+
+            <h3>$_GET</h3>
+            {foreach from=$smarty.get item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_POST</h3>
+            {foreach from=$smarty.post item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_SERVER</h3>
+            {foreach from=$smarty.server item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_COOKIE</h3>
+            {foreach from=$smarty.cookies item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_ENV</h3>
+            {foreach from=$smarty.env item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            <h3>$_SESSION</h3>
+            {foreach from=$smarty.session item="item" key="key"}
+                <p><b>{$key}</b><br/>{$item}</p>
+            {/foreach}
+
+            &nbsp;
+
+        </div>
+
+        <div id="footer"></div>
+
+    </div>
+
+</body>
+
+</html>
\ No newline at end of file



From pclaerhout at mail.berlios.de  Sun Dec 17 13:12:37 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 13:12:37 +0100
Subject: [ydf-devel] r2259 - in
	YDFramework2.0/trunk/YDFramework2/3rdparty/smarty: . libs
	libs/internals libs/plugins
Message-ID: <200612171212.kBHCCbeS031655@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 13:12:31 +0100 (Sun, 17 Dec 2006)
New Revision: 2259

Modified:
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/ChangeLog
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/NEWS
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Config_File.class.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Smarty.class.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Smarty_Compiler.class.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/debug.tpl
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/internals/core.write_file.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.html_select_date.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.html_table.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.mailto.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.capitalize.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.date_format.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.debug_print_var.php
   YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/outputfilter.trimwhitespace.php
Log:
Updated Smarty to version 2.6.16.

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/ChangeLog
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/ChangeLog	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/ChangeLog	2006-12-17 12:12:31 UTC (rev 2259)
@@ -1,3 +1,868 @@
+2006-11-30  Monte Ohrt  <monte at ohrt.com>
+
+    * NEWS
+      docs/en/designers/language-modifiers/language-modifier-truncate.xml
+      libs/Config_File.class.php
+      libs/Smarty.class.php
+      libs/Smarty_Compiler.class.php:
+      update dev version numbers, fix manual typo
+
+2006-11-22  George Miroshnikov  <support at infinity.com.ua>
+
+    * docs/ru/getting-started.xml
+      docs/ru/language-snippets.ent:
+      sync with EN
+
+    * docs/en/getting-started.xml:
+      replaced hardcoded path separator with PATH_SEPARATOR constant
+
+2006-11-20  boots  <jayboots at yahoo.com>
+
+    * libs/plugins/modifier.debug_print_var.php:
+      fix depth formatting of arrays and objects in modifier debug_print_var
+
+2006-11-10  Messju Mohr  <messju at lammfellpuschen.de>
+
+    * docs/en/designers/language-variables/language-variables-smarty.xml:
+      fixed typo. thanks jonez.
+
+2006-11-08  boots  <jayboots at yahoo.com>
+
+    * NEWS
+      libs/internals/core.write_file.php:
+      change file writing semantics in smarty_core_write_file()
+      
+      This avoids unlink() unless rename() fails or a Windows system is detected
+      
+      see: http://www.phpinsider.com/smarty-forum/viewtopic.php?t=6956
+      
+      Thanks to c960657 from the forums.
+
+2006-11-07  boots  <jayboots at yahoo.com>
+
+    * NEWS
+      libs/debug.tpl:
+      update debug.tpl to xhtml 1.1 compliance, fix javascript escaping in debug
+      output and apply a Smarty based color scheme
+      
+      see: http://www.phpinsider.com/smarty-forum/viewtopic.php?t=7178
+      
+      thanks to cybot from the forums!
+
+    * NEWS
+      libs/plugins/modifier.debug_print_var.php:
+      enhance reporting precision of debug_print_var modifier
+      
+      see: http://www.phpinsider.com/smarty-forum/viewtopic.php?t=9281
+      
+      thanks to cybot from the forums
+
+2006-11-01  boots  <jayboots at yahoo.com>
+
+    * NEWS
+      libs/plugins/function.html_select_date.php:
+      make html_select_date work consistently with 0000-00-00 00:00:00 and
+      0000-00-00 inputs
+      
+      Thanks to cybot from forums
+
+2006-10-16  George Miroshnikov  <support at infinity.com.ua>
+
+    * docs/en/language-snippets.ent:
+      minor typo fix - &$class doesn't make sense.
+
+2006-10-14  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/designers/language-basic-syntax.xml
+      docs/fr/designers/language-builtin-functions.xml
+      docs/fr/designers/language-basic-syntax/language-syntax-attributes.xml
+      docs/fr/designers/language-basic-syntax/language-syntax-comments.xml
+      docs/fr/designers/language-basic-syntax/language-syntax-quotes.xml
+      docs/fr/designers/language-builtin-functions/language-function-capture.xml
+      docs/fr/designers/language-builtin-functions/language-function-php.xml
+      docs/fr/designers/language-builtin-functions/language-function-section.xml
+      docs/fr/designers/language-custom-functions/language-function-popup-init.xml
+      docs/fr/designers/language-modifiers/language-modifier-escape.xml
+      docs/fr/programmers/api-functions/api-display.xml
+      docs/fr/programmers/plugins/plugins-inserts.xml:
+      sync with EN
+
+2006-10-14  Fernando Correa da Concei??o  <fernando_conceicao at yahoo.com.br>
+
+    * docs/pt_BR/programmers/api-variables/variable-error-reporting.xml:
+      New Translation
+
+    * docs/pt_BR/designers/language-basic-syntax/language-escaping.xml
+      docs/pt_BR/designers/language-basic-syntax/language-syntax-variables.xml:
+      New Translations
+
+    * docs/pt_BR/translation.xml:
+      Used in revcheck
+
+    * docs/pt_BR/getting-started.xml
+      docs/pt_BR/language-snippets.ent
+      docs/pt_BR/make_chm_index.html
+      docs/pt_BR/preface.xml
+      docs/pt_BR/appendixes/resources.xml
+      docs/pt_BR/appendixes/troubleshooting.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-capitalize.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-cat.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-count-characters.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-count-paragraphs.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-count-sentences.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-count-words.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-date-format.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-default.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-escape.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-indent.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-lower.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-nl2br.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-regex-replace.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-replace.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-spacify.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-string-format.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-strip-tags.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-strip.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-truncate.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-upper.xml
+      docs/pt_BR/designers/language-modifiers/language-modifier-wordwrap.xml
+      docs/pt_BR/designers/language-variables/language-assigned-variables.xml
+      docs/pt_BR/designers/language-variables/language-config-variables.xml
+      docs/pt_BR/designers/language-variables/language-variables-smarty.xml
+      docs/pt_BR/programmers/advanced-features.xml
+      docs/pt_BR/programmers/api-functions.xml
+      docs/pt_BR/programmers/api-variables.xml
+      docs/pt_BR/programmers/caching.xml
+      docs/pt_BR/programmers/plugins.xml
+      docs/pt_BR/programmers/smarty-constants.xml
+      docs/pt_BR/programmers/advanced-features/advanced-features-objects.xml
+      docs/pt_BR/programmers/advanced-features/advanced-features-outputfilters.xml
+      docs/pt_BR/programmers/advanced-features/advanced-features-postfilters.xml
+      docs/pt_BR/programmers/advanced-features/advanced-features-prefilters.xml
+      docs/pt_BR/programmers/advanced-features/section-template-cache-handler-func.xml
+      docs/pt_BR/programmers/advanced-features/template-resources.xml
+      docs/pt_BR/programmers/api-functions/api-append-by-ref.xml
+      docs/pt_BR/programmers/api-functions/api-append.xml
+      docs/pt_BR/programmers/api-functions/api-assign-by-ref.xml
+      docs/pt_BR/programmers/api-functions/api-assign.xml
+      docs/pt_BR/programmers/api-functions/api-clear-all-assign.xml
+      docs/pt_BR/programmers/api-functions/api-clear-all-cache.xml
+      docs/pt_BR/programmers/api-functions/api-clear-assign.xml
+      docs/pt_BR/programmers/api-functions/api-clear-cache.xml
+      docs/pt_BR/programmers/api-functions/api-clear-compiled-tpl.xml
+      docs/pt_BR/programmers/api-functions/api-clear-config.xml
+      docs/pt_BR/programmers/api-functions/api-config-load.xml
+      docs/pt_BR/programmers/api-functions/api-display.xml
+      docs/pt_BR/programmers/api-functions/api-fetch.xml
+      docs/pt_BR/programmers/api-functions/api-get-config-vars.xml
+      docs/pt_BR/programmers/api-functions/api-get-registered-object.xml
+      docs/pt_BR/programmers/api-functions/api-get-template-vars.xml
+      docs/pt_BR/programmers/api-functions/api-is-cached.xml
+      docs/pt_BR/programmers/api-functions/api-load-filter.xml
+      docs/pt_BR/programmers/api-functions/api-register-block.xml
+      docs/pt_BR/programmers/api-functions/api-register-compiler-function.xml
+      docs/pt_BR/programmers/api-functions/api-register-function.xml
+      docs/pt_BR/programmers/api-functions/api-register-modifier.xml
+      docs/pt_BR/programmers/api-functions/api-register-object.xml
+      docs/pt_BR/programmers/api-functions/api-register-outputfilter.xml
+      docs/pt_BR/programmers/api-functions/api-register-postfilter.xml
+      docs/pt_BR/programmers/api-functions/api-register-prefilter.xml
+      docs/pt_BR/programmers/api-functions/api-register-resource.xml
+      docs/pt_BR/programmers/api-functions/api-template-exists.xml
+      docs/pt_BR/programmers/api-functions/api-trigger-error.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-block.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-compiler-function.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-function.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-modifier.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-object.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-outputfilter.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-postfilter.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-prefilter.xml
+      docs/pt_BR/programmers/api-functions/api-unregister-resource.xml
+      docs/pt_BR/programmers/api-variables/variable-autoload-filters.xml
+      docs/pt_BR/programmers/api-variables/variable-cache-dir.xml
+      docs/pt_BR/programmers/api-variables/variable-cache-handler-func.xml
+      docs/pt_BR/programmers/api-variables/variable-cache-lifetime.xml
+      docs/pt_BR/programmers/api-variables/variable-cache-modified-check.xml
+      docs/pt_BR/programmers/api-variables/variable-caching.xml
+      docs/pt_BR/programmers/api-variables/variable-compile-check.xml
+      docs/pt_BR/programmers/api-variables/variable-compile-dir.xml
+      docs/pt_BR/programmers/api-variables/variable-compile-id.xml
+      docs/pt_BR/programmers/api-variables/variable-compiler-class.xml
+      docs/pt_BR/programmers/api-variables/variable-config-booleanize.xml
+      docs/pt_BR/programmers/api-variables/variable-config-dir.xml
+      docs/pt_BR/programmers/api-variables/variable-config-fix-newlines.xml
+      docs/pt_BR/programmers/api-variables/variable-config-overwrite.xml
+      docs/pt_BR/programmers/api-variables/variable-config-read-hidden.xml
+      docs/pt_BR/programmers/api-variables/variable-debug-tpl.xml
+      docs/pt_BR/programmers/api-variables/variable-debugging-ctrl.xml
+      docs/pt_BR/programmers/api-variables/variable-debugging.xml
+      docs/pt_BR/programmers/api-variables/variable-default-modifiers.xml
+      docs/pt_BR/programmers/api-variables/variable-default-resource-type.xml
+      docs/pt_BR/programmers/api-variables/variable-default-template-handler-func.xml
+      docs/pt_BR/programmers/api-variables/variable-force-compile.xml
+      docs/pt_BR/programmers/api-variables/variable-global-assign.xml
+      docs/pt_BR/programmers/api-variables/variable-left-delimiter.xml
+      docs/pt_BR/programmers/api-variables/variable-php-handling.xml
+      docs/pt_BR/programmers/api-variables/variable-plugins-dir.xml
+      docs/pt_BR/programmers/api-variables/variable-request-use-auto-globals.xml
+      docs/pt_BR/programmers/api-variables/variable-request-vars-order.xml
+      docs/pt_BR/programmers/api-variables/variable-right-delimiter.xml
+      docs/pt_BR/programmers/api-variables/variable-secure-dir.xml
+      docs/pt_BR/programmers/api-variables/variable-security-settings.xml
+      docs/pt_BR/programmers/api-variables/variable-security.xml
+      docs/pt_BR/programmers/api-variables/variable-template-dir.xml
+      docs/pt_BR/programmers/api-variables/variable-trusted-dir.xml
+      docs/pt_BR/programmers/api-variables/variable-undefined.xml
+      docs/pt_BR/programmers/api-variables/variable-use-sub-dirs.xml
+      docs/pt_BR/programmers/caching/caching-cacheable.xml
+      docs/pt_BR/programmers/caching/caching-groups.xml
+      docs/pt_BR/programmers/caching/caching-multiple-caches.xml
+      docs/pt_BR/programmers/caching/caching-setting-up.xml
+      docs/pt_BR/programmers/plugins/plugins-block-functions.xml
+      docs/pt_BR/programmers/plugins/plugins-compiler-functions.xml
+      docs/pt_BR/programmers/plugins/plugins-functions.xml
+      docs/pt_BR/programmers/plugins/plugins-howto.xml
+      docs/pt_BR/programmers/plugins/plugins-inserts.xml
+      docs/pt_BR/programmers/plugins/plugins-modifiers.xml
+      docs/pt_BR/programmers/plugins/plugins-naming-conventions.xml
+      docs/pt_BR/programmers/plugins/plugins-outputfilters.xml
+      docs/pt_BR/programmers/plugins/plugins-prefilters-postfilters.xml
+      docs/pt_BR/programmers/plugins/plugins-resources.xml
+      docs/pt_BR/programmers/plugins/plugins-writing.xml:
+      Big update. Revision tag for all files. Some updates. Now I can update it
+
+2006-10-09  Peter 'Mash' Morgan  <pm at daffodil.uk.com>
+
+    * docs/en/getting-started.xml
+      docs/en/designers/language-basic-syntax.xml
+      docs/en/designers/language-custom-functions/language-function-popup-init.xml
+      docs/en/designers/language-modifiers/language-modifier-escape.xml
+      docs/en/programmers/api-functions/api-display.xml
+      docs/en/programmers/plugins/plugins-inserts.xml:
+      Minor changes and corrections
+
+    * docs/en/designers/language-basic-syntax.xml
+      docs/en/designers/language-builtin-functions.xml
+      docs/en/designers/language-basic-syntax/language-syntax-attributes.xml
+      docs/en/designers/language-basic-syntax/language-syntax-comments.xml
+      docs/en/designers/language-basic-syntax/language-syntax-quotes.xml
+      docs/en/designers/language-modifiers/language-modifier-escape.xml:
+      Minor formatting and error correction
+
+    * docs/en/designers/language-builtin-functions/language-function-capture.xml
+      docs/en/designers/language-builtin-functions/language-function-php.xml
+      docs/en/designers/language-builtin-functions/language-function-section.xml:
+      minor formatting and changes
+
+    * docs/en/getting-started.xml:
+      Tidied up formatting so more readable, tidied up the install to the paths
+      are more clear (ta jj)
+
+2006-10-09  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/designers/language-builtin-functions/language-function-section.xml:
+      sync with EN
+
+2006-10-08  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/designers/language-builtin-functions/language-function-php.xml
+      docs/fr/designers/language-modifiers/language-modifier-escape.xml
+      docs/fr/designers/language-variables/language-variables-smarty.xml
+      docs/fr/programmers/api-variables/variable-request-use-auto-globals.xml:
+      fix build
+
+    * docs/fr/designers/language-builtin-functions/language-function-strip.xml
+      docs/fr/programmers/caching.xml
+      docs/fr/programmers/smarty-constants.xml
+      docs/fr/programmers/api-variables/variable-autoload-filters.xml
+      docs/fr/programmers/api-variables/variable-cache-dir.xml
+      docs/fr/programmers/api-variables/variable-cache-handler-func.xml
+      docs/fr/programmers/api-variables/variable-cache-lifetime.xml
+      docs/fr/programmers/api-variables/variable-cache-modified-check.xml
+      docs/fr/programmers/api-variables/variable-caching.xml
+      docs/fr/programmers/api-variables/variable-compile-check.xml
+      docs/fr/programmers/api-variables/variable-compile-dir.xml
+      docs/fr/programmers/api-variables/variable-compile-id.xml
+      docs/fr/programmers/api-variables/variable-compiler-class.xml
+      docs/fr/programmers/api-variables/variable-config-booleanize.xml
+      docs/fr/programmers/api-variables/variable-config-dir.xml
+      docs/fr/programmers/api-variables/variable-config-fix-newlines.xml
+      docs/fr/programmers/api-variables/variable-config-overwrite.xml
+      docs/fr/programmers/api-variables/variable-config-read-hidden.xml
+      docs/fr/programmers/api-variables/variable-debug-tpl.xml
+      docs/fr/programmers/api-variables/variable-debugging-ctrl.xml
+      docs/fr/programmers/api-variables/variable-debugging.xml
+      docs/fr/programmers/api-variables/variable-default-modifiers.xml
+      docs/fr/programmers/api-variables/variable-default-resource-type.xml
+      docs/fr/programmers/api-variables/variable-default-template-handler-func.xml
+      docs/fr/programmers/api-variables/variable-error-reporting.xml
+      docs/fr/programmers/api-variables/variable-force-compile.xml
+      docs/fr/programmers/api-variables/variable-left-delimiter.xml
+      docs/fr/programmers/api-variables/variable-php-handling.xml
+      docs/fr/programmers/api-variables/variable-plugins-dir.xml
+      docs/fr/programmers/api-variables/variable-request-use-auto-globals.xml
+      docs/fr/programmers/api-variables/variable-request-vars-order.xml
+      docs/fr/programmers/api-variables/variable-right-delimiter.xml
+      docs/fr/programmers/api-variables/variable-secure-dir.xml
+      docs/fr/programmers/api-variables/variable-security-settings.xml
+      docs/fr/programmers/api-variables/variable-security.xml
+      docs/fr/programmers/api-variables/variable-template-dir.xml
+      docs/fr/programmers/api-variables/variable-trusted-dir.xml
+      docs/fr/programmers/api-variables/variable-use-sub-dirs.xml
+      docs/fr/programmers/caching/caching-cacheable.xml
+      docs/fr/programmers/caching/caching-groups.xml
+      docs/fr/programmers/caching/caching-multiple-caches.xml
+      docs/fr/programmers/caching/caching-setting-up.xml
+      docs/fr/programmers/plugins/plugins-block-functions.xml
+      docs/fr/programmers/plugins/plugins-compiler-functions.xml
+      docs/fr/programmers/plugins/plugins-functions.xml
+      docs/fr/programmers/plugins/plugins-inserts.xml
+      docs/fr/programmers/plugins/plugins-modifiers.xml
+      docs/fr/programmers/plugins/plugins-naming-conventions.xml
+      docs/fr/programmers/plugins/plugins-outputfilters.xml
+      docs/fr/programmers/plugins/plugins-prefilters-postfilters.xml
+      docs/fr/programmers/plugins/plugins-resources.xml
+      docs/fr/programmers/plugins/plugins-writing.xml:
+      sync with EN
+
+2006-10-07  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/programmers/advanced-features/advanced-features-objects.xml
+      docs/fr/programmers/advanced-features/advanced-features-outputfilters.xml
+      docs/fr/programmers/advanced-features/advanced-features-postfilters.xml
+      docs/fr/programmers/advanced-features/advanced-features-prefilters.xml
+      docs/fr/programmers/advanced-features/section-template-cache-handler-func.xml
+      docs/fr/programmers/advanced-features/template-resources.xml
+      docs/fr/programmers/api-functions/api-append-by-ref.xml
+      docs/fr/programmers/api-functions/api-append.xml
+      docs/fr/programmers/api-functions/api-assign-by-ref.xml
+      docs/fr/programmers/api-functions/api-assign.xml
+      docs/fr/programmers/api-functions/api-clear-all-assign.xml
+      docs/fr/programmers/api-functions/api-clear-all-cache.xml
+      docs/fr/programmers/api-functions/api-clear-assign.xml
+      docs/fr/programmers/api-functions/api-clear-cache.xml
+      docs/fr/programmers/api-functions/api-clear-compiled-tpl.xml
+      docs/fr/programmers/api-functions/api-clear-config.xml
+      docs/fr/programmers/api-functions/api-config-load.xml
+      docs/fr/programmers/api-functions/api-display.xml
+      docs/fr/programmers/api-functions/api-fetch.xml
+      docs/fr/programmers/api-functions/api-get-config-vars.xml
+      docs/fr/programmers/api-functions/api-get-registered-object.xml
+      docs/fr/programmers/api-functions/api-get-template-vars.xml
+      docs/fr/programmers/api-functions/api-is-cached.xml
+      docs/fr/programmers/api-functions/api-load-filter.xml
+      docs/fr/programmers/api-functions/api-register-block.xml
+      docs/fr/programmers/api-functions/api-register-compiler-function.xml
+      docs/fr/programmers/api-functions/api-register-function.xml
+      docs/fr/programmers/api-functions/api-register-modifier.xml
+      docs/fr/programmers/api-functions/api-register-object.xml
+      docs/fr/programmers/api-functions/api-register-outputfilter.xml
+      docs/fr/programmers/api-functions/api-register-postfilter.xml
+      docs/fr/programmers/api-functions/api-register-prefilter.xml
+      docs/fr/programmers/api-functions/api-register-resource.xml
+      docs/fr/programmers/api-functions/api-template-exists.xml
+      docs/fr/programmers/api-functions/api-trigger-error.xml
+      docs/fr/programmers/api-functions/api-unregister-block.xml
+      docs/fr/programmers/api-functions/api-unregister-compiler-function.xml
+      docs/fr/programmers/api-functions/api-unregister-function.xml
+      docs/fr/programmers/api-functions/api-unregister-modifier.xml
+      docs/fr/programmers/api-functions/api-unregister-object.xml
+      docs/fr/programmers/api-functions/api-unregister-outputfilter.xml
+      docs/fr/programmers/api-functions/api-unregister-postfilter.xml
+      docs/fr/programmers/api-functions/api-unregister-prefilter.xml
+      docs/fr/programmers/api-functions/api-unregister-resource.xml:
+      sync with EN
+
+2006-10-03  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/designers/language-custom-functions/language-function-html-select-time.xml
+      docs/fr/designers/language-custom-functions/language-function-html-table.xml
+      docs/fr/designers/language-custom-functions/language-function-mailto.xml
+      docs/fr/designers/language-custom-functions/language-function-math.xml
+      docs/fr/designers/language-custom-functions/language-function-popup-init.xml
+      docs/fr/designers/language-custom-functions/language-function-popup.xml
+      docs/fr/designers/language-custom-functions/language-function-textformat.xml
+      docs/fr/designers/language-modifiers/language-modifier-capitalize.xml
+      docs/fr/designers/language-modifiers/language-modifier-cat.xml
+      docs/fr/designers/language-modifiers/language-modifier-count-characters.xml
+      docs/fr/designers/language-modifiers/language-modifier-count-paragraphs.xml
+      docs/fr/designers/language-modifiers/language-modifier-count-sentences.xml
+      docs/fr/designers/language-modifiers/language-modifier-count-words.xml
+      docs/fr/designers/language-modifiers/language-modifier-date-format.xml
+      docs/fr/designers/language-modifiers/language-modifier-default.xml
+      docs/fr/designers/language-modifiers/language-modifier-escape.xml
+      docs/fr/designers/language-modifiers/language-modifier-indent.xml
+      docs/fr/designers/language-modifiers/language-modifier-lower.xml
+      docs/fr/designers/language-modifiers/language-modifier-nl2br.xml
+      docs/fr/designers/language-modifiers/language-modifier-regex-replace.xml
+      docs/fr/designers/language-modifiers/language-modifier-replace.xml
+      docs/fr/designers/language-modifiers/language-modifier-spacify.xml
+      docs/fr/designers/language-modifiers/language-modifier-string-format.xml
+      docs/fr/designers/language-modifiers/language-modifier-strip-tags.xml
+      docs/fr/designers/language-modifiers/language-modifier-strip.xml
+      docs/fr/designers/language-modifiers/language-modifier-truncate.xml
+      docs/fr/designers/language-modifiers/language-modifier-upper.xml
+      docs/fr/designers/language-modifiers/language-modifier-wordwrap.xml
+      docs/fr/designers/language-variables/language-assigned-variables.xml
+      docs/fr/designers/language-variables/language-config-variables.xml
+      docs/fr/designers/language-variables/language-variables-smarty.xml:
+      sync with EN
+
+2006-10-01  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/designers/language-builtin-functions/language-function-include-php.xml
+      docs/fr/designers/language-builtin-functions/language-function-include.xml
+      docs/fr/designers/language-builtin-functions/language-function-insert.xml
+      docs/fr/designers/language-builtin-functions/language-function-ldelim.xml
+      docs/fr/designers/language-builtin-functions/language-function-literal.xml
+      docs/fr/designers/language-builtin-functions/language-function-php.xml
+      docs/fr/designers/language-custom-functions/language-function-assign.xml
+      docs/fr/designers/language-custom-functions/language-function-counter.xml
+      docs/fr/designers/language-custom-functions/language-function-cycle.xml
+      docs/fr/designers/language-custom-functions/language-function-debug.xml
+      docs/fr/designers/language-custom-functions/language-function-eval.xml
+      docs/fr/designers/language-custom-functions/language-function-fetch.xml
+      docs/fr/designers/language-custom-functions/language-function-html-checkboxes.xml
+      docs/fr/designers/language-custom-functions/language-function-html-image.xml
+      docs/fr/designers/language-custom-functions/language-function-html-options.xml
+      docs/fr/designers/language-custom-functions/language-function-html-radios.xml
+      docs/fr/designers/language-custom-functions/language-function-html-select-date.xml:
+      sync with EN
+
+2006-09-30  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/getting-started.xml:
+      fix build
+
+    * docs/fr/designers/chapter-debugging-console.xml
+      docs/fr/designers/config-files.xml
+      docs/fr/designers/language-builtin-functions.xml
+      docs/fr/designers/language-modifiers.xml
+      docs/fr/designers/language-variables.xml
+      docs/fr/designers/language-basic-syntax/language-escaping.xml
+      docs/fr/designers/language-basic-syntax/language-math.xml
+      docs/fr/designers/language-basic-syntax/language-syntax-comments.xml
+      docs/fr/designers/language-basic-syntax/language-syntax-functions.xml
+      docs/fr/designers/language-basic-syntax/language-syntax-quotes.xml
+      docs/fr/designers/language-basic-syntax/language-syntax-variables.xml
+      docs/fr/designers/language-builtin-functions/language-function-capture.xml
+      docs/fr/designers/language-builtin-functions/language-function-config-load.xml
+      docs/fr/designers/language-builtin-functions/language-function-foreach.xml
+      docs/fr/designers/language-builtin-functions/language-function-if.xml:
+      sync with EN
+
+    * docs/fr/getting-started.xml
+      docs/fr/language-snippets.ent
+      docs/fr/appendixes/resources.xml
+      docs/fr/appendixes/tips.xml
+      docs/fr/appendixes/troubleshooting.xml:
+      sync with EN
+
+2006-09-27  Peter 'Mash' Morgan  <pm at daffodil.uk.com>
+
+    * docs/en/designers/language-builtin-functions/language-function-section.xml:
+      Minor tweaks and corrections
+
+    * docs/en/getting-started.xml
+      docs/en/designers/chapter-debugging-console.xml
+      docs/en/designers/language-basic-syntax/language-syntax-comments.xml
+      docs/en/designers/language-custom-functions/language-function-html-image.xml
+      docs/en/designers/language-custom-functions/language-function-html-options.xml
+      docs/en/designers/language-custom-functions/language-function-html-radios.xml
+      docs/en/designers/language-custom-functions/language-function-html-select-date.xml
+      docs/en/designers/language-custom-functions/language-function-html-select-time.xml
+      docs/en/designers/language-custom-functions/language-function-html-table.xml
+      docs/en/designers/language-custom-functions/language-function-mailto.xml
+      docs/en/designers/language-custom-functions/language-function-popup-init.xml
+      docs/en/designers/language-custom-functions/language-function-textformat.xml
+      docs/en/designers/language-variables/language-config-variables.xml
+      docs/en/designers/language-variables/language-variables-smarty.xml:
+      Add literal tags to html, general formatting
+
+    * docs/en/getting-started.xml
+      docs/en/appendixes/resources.xml
+      docs/en/appendixes/tips.xml
+      docs/en/appendixes/troubleshooting.xml
+      docs/en/designers/config-files.xml
+      docs/en/programmers/caching.xml
+      docs/en/programmers/smarty-constants.xml
+      docs/en/programmers/advanced-features/advanced-features-objects.xml
+      docs/en/programmers/advanced-features/advanced-features-outputfilters.xml
+      docs/en/programmers/advanced-features/advanced-features-postfilters.xml
+      docs/en/programmers/advanced-features/advanced-features-prefilters.xml
+      docs/en/programmers/advanced-features/section-template-cache-handler-func.xml
+      docs/en/programmers/advanced-features/template-resources.xml
+      docs/en/programmers/api-variables/variable-autoload-filters.xml
+      docs/en/programmers/api-variables/variable-cache-dir.xml
+      docs/en/programmers/api-variables/variable-cache-handler-func.xml
+      docs/en/programmers/api-variables/variable-cache-lifetime.xml
+      docs/en/programmers/api-variables/variable-cache-modified-check.xml
+      docs/en/programmers/api-variables/variable-caching.xml
+      docs/en/programmers/api-variables/variable-compile-check.xml
+      docs/en/programmers/api-variables/variable-compile-dir.xml
+      docs/en/programmers/api-variables/variable-compile-id.xml
+      docs/en/programmers/api-variables/variable-config-booleanize.xml
+      docs/en/programmers/api-variables/variable-config-dir.xml
+      docs/en/programmers/api-variables/variable-config-fix-newlines.xml
+      docs/en/programmers/api-variables/variable-config-overwrite.xml
+      docs/en/programmers/api-variables/variable-config-read-hidden.xml
+      docs/en/programmers/api-variables/variable-debug-tpl.xml
+      docs/en/programmers/api-variables/variable-debugging-ctrl.xml
+      docs/en/programmers/api-variables/variable-debugging.xml
+      docs/en/programmers/api-variables/variable-default-modifiers.xml
+      docs/en/programmers/api-variables/variable-default-resource-type.xml
+      docs/en/programmers/api-variables/variable-error-reporting.xml
+      docs/en/programmers/api-variables/variable-force-compile.xml
+      docs/en/programmers/api-variables/variable-left-delimiter.xml
+      docs/en/programmers/api-variables/variable-php-handling.xml
+      docs/en/programmers/api-variables/variable-plugins-dir.xml
+      docs/en/programmers/api-variables/variable-request-use-auto-globals.xml
+      docs/en/programmers/api-variables/variable-request-vars-order.xml
+      docs/en/programmers/api-variables/variable-right-delimiter.xml
+      docs/en/programmers/api-variables/variable-secure-dir.xml
+      docs/en/programmers/api-variables/variable-security-settings.xml
+      docs/en/programmers/api-variables/variable-security.xml
+      docs/en/programmers/api-variables/variable-template-dir.xml
+      docs/en/programmers/api-variables/variable-trusted-dir.xml
+      docs/en/programmers/api-variables/variable-use-sub-dirs.xml
+      docs/en/programmers/caching/caching-cacheable.xml
+      docs/en/programmers/caching/caching-groups.xml
+      docs/en/programmers/caching/caching-multiple-caches.xml
+      docs/en/programmers/caching/caching-setting-up.xml:
+      Tidy up of formatting
+
+    * docs/entities/global.ent:
+      Adding some more resources
+
+    * docs/en/programmers/plugins/plugins-block-functions.xml
+      docs/en/programmers/plugins/plugins-compiler-functions.xml
+      docs/en/programmers/plugins/plugins-functions.xml
+      docs/en/programmers/plugins/plugins-inserts.xml
+      docs/en/programmers/plugins/plugins-modifiers.xml
+      docs/en/programmers/plugins/plugins-naming-conventions.xml
+      docs/en/programmers/plugins/plugins-outputfilters.xml
+      docs/en/programmers/plugins/plugins-prefilters-postfilters.xml
+      docs/en/programmers/plugins/plugins-resources.xml
+      docs/en/programmers/plugins/plugins-writing.xml:
+      Tidy up some formatting
+
+2006-09-26  Peter 'Mash' Morgan  <pm at daffodil.uk.com>
+
+    * docs/en/programmers/api-functions/api-append-by-ref.xml
+      docs/en/programmers/api-functions/api-append.xml
+      docs/en/programmers/api-functions/api-assign-by-ref.xml
+      docs/en/programmers/api-functions/api-assign.xml
+      docs/en/programmers/api-functions/api-clear-all-assign.xml
+      docs/en/programmers/api-functions/api-clear-all-cache.xml
+      docs/en/programmers/api-functions/api-clear-assign.xml
+      docs/en/programmers/api-functions/api-clear-cache.xml
+      docs/en/programmers/api-functions/api-clear-compiled-tpl.xml
+      docs/en/programmers/api-functions/api-clear-config.xml
+      docs/en/programmers/api-functions/api-config-load.xml
+      docs/en/programmers/api-functions/api-display.xml
+      docs/en/programmers/api-functions/api-fetch.xml
+      docs/en/programmers/api-functions/api-get-config-vars.xml
+      docs/en/programmers/api-functions/api-get-registered-object.xml
+      docs/en/programmers/api-functions/api-get-template-vars.xml
+      docs/en/programmers/api-functions/api-is-cached.xml
+      docs/en/programmers/api-functions/api-load-filter.xml
+      docs/en/programmers/api-functions/api-register-block.xml
+      docs/en/programmers/api-functions/api-register-compiler-function.xml
+      docs/en/programmers/api-functions/api-register-function.xml
+      docs/en/programmers/api-functions/api-register-modifier.xml
+      docs/en/programmers/api-functions/api-register-object.xml
+      docs/en/programmers/api-functions/api-register-outputfilter.xml
+      docs/en/programmers/api-functions/api-register-postfilter.xml
+      docs/en/programmers/api-functions/api-register-prefilter.xml
+      docs/en/programmers/api-functions/api-register-resource.xml
+      docs/en/programmers/api-functions/api-template-exists.xml
+      docs/en/programmers/api-functions/api-trigger-error.xml
+      docs/en/programmers/api-functions/api-unregister-block.xml
+      docs/en/programmers/api-functions/api-unregister-compiler-function.xml
+      docs/en/programmers/api-functions/api-unregister-function.xml
+      docs/en/programmers/api-functions/api-unregister-modifier.xml
+      docs/en/programmers/api-functions/api-unregister-object.xml
+      docs/en/programmers/api-functions/api-unregister-outputfilter.xml
+      docs/en/programmers/api-functions/api-unregister-postfilter.xml
+      docs/en/programmers/api-functions/api-unregister-prefilter.xml
+      docs/en/programmers/api-functions/api-unregister-resource.xml:
+      Tidy up formatting and examples
+
+    * docs/en/language-snippets.ent:
+      Moved recurring para for register_*
+
+    * docs/en/designers/language-modifiers.xml:
+      Spelling on modifiers
+
+    * docs/en/designers/language-builtin-functions.xml
+      docs/en/designers/language-modifiers.xml
+      docs/en/designers/language-custom-functions/language-function-html-options.xml
+      docs/en/designers/language-modifiers/language-modifier-capitalize.xml
+      docs/en/designers/language-modifiers/language-modifier-cat.xml
+      docs/en/designers/language-modifiers/language-modifier-count-characters.xml
+      docs/en/designers/language-modifiers/language-modifier-count-paragraphs.xml
+      docs/en/designers/language-modifiers/language-modifier-count-sentences.xml
+      docs/en/designers/language-modifiers/language-modifier-count-words.xml
+      docs/en/designers/language-modifiers/language-modifier-date-format.xml
+      docs/en/designers/language-modifiers/language-modifier-default.xml
+      docs/en/designers/language-modifiers/language-modifier-escape.xml
+      docs/en/designers/language-modifiers/language-modifier-indent.xml
+      docs/en/designers/language-modifiers/language-modifier-lower.xml
+      docs/en/designers/language-modifiers/language-modifier-nl2br.xml
+      docs/en/designers/language-modifiers/language-modifier-regex-replace.xml
+      docs/en/designers/language-modifiers/language-modifier-replace.xml
+      docs/en/designers/language-modifiers/language-modifier-spacify.xml
+      docs/en/designers/language-modifiers/language-modifier-string-format.xml
+      docs/en/designers/language-modifiers/language-modifier-strip-tags.xml
+      docs/en/designers/language-modifiers/language-modifier-strip.xml
+      docs/en/designers/language-modifiers/language-modifier-truncate.xml
+      docs/en/designers/language-modifiers/language-modifier-upper.xml
+      docs/en/designers/language-modifiers/language-modifier-wordwrap.xml:
+      Tidying up some markup
+
+    * docs/en/designers/language-variables.xml:
+      typo
+
+    * docs/en/designers/language-variables.xml
+      docs/en/designers/language-variables/language-assigned-variables.xml
+      docs/en/designers/language-variables/language-config-variables.xml
+      docs/en/designers/language-variables/language-variables-smarty.xml:
+      Tidy up formatting on variables
+
+    * docs/en/designers/language-basic-syntax/language-escaping.xml
+      docs/en/designers/language-basic-syntax/language-math.xml
+      docs/en/designers/language-basic-syntax/language-syntax-comments.xml
+      docs/en/designers/language-basic-syntax/language-syntax-functions.xml
+      docs/en/designers/language-basic-syntax/language-syntax-quotes.xml
+      docs/en/designers/language-basic-syntax/language-syntax-variables.xml:
+      Formatting of the basic-syntax dir
+
+    * docs/en/designers/language-custom-functions/language-function-assign.xml
+      docs/en/designers/language-custom-functions/language-function-counter.xml
+      docs/en/designers/language-custom-functions/language-function-cycle.xml
+      docs/en/designers/language-custom-functions/language-function-debug.xml
+      docs/en/designers/language-custom-functions/language-function-eval.xml
+      docs/en/designers/language-custom-functions/language-function-fetch.xml
+      docs/en/designers/language-custom-functions/language-function-html-checkboxes.xml
+      docs/en/designers/language-custom-functions/language-function-html-image.xml
+      docs/en/designers/language-custom-functions/language-function-html-options.xml
+      docs/en/designers/language-custom-functions/language-function-html-radios.xml
+      docs/en/designers/language-custom-functions/language-function-html-select-date.xml
+      docs/en/designers/language-custom-functions/language-function-html-select-time.xml
+      docs/en/designers/language-custom-functions/language-function-html-table.xml
+      docs/en/designers/language-custom-functions/language-function-mailto.xml
+      docs/en/designers/language-custom-functions/language-function-math.xml
+      docs/en/designers/language-custom-functions/language-function-popup-init.xml
+      docs/en/designers/language-custom-functions/language-function-popup.xml
+      docs/en/designers/language-custom-functions/language-function-textformat.xml:
+      More formatting and cleaning up examples
+
+2006-09-25  Peter 'Mash' Morgan  <pm at daffodil.uk.com>
+
+    * docs/en/designers/language-builtin-functions/language-function-foreach.xml
+      docs/en/designers/language-builtin-functions/language-function-section.xml:
+      Doh! removing tabs
+
+    * docs/en/designers/language-builtin-functions/language-function-capture.xml
+      docs/en/designers/language-builtin-functions/language-function-config-load.xml
+      docs/en/designers/language-builtin-functions/language-function-foreach.xml
+      docs/en/designers/language-builtin-functions/language-function-if.xml
+      docs/en/designers/language-builtin-functions/language-function-include-php.xml
+      docs/en/designers/language-builtin-functions/language-function-include.xml
+      docs/en/designers/language-builtin-functions/language-function-insert.xml
+      docs/en/designers/language-builtin-functions/language-function-ldelim.xml
+      docs/en/designers/language-builtin-functions/language-function-literal.xml
+      docs/en/designers/language-builtin-functions/language-function-php.xml
+      docs/en/designers/language-builtin-functions/language-function-section.xml
+      docs/en/designers/language-builtin-functions/language-function-strip.xml:
+      A lot of formatting, tagging and tidy up. Some consistency at last
+
+    * docs/en/designers/language-builtin-functions/language-function-section.xml:
+      Major tidy up
+
+    * docs/en/designers/language-builtin-functions/language-function-foreach.xml:
+      Major tidy up, added index property and some examples
+
+2006-09-03  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/designers/language-custom-functions/language-function-popup-init.xml
+      docs/fr/programmers/advanced-features/advanced-features-outputfilters.xml
+      docs/fr/programmers/advanced-features/advanced-features-postfilters.xml
+      docs/fr/programmers/advanced-features/advanced-features-prefilters.xml:
+      sync with EN
+
+2006-09-01  George Miroshnikov  <support at infinity.com.ua>
+
+    * docs/ru/programmers/api-functions/api-append-by-ref.xml
+      docs/ru/programmers/api-functions/api-append.xml
+      docs/ru/programmers/api-functions/api-assign-by-ref.xml
+      docs/ru/programmers/api-functions/api-assign.xml
+      docs/ru/programmers/api-functions/api-clear-all-assign.xml
+      docs/ru/programmers/api-functions/api-clear-all-cache.xml
+      docs/ru/programmers/api-functions/api-clear-assign.xml
+      docs/ru/programmers/api-functions/api-clear-cache.xml
+      docs/ru/programmers/api-functions/api-clear-compiled-tpl.xml
+      docs/ru/programmers/api-functions/api-clear-config.xml
+      docs/ru/programmers/api-functions/api-config-load.xml
+      docs/ru/programmers/api-functions/api-display.xml:
+      sync with EN
+
+2006-08-25  Messju Mohr  <messju at lammfellpuschen.de>
+
+    * NEWS
+      libs/Smarty_Compiler.class.php:
+      fixed wrong handling of name attribute in {insert}
+      thanks to Ivan Kravets for reporting this
+
+    * libs/Smarty_Compiler.class.php:
+      fixed typo
+
+2006-08-21  George Miroshnikov  <support at infinity.com.ua>
+
+    * docs/ru/designers/language-custom-functions/language-function-popup-init.xml
+      docs/ru/programmers/advanced-features/advanced-features-objects.xml
+      docs/ru/programmers/advanced-features/advanced-features-outputfilters.xml
+      docs/ru/programmers/advanced-features/advanced-features-postfilters.xml
+      docs/ru/programmers/advanced-features/advanced-features-prefilters.xml
+      docs/ru/programmers/advanced-features/section-template-cache-handler-func.xml
+      docs/ru/programmers/advanced-features/template-resources.xml:
+      sync with EN
+
+    * docs/en/programmers/advanced-features/advanced-features-prefilters.xml:
+      another missing dot
+
+    * docs/en/programmers/advanced-features/advanced-features-postfilters.xml:
+      missing dot
+
+    * docs/en/programmers/advanced-features/advanced-features-outputfilters.xml:
+      missing comma
+
+2006-08-19  Peter 'Mash' Morgan  <pmm at daffodil.uk.com>
+
+    * docs/en/designers/language-custom-functions/language-function-popup-init.xml:
+      avoid dupes and added remote paths
+
+2006-08-06  Yannick Torres  <yannick.torres at keliglia.com>
+
+    * docs/fr/designers/language-custom-functions/language-function-html-table.xml
+      docs/fr/designers/language-custom-functions/language-function-mailto.xml:
+      sync with EN
+
+2006-08-03  Messju Mohr  <messju at lammfellpuschen.de>
+
+    * NEWS
+      libs/Smarty_Compiler.class.php:
+      fix false replacement of "$t" inside double quotes
+      thanks to checat for reporting this
+
+2006-07-20  George Miroshnikov  <support at infinity.com.ua>
+
+    * docs/ru/designers/language-custom-functions/language-function-html-table.xml
+      docs/ru/designers/language-custom-functions/language-function-mailto.xml:
+      incrementing EN-Revision
+
+    * docs/ru/designers/language-custom-functions/language-function-assign.xml
+      docs/ru/designers/language-custom-functions/language-function-eval.xml
+      docs/ru/designers/language-custom-functions/language-function-fetch.xml
+      docs/ru/designers/language-custom-functions/language-function-html-checkboxes.xml
+      docs/ru/designers/language-custom-functions/language-function-html-image.xml
+      docs/ru/designers/language-custom-functions/language-function-html-options.xml
+      docs/ru/designers/language-custom-functions/language-function-html-radios.xml
+      docs/ru/designers/language-custom-functions/language-function-html-table.xml
+      docs/ru/designers/language-custom-functions/language-function-mailto.xml
+      docs/ru/designers/language-custom-functions/language-function-popup-init.xml
+      docs/ru/designers/language-custom-functions/language-function-popup.xml
+      docs/ru/designers/language-modifiers/language-modifier-date-format.xml
+      docs/ru/designers/language-modifiers/language-modifier-default.xml
+      docs/ru/designers/language-modifiers/language-modifier-escape.xml
+      docs/ru/designers/language-modifiers/language-modifier-indent.xml
+      docs/ru/designers/language-modifiers/language-modifier-lower.xml
+      docs/ru/designers/language-modifiers/language-modifier-nl2br.xml
+      docs/ru/designers/language-modifiers/language-modifier-strip.xml
+      docs/ru/designers/language-modifiers/language-modifier-truncate.xml
+      docs/ru/designers/language-modifiers/language-modifier-upper.xml
+      docs/ru/designers/language-modifiers/language-modifier-wordwrap.xml
+      docs/ru/designers/language-variables/language-variables-smarty.xml:
+      sync with EN
+
+    * docs/en/designers/language-custom-functions/language-function-mailto.xml:
+      typo
+
+2006-07-10  boots  <jayboots at yahoo.com>
+
+    * libs/plugins/function.html_table.php:
+      fixed email address in comments
+
+    * NEWS
+      libs/plugins/function.html_table.php:
+      html_table: fixed th/tr output, added hdir support for column
+      headings,update docs to reflect new features
+
+2006-07-08  Messju Mohr  <messju at lammfellpuschen.de>
+
+    * libs/plugins/function.html_table.php:
+      fix occasional notices on undefined variables
+
+2006-07-08  boots  <jayboots at yahoo.com>
+
+    * libs/plugins/function.html_table.php:
+      Added ability to specify column headings in {html_table}
+      
+      Added th_attrs attribute which works similary to td_attr and tr_attr but
+      for TH elements. Changes the cols attribute to allow mixed values; a
+      numeric still specifies the number of columns to render but now an array
+      of values can be used to specify TH column values. The number of columns
+      is determine from the size of the array. Further, a comma-separated
+      string of column names can be used which is internally coverted to an
+      array and used as if it was specified as a normal array.
+      
+      Thanks for lynlyn for the feature request.
+
+2006-06-23  boots  <jayboots at yahoo.com>
+
+    * libs/plugins/outputfilter.trimwhitespace.php:
+      fix comments in outputfilter.trimwhitespace
+
+    * NEWS
+      libs/plugins/outputfilter.trimwhitespace.php:
+      fixed ordering of replacements in trimwhitespace output filter
+      
+      Thanks to Getty from IRC for reporting this.
+
+2006-06-20  boots  <jayboots at yahoo.com>
+
+    * NEWS
+      libs/plugins/function.mailto.php:
+      update mailto function plugin to work around a firefox/thunderbird escaping
+      bug
+      
+      Thanks to elijahlofgren from the forums for reporting this and providing
+      the necessary patch
+
+    * NEWS
+      libs/plugins/modifier.date_format.php:
+      emulate %l in the date_format modifier on windows
+      
+      thanks to Gibberish from the forums for reporting this
+
+2006-06-14  boots  <jayboots at yahoo.com>
+
+    * NEWS
+      libs/plugins/modifier.capitalize.php:
+      Fix handling of apostrophes in the capitalize modifier.
+      
+      Thanks to asmecher from the forums for reporting this and providing a
+      partial solution.
+
+2006-05-28  Monte Ohrt  <monte at ohrt.com>
+
+    * NEWS
+      libs/Config_File.class.php
+      libs/Smarty.class.php
+      libs/Smarty_Compiler.class.php:
+      update version numbers
+
 2006-05-25  boots  <jayboots at yahoo.com>
 
     * NEWS
@@ -3720,7 +4585,7 @@
 
     * libs/Smarty.class.php
       libs/Smarty_Compiler.class.php:
-      added CVS $Id: ChangeLog,v 1.417 2006/05/26 05:32:07 changelog Exp $
+      added CVS $Id: ChangeLog,v 1.448 2006/12/01 01:31:17 changelog Exp $
 
 2003-03-31  Messju Mohr  <messju at lammfellpuschen.de>
 

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/NEWS
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/NEWS	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/NEWS	2006-12-17 12:12:31 UTC (rev 2259)
@@ -1,3 +1,34 @@
+Version 2.6.16 (Dec 1st, 2006)
+------------------------------
+
+- fixed replacement bug in trimwhitespace output filter that was introduced
+  in the last release (Spuerhund, boots)
+
+Version 2.6.15 (Nov 30th, 2006)
+-------------------------------
+
+- change file writing semantics in smarty_core_write_file() to unlink() only
+  when rename() fails or a Windows system is detected (c960657, boots) 
+- update debug.tpl to xhtml 1.1 compliance, fix javascript escaping in debug
+  output and apply a Smarty based color scheme (cybot, boots)
+- enhance reporting precision of debug_print_var modifier (cybot, boots) 
+- make html_select_date work consistently with 0000-00-00 00:00:00 and
+  0000-00-00 inputs (cybot, boots)
+- fix wrong handling of insert's name attribute. (messju)
+- fix false replacement of "$t" inside double quotes (checat, messju)
+- added support for column headings and caption element to html_table and
+  updated the output to use thead/tbody elements (boots)
+- fixed ordering of replacements in trimwhitespace output filter (Getty, boots)
+- update mailto function plugin to work around a firefox/thunderbird
+  escaping bug (elijahlofgren, boots)
+- emulate %l in the date_format modifier on windows (boots) 
+- fix handling of apostrophes in capitalize modifier (Alec Smecher, boots)
+
+Version 2.6.14 (May 28th, 2006)
+-------------------------------
+
+- fix compiler bug allowing php tags in secure templates
+  (boots,monte)
 - un-hide hidden xml open tags (boots)
 - fix handling of block-methods of registered objects (El Hombre Gris,
   messju)

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Config_File.class.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Config_File.class.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Config_File.class.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -18,14 +18,14 @@
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  *
  * @link http://smarty.php.net/
- * @version 2.6.14
+ * @version 2.6.16
  * @copyright Copyright: 2001-2005 New Digital Group, Inc.
  * @author Andrei Zmievski <andrei at php.net>
  * @access public
  * @package Smarty
  */
 
-/* $Id: Config_File.class.php,v 1.84 2006/01/18 19:02:52 mohrt Exp $ */
+/* $Id: Config_File.class.php,v 1.86 2006/11/30 17:01:28 mohrt Exp $ */
 
 /**
  * Config file reading class

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Smarty.class.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Smarty.class.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Smarty.class.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -27,10 +27,10 @@
  * @author Monte Ohrt <monte at ohrt dot com>
  * @author Andrei Zmievski <andrei at php.net>
  * @package Smarty
- * @version 2.6.14
+ * @version 2.6.16
  */
 
-/* $Id: Smarty.class.php,v 1.524 2006/01/18 19:02:52 mohrt Exp $ */
+/* $Id: Smarty.class.php,v 1.526 2006/11/30 17:01:28 mohrt Exp $ */
 
 /**
  * DIR_SEP isn't used anymore, but third party apps might
@@ -464,7 +464,7 @@
      *
      * @var string
      */
-    var $_version              = '2.6.14';
+    var $_version              = '2.6.16';
 
     /**
      * current template inclusion depth

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Smarty_Compiler.class.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Smarty_Compiler.class.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/Smarty_Compiler.class.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -21,12 +21,12 @@
  * @link http://smarty.php.net/
  * @author Monte Ohrt <monte at ohrt dot com>
  * @author Andrei Zmievski <andrei at php.net>
- * @version 2.6.14
+ * @version 2.6.16
  * @copyright 2001-2005 New Digital Group, Inc.
  * @package Smarty
  */
 
-/* $Id: Smarty_Compiler.class.php,v 1.381 2006/05/25 14:46:18 boots Exp $ */
+/* $Id: Smarty_Compiler.class.php,v 1.386 2006/11/30 17:01:28 mohrt Exp $ */
 
 /**
  * Template compiling class
@@ -927,8 +927,12 @@
         $name = $this->_dequote($attrs['name']);
 
         if (empty($name)) {
-            $this->_syntax_error("missing insert name", E_USER_ERROR, __FILE__, __LINE__);
+            return $this->_syntax_error("missing insert name", E_USER_ERROR, __FILE__, __LINE__);
         }
+        
+        if (!preg_match('~^\w+$~', $name)) {
+            return $this->_syntax_error("'insert: 'name' must be an insert function name", E_USER_ERROR, __FILE__, __LINE__);
+        }
 
         if (!empty($attrs['script'])) {
             $delayed_loading = true;
@@ -1160,7 +1164,7 @@
         }
         $item = $this->_dequote($attrs['item']);
         if (!preg_match('~^\w+$~', $item)) {
-            return $this->_syntax_error("'foreach: item' must be a variable name (literal string)", E_USER_ERROR, __FILE__, __LINE__);
+            return $this->_syntax_error("'foreach: 'item' must be a variable name (literal string)", E_USER_ERROR, __FILE__, __LINE__);
         }
 
         if (isset($attrs['key'])) {
@@ -1671,11 +1675,11 @@
         // if contains unescaped $, expand it
         if(preg_match_all('~(?:\`(?<!\\\\)\$' . $this->_dvar_guts_regexp . '(?:' . $this->_obj_ext_regexp . ')*\`)|(?:(?<!\\\\)\$\w+(\[[a-zA-Z0-9]+\])*)~', $var_expr, $_match)) {
             $_match = $_match[0];
-            rsort($_match);
-            reset($_match);
+            $_replace = array();
             foreach($_match as $_var) {
-                $var_expr = str_replace ($_var, '".(' . $this->_parse_var(str_replace('`','',$_var)) . ')."', $var_expr);
+                $_replace[$_var] = '".(' . $this->_parse_var(str_replace('`','',$_var)) . ')."';
             }
+            $var_expr = strtr($var_expr, $_replace);
             $_return = preg_replace('~\.""|(?<!\\\\)""\.~', '', $var_expr);
         } else {
             $_return = $var_expr;

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/debug.tpl
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/debug.tpl	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/debug.tpl	2006-12-17 12:12:31 UTC (rev 2259)
@@ -1,64 +1,157 @@
 {* Smarty *}
+{* debug.tpl, last updated version 2.1.0 *}
+{assign_debug_info}
+{capture assign=debug_output}
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
+<head>
+    <title>Smarty Debug Console</title>
+{literal}
+<style type="text/css">
+/* <![CDATA[ */
+body, h1, h2, td, th, p {
+    font-family: sans-serif;
+    font-weight: normal;
+    font-size: 0.9em;
+    margin: 1px;
+    padding: 0;
+}
 
-{* debug.tpl, last updated version 2.0.1 *}
+h1 {
+    margin: 0;
+    text-align: left;
+    padding: 2px;
+    background-color: #f0c040;
+    color:  black;
+    font-weight: bold;
+    font-size: 1.2em;
+ }
 
-{assign_debug_info}
+h2 {
+    background-color: #9B410E;
+    color: white;
+    text-align: left;
+    font-weight: bold;
+    padding: 2px;
+    border-top: 1px solid black;
+}
 
+body {
+    background: black; 
+}
+
+p, table, div {
+    background: #f0ead8;
+} 
+
+p {
+    margin: 0;
+    font-style: italic;
+    text-align: center;
+}
+
+table {
+    width: 100%;
+}
+
+th, td {
+    font-family: monospace;
+    vertical-align: top;
+    text-align: left;
+    width: 50%;
+}
+
+td {
+    color: green;
+}
+
+.odd {
+    background-color: #eeeeee;
+}
+
+.even {
+    background-color: #fafafa;
+}
+
+.exectime {
+    font-size: 0.8em;
+    font-style: italic;
+}
+
+#table_assigned_vars th {
+    color: blue;
+}
+
+#table_config_vars th {
+    color: maroon;
+}
+/* ]]> */
+</style>
+{/literal}
+</head>
+<body>
+
+<h1>Smarty Debug Console</h1>
+
+<h2>included templates &amp; config files (load time in seconds)</h2>
+
+<div>
+{section name=templates loop=$_debug_tpls}
+    {section name=indent loop=$_debug_tpls[templates].depth}&nbsp;&nbsp;&nbsp;{/section}
+    <font color={if $_debug_tpls[templates].type eq "template"}brown{elseif $_debug_tpls[templates].type eq "insert"}black{else}green{/if}>
+        {$_debug_tpls[templates].filename|escape:html}</font>
+    {if isset($_debug_tpls[templates].exec_time)}
+        <span class="exectime">
+        ({$_debug_tpls[templates].exec_time|string_format:"%.5f"})
+        {if %templates.index% eq 0}(total){/if}
+        </span>
+    {/if}
+    <br />
+{sectionelse}
+    <p>no templates included</p>
+{/section}
+</div>
+
+<h2>assigned template variables</h2>
+
+<table id="table_assigned_vars">
+    {section name=vars loop=$_debug_keys}
+        <tr class="{cycle values="odd,even"}">
+            <th>{ldelim}${$_debug_keys[vars]|escape:'html'}{rdelim}</th>
+            <td>{$_debug_vals[vars]|@debug_print_var}</td></tr>
+    {sectionelse}
+        <tr><td><p>no template variables assigned</p></td></tr>
+    {/section}
+</table>
+
+<h2>assigned config file variables (outer template scope)</h2>
+
+<table id="table_config_vars">
+    {section name=config_vars loop=$_debug_config_keys}
+        <tr class="{cycle values="odd,even"}">
+            <th>{ldelim}#{$_debug_config_keys[config_vars]|escape:'html'}#{rdelim}</th>
+            <td>{$_debug_config_vals[config_vars]|@debug_print_var}</td></tr>
+    {sectionelse}
+        <tr><td><p>no config vars assigned</p></td></tr>
+    {/section}
+</table>
+</body>
+</html>
+{/capture}
 {if isset($_smarty_debug_output) and $_smarty_debug_output eq "html"}
-	<table border=0 width=100%>
-	<tr bgcolor=#cccccc><th colspan=2>Smarty Debug Console</th></tr>
-	<tr bgcolor=#cccccc><td colspan=2><b>included templates & config files (load time in seconds):</b></td></tr>
-	{section name=templates loop=$_debug_tpls}
-		<tr bgcolor={if %templates.index% is even}#eeeeee{else}#fafafa{/if}><td colspan=2><tt>{section name=indent loop=$_debug_tpls[templates].depth}&nbsp;&nbsp;&nbsp;{/section}<font color={if $_debug_tpls[templates].type eq "template"}brown{elseif $_debug_tpls[templates].type eq "insert"}black{else}green{/if}>{$_debug_tpls[templates].filename|escape:html}</font>{if isset($_debug_tpls[templates].exec_time)} <font size=-1><i>({$_debug_tpls[templates].exec_time|string_format:"%.5f"}){if %templates.index% eq 0} (total){/if}</i></font>{/if}</tt></td></tr>
-	{sectionelse}
-		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no templates included</i></tt></td></tr>	
-	{/section}
-	<tr bgcolor=#cccccc><td colspan=2><b>assigned template variables:</b></td></tr>
-	{section name=vars loop=$_debug_keys}
-		<tr bgcolor={if %vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=blue>{ldelim}${$_debug_keys[vars]}{rdelim}</font></tt></td><td nowrap><tt><font color=green>{$_debug_vals[vars]|@debug_print_var}</font></tt></td></tr>
-	{sectionelse}
-		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no template variables assigned</i></tt></td></tr>	
-	{/section}
-	<tr bgcolor=#cccccc><td colspan=2><b>assigned config file variables (outer template scope):</b></td></tr>
-	{section name=config_vars loop=$_debug_config_keys}
-		<tr bgcolor={if %config_vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=maroon>{ldelim}#{$_debug_config_keys[config_vars]}#{rdelim}</font></tt></td><td><tt><font color=green>{$_debug_config_vals[config_vars]|@debug_print_var}</font></tt></td></tr>
-	{sectionelse}
-		<tr bgcolor=#eeeeee><td colspan=2><tt><i>no config vars assigned</i></tt></td></tr>	
-	{/section}
-	</table>
-</BODY></HTML>
+    {$debug_output}
 {else}
-<SCRIPT language=javascript>
-	if( self.name == '' ) {ldelim}
-	   var title = 'Console';
-	{rdelim}
-	else {ldelim}
-	   var title = 'Console_' + self.name;
-	{rdelim}
-	_smarty_console = window.open("",title.value,"width=680,height=600,resizable,scrollbars=yes");
-	_smarty_console.document.write("<HTML><HEAD><TITLE>Smarty Debug Console_"+self.name+"</TITLE></HEAD><BODY bgcolor=#ffffff>");
-	_smarty_console.document.write("<table border=0 width=100%>");
-	_smarty_console.document.write("<tr bgcolor=#cccccc><th colspan=2>Smarty Debug Console</th></tr>");
-	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>included templates & config files (load time in seconds):</b></td></tr>");
-	{section name=templates loop=$_debug_tpls}
-		_smarty_console.document.write("<tr bgcolor={if %templates.index% is even}#eeeeee{else}#fafafa{/if}><td colspan=2><tt>{section name=indent loop=$_debug_tpls[templates].depth}&nbsp;&nbsp;&nbsp;{/section}<font color={if $_debug_tpls[templates].type eq "template"}brown{elseif $_debug_tpls[templates].type eq "insert"}black{else}green{/if}>{$_debug_tpls[templates].filename|escape:html|escape:javascript}</font>{if isset($_debug_tpls[templates].exec_time)} <font size=-1><i>({$_debug_tpls[templates].exec_time|string_format:"%.5f"}){if %templates.index% eq 0} (total){/if}</i></font>{/if}</tt></td></tr>");
-	{sectionelse}
-		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no templates included</i></tt></td></tr>");	
-	{/section}
-	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>assigned template variables:</b></td></tr>");
-	{section name=vars loop=$_debug_keys}
-		_smarty_console.document.write("<tr bgcolor={if %vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=blue>{ldelim}${$_debug_keys[vars]}{rdelim}</font></tt></td><td nowrap><tt><font color=green>{$_debug_vals[vars]|@debug_print_var|escape:javascript}</font></tt></td></tr>");
-	{sectionelse}
-		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no template variables assigned</i></tt></td></tr>");	
-	{/section}
-	_smarty_console.document.write("<tr bgcolor=#cccccc><td colspan=2><b>assigned config file variables (outer template scope):</b></td></tr>");
-	{section name=config_vars loop=$_debug_config_keys}
-		_smarty_console.document.write("<tr bgcolor={if %config_vars.index% is even}#eeeeee{else}#fafafa{/if}><td valign=top><tt><font color=maroon>{ldelim}#{$_debug_config_keys[config_vars]}#{rdelim}</font></tt></td><td><tt><font color=green>{$_debug_config_vals[config_vars]|@debug_print_var|escape:javascript}</font></tt></td></tr>");
-	{sectionelse}
-		_smarty_console.document.write("<tr bgcolor=#eeeeee><td colspan=2><tt><i>no config vars assigned</i></tt></td></tr>");	
-	{/section}
-	_smarty_console.document.write("</table>");
-	_smarty_console.document.write("</BODY></HTML>");
-	_smarty_console.document.close();
-</SCRIPT>
-{/if}
+<script type="text/javascript">
+// <![CDATA[
+    if ( self.name == '' ) {ldelim}
+       var title = 'Console';
+    {rdelim}
+    else {ldelim}
+       var title = 'Console_' + self.name;
+    {rdelim}
+    _smarty_console = window.open("",title.value,"width=680,height=600,resizable,scrollbars=yes");
+    _smarty_console.document.write('{$debug_output|escape:'javascript'}');
+    _smarty_console.document.close();
+// ]]>
+</script>
+{/if}
\ No newline at end of file

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/internals/core.write_file.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/internals/core.write_file.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/internals/core.write_file.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -23,8 +23,7 @@
         smarty_core_create_dir_structure($_params, $smarty);
     }
 
-    // write to tmp file, then rename it to avoid
-    // file locking race condition
+    // write to tmp file, then rename it to avoid file locking race condition
     $_tmp_file = tempnam($_dirname, 'wrt');
 
     if (!($fd = @fopen($_tmp_file, 'wb'))) {
@@ -38,12 +37,13 @@
     fwrite($fd, $params['contents']);
     fclose($fd);
 
-    // Delete the file if it allready exists (this is needed on Win,
-    // because it cannot overwrite files with rename()
-    if (file_exists($params['filename'])) {
+    if (PHP_OS == 'Windows' || !@rename($_tmp_file, $params['filename'])) {
+        // On platforms and filesystems that cannot overwrite with rename() 
+        // delete the file before renaming it -- because windows always suffers
+        // this, it is short-circuited to avoid the initial rename() attempt
         @unlink($params['filename']);
+        @rename($_tmp_file, $params['filename']);
     }
-    @rename($_tmp_file, $params['filename']);
     @chmod($params['filename'], $smarty->_file_perms);
 
     return true;
@@ -51,4 +51,4 @@
 
 /* vim: set expandtab: */
 
-?>
+?>
\ No newline at end of file

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.html_select_date.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.html_select_date.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.html_select_date.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -24,9 +24,11 @@
  *                day values (Marcus Bointon)
  *           - 1.3.2 support negative timestamps, force year
  *             dropdown to include given date unless explicitly set (Monte)
+ *           - 1.3.4 fix behaviour of 0000-00-00 00:00:00 dates to match that
+ *             of 0000-00-00 dates (cybot, boots)
  * @link http://smarty.php.net/manual/en/language.function.html.select.date.php {html_select_date}
  *      (Smarty online manual)
- * @version 1.3.2
+ * @version 1.3.4
  * @author Andrei Zmievski
  * @author Monte Ohrt <monte at ohrt dot com>
  * @param array
@@ -131,19 +133,21 @@
         }
     }
 
-    if(preg_match('!^-\d+$!',$time)) {
+    if (preg_match('!^-\d+$!', $time)) {
         // negative timestamp, use date()
-        $time = date('Y-m-d',$time);
+        $time = date('Y-m-d', $time);
     }
     // If $time is not in format yyyy-mm-dd
-    if (!preg_match('/^\d{0,4}-\d{0,2}-\d{0,2}$/', $time)) {
+    if (preg_match('/^(\d{0,4}-\d{0,2}-\d{0,2})/', $time, $found)) {
+        $time = $found[1];
+    } else {
         // use smarty_make_timestamp to get an unix timestamp and
         // strftime to make yyyy-mm-dd
         $time = strftime('%Y-%m-%d', smarty_make_timestamp($time));
     }
     // Now split this in pieces, which later can be used to set the select
     $time = explode("-", $time);
-    
+
     // make syntax "+N" or "-N" work with start_year and end_year
     if (preg_match('!^(\+|\-)\s*(\d+)$!', $end_year, $match)) {
         if ($match[1] == '+') {
@@ -159,7 +163,7 @@
             $start_year = strftime('%Y') - $match[2];
         }
     }
-    if (strlen($time[0]) > 0) { 
+    if (strlen($time[0]) > 0) {
         if ($start_year > $time[0] && !isset($params['start_year'])) {
             // force start year to include given date if not explicitly set
             $start_year = $time[0];

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.html_table.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.html_table.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.html_table.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -15,12 +15,15 @@
  * Purpose:  make an html table from an array of data<br>
  * Input:<br>
  *         - loop = array to loop through
- *         - cols = number of columns
+ *         - cols = number of columns, comma separated list of column names
+ *                  or array of column names
  *         - rows = number of rows
  *         - table_attr = table attributes
+ *         - th_attr = table heading attributes (arrays are cycled)
  *         - tr_attr = table row attributes (arrays are cycled)
  *         - td_attr = table cell attributes (arrays are cycled)
  *         - trailpad = value to pad trailing cells with
+ *         - caption = text for caption element 
  *         - vdir = vertical direction (default: "down", means top-to-bottom)
  *         - hdir = horizontal direction (default: "right", means left-to-right)
  *         - inner = inner loop (default "cols": print $loop line by line,
@@ -31,10 +34,12 @@
  * <pre>
  * {table loop=$data}
  * {table loop=$data cols=4 tr_attr='"bgcolor=red"'}
- * {table loop=$data cols=4 tr_attr=$colors}
+ * {table loop=$data cols="first,second,third" tr_attr=$colors}
  * </pre>
  * @author   Monte Ohrt <monte at ohrt dot com>
- * @version  1.0
+ * @author credit to Messju Mohr <messju at lammfellpuschen dot de>
+ * @author credit to boots <boots dot smarty at yahoo dot com>
+ * @version  1.1
  * @link http://smarty.php.net/manual/en/language.function.html.table.php {html_table}
  *          (Smarty online manual)
  * @param array
@@ -45,13 +50,15 @@
 {
     $table_attr = 'border="1"';
     $tr_attr = '';
+    $th_attr = '';
     $td_attr = '';
-    $cols = 3;
+    $cols = $cols_count = 3;
     $rows = 3;
     $trailpad = '&nbsp;';
     $vdir = 'down';
     $hdir = 'right';
     $inner = 'cols';
+    $caption = '';
 
     if (!isset($params['loop'])) {
         $smarty->trigger_error("html_table: missing 'loop' parameter");
@@ -65,6 +72,19 @@
                 break;
 
             case 'cols':
+                if (is_array($_value) && !empty($_value)) {
+                    $cols = $_value;
+                    $cols_count = count($_value);
+                } elseif (!is_numeric($_value) && is_string($_value) && !empty($_value)) {
+                    $cols = explode(',', $_value);
+                    $cols_count = count($cols);
+                } elseif (!empty($_value)) {
+                    $cols_count = (int)$_value;
+                } else {
+                    $cols_count = $cols;
+                }
+                break;
+
             case 'rows':
                 $$_key = (int)$_value;
                 break;
@@ -74,11 +94,13 @@
             case 'hdir':
             case 'vdir':
             case 'inner':
+            case 'caption':
                 $$_key = (string)$_value;
                 break;
 
             case 'tr_attr':
             case 'td_attr':
+            case 'th_attr':
                 $$_key = $_value;
                 break;
         }
@@ -87,25 +109,42 @@
     $loop_count = count($loop);
     if (empty($params['rows'])) {
         /* no rows specified */
-        $rows = ceil($loop_count/$cols);
+        $rows = ceil($loop_count/$cols_count);
     } elseif (empty($params['cols'])) {
         if (!empty($params['rows'])) {
             /* no cols specified, but rows */
-            $cols = ceil($loop_count/$rows);
+            $cols_count = ceil($loop_count/$rows);
         }
     }
 
     $output = "<table $table_attr>\n";
 
+    if (!empty($caption)) {
+        $output .= '<caption>' . $caption . "</caption>\n";
+    }
+
+    if (is_array($cols)) {
+        $cols = ($hdir == 'right') ? $cols : array_reverse($cols);
+        $output .= "<thead><tr>\n";
+
+        for ($r=0; $r<$cols_count; $r++) {
+            $output .= '<th' . smarty_function_html_table_cycle('th', $th_attr, $r) . '>';
+            $output .= $cols[$r];
+            $output .= "</th>\n";
+        }
+        $output .= "</tr></thead>\n";
+    }
+
+    $output .= "<tbody>\n";
     for ($r=0; $r<$rows; $r++) {
         $output .= "<tr" . smarty_function_html_table_cycle('tr', $tr_attr, $r) . ">\n";
-        $rx =  ($vdir == 'down') ? $r*$cols : ($rows-1-$r)*$cols;
+        $rx =  ($vdir == 'down') ? $r*$cols_count : ($rows-1-$r)*$cols_count;
 
-        for ($c=0; $c<$cols; $c++) {
-            $x =  ($hdir == 'right') ? $rx+$c : $rx+$cols-1-$c;
+        for ($c=0; $c<$cols_count; $c++) {
+            $x =  ($hdir == 'right') ? $rx+$c : $rx+$cols_count-1-$c;
             if ($inner!='cols') {
                 /* shuffle x to loop over rows*/
-                $x = floor($x/$cols) + ($x%$cols)*$rows;
+                $x = floor($x/$cols_count) + ($x%$cols_count)*$rows;
             }
 
             if ($x<$loop_count) {
@@ -116,6 +155,7 @@
         }
         $output .= "</tr>\n";
     }
+    $output .= "</tbody>\n";
     $output .= "</table>\n";
     
     return $output;

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.mailto.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.mailto.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/function.mailto.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -62,6 +62,8 @@
 
     // netscape and mozilla do not decode %40 (@) in BCC field (bug?)
     // so, don't encode it.
+    $search = array('%40', '%2C');
+    $replace  = array('@', ',');
     $mail_parms = array();
     foreach ($params as $var=>$value) {
         switch ($var) {
@@ -69,7 +71,7 @@
             case 'bcc':
             case 'followupto':
                 if (!empty($value))
-                    $mail_parms[] = $var.'='.str_replace('%40','@',rawurlencode($value));
+                    $mail_parms[] = $var.'='.str_replace($search,$replace,rawurlencode($value));
                 break;
                 
             case 'subject':

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.capitalize.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.capitalize.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.capitalize.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -21,7 +21,7 @@
 function smarty_modifier_capitalize($string, $uc_digits = false)
 {
     smarty_modifier_capitalize_ucfirst(null, $uc_digits);
-    return preg_replace_callback('!\b\w+\b!', 'smarty_modifier_capitalize_ucfirst', $string);
+    return preg_replace_callback('!\'?\b\w(\w|\')*\b!', 'smarty_modifier_capitalize_ucfirst', $string);
 }
 
 function smarty_modifier_capitalize_ucfirst($string, $uc_digits = null)
@@ -33,7 +33,7 @@
         return;
     }
     
-    if(!preg_match('!\d!',$string[0]) || $_uc_digits)
+    if(substr($string[0],0,1) != "'" && !preg_match("!\d!",$string[0]) || $_uc_digits)
         return ucfirst($string[0]);
     else
         return $string[0];

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.date_format.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.date_format.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.date_format.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -31,9 +31,11 @@
 function smarty_modifier_date_format($string, $format="%b %e, %Y", $default_date=null)
 {
     if (substr(PHP_OS,0,3) == 'WIN') {
-           $_win_from = array ('%e',  '%T',       '%D');
-           $_win_to   = array ('%#d', '%H:%M:%S', '%m/%d/%y');
-           $format = str_replace($_win_from, $_win_to, $format);
+        $hours = strftime('%I', $string);
+        $short_hours = ( $hours < 10 ) ? substr( $hours, -1) : $hours; 
+        $_win_from = array ('%e',  '%T',       '%D',        '%l');
+        $_win_to   = array ('%#d', '%H:%M:%S', '%m/%d/%y',  $short_hours);
+        $format = str_replace($_win_from, $_win_to, $format);
     }
     if($string != '') {
         return strftime($format, smarty_make_timestamp($string));

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.debug_print_var.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.debug_print_var.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/modifier.debug_print_var.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -22,33 +22,66 @@
  */
 function smarty_modifier_debug_print_var($var, $depth = 0, $length = 40)
 {
-    $_replace = array("\n"=>'<i>&#92;n</i>', "\r"=>'<i>&#92;r</i>', "\t"=>'<i>&#92;t</i>');
-    if (is_array($var)) {
-        $results = "<b>Array (".count($var).")</b>";
-        foreach ($var as $curr_key => $curr_val) {
-            $return = smarty_modifier_debug_print_var($curr_val, $depth+1, $length);
-            $results .= "<br>".str_repeat('&nbsp;', $depth*2)."<b>".strtr($curr_key, $_replace)."</b> =&gt; $return";
-        }
-    } else if (is_object($var)) {
-        $object_vars = get_object_vars($var);
-        $results = "<b>".get_class($var)." Object (".count($object_vars).")</b>";
-        foreach ($object_vars as $curr_key => $curr_val) {
-            $return = smarty_modifier_debug_print_var($curr_val, $depth+1, $length);
-            $results .= "<br>".str_repeat('&nbsp;', $depth*2)."<b>$curr_key</b> =&gt; $return";
-        }
-    } else if (is_resource($var)) {
-        $results = '<i>'.(string)$var.'</i>';
-    } else if (empty($var) && $var != "0") {
-        $results = '<i>empty</i>';
-    } else {
-        if (strlen($var) > $length ) {
-            $results = substr($var, 0, $length-3).'...';
-        } else {
-            $results = $var;
-        }
-        $results = htmlspecialchars($results);
-        $results = strtr($results, $_replace);
+    $_replace = array(
+        "\n" => '<i>\n</i>',
+        "\r" => '<i>\r</i>',
+        "\t" => '<i>\t</i>'
+    );
+
+    switch (gettype($var)) {
+        case 'array' :
+            $results = '<b>Array (' . count($var) . ')</b>';
+            foreach ($var as $curr_key => $curr_val) {
+                $results .= '<br>' . str_repeat('&nbsp;', $depth * 2)
+                    . '<b>' . strtr($curr_key, $_replace) . '</b> =&gt; '
+                    . smarty_modifier_debug_print_var($curr_val, ++$depth, $length);
+                    $depth--;
+            }
+            break;
+        case 'object' :
+            $object_vars = get_object_vars($var);
+            $results = '<b>' . get_class($var) . ' Object (' . count($object_vars) . ')</b>';
+            foreach ($object_vars as $curr_key => $curr_val) {
+                $results .= '<br>' . str_repeat('&nbsp;', $depth * 2)
+                    . '<b> -&gt;' . strtr($curr_key, $_replace) . '</b> = '
+                    . smarty_modifier_debug_print_var($curr_val, ++$depth, $length);
+                    $depth--;
+            }
+            break;
+        case 'boolean' :
+        case 'NULL' :
+        case 'resource' :
+            if (true === $var) {
+                $results = 'true';
+            } elseif (false === $var) {
+                $results = 'false';
+            } elseif (null === $var) {
+                $results = 'null';
+            } else {
+                $results = htmlspecialchars((string) $var);
+            }
+            $results = '<i>' . $results . '</i>';
+            break;
+        case 'integer' :
+        case 'float' :
+            $results = htmlspecialchars((string) $var);
+            break;
+        case 'string' :
+            $results = strtr($var, $_replace);
+            if (strlen($var) > $length ) {
+                $results = substr($var, 0, $length - 3) . '...';
+            }
+            $results = htmlspecialchars('"' . $results . '"');
+            break;
+        case 'unknown type' :
+        default :
+            $results = strtr((string) $var, $_replace);
+            if (strlen($results) > $length ) {
+                $results = substr($results, 0, $length - 3) . '...';
+            }
+            $results = htmlspecialchars($results);
     }
+
     return $results;
 }
 

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/outputfilter.trimwhitespace.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/outputfilter.trimwhitespace.php	2006-12-17 12:09:02 UTC (rev 2258)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/smarty/libs/plugins/outputfilter.trimwhitespace.php	2006-12-17 12:12:31 UTC (rev 2259)
@@ -49,14 +49,14 @@
     // preceeded by a php close tag.
     $source = trim(preg_replace('/((?<!\?>)\n)[\s]+/m', '\1', $source));
 
-    // replace script blocks
-    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:SCRIPT@@@",$_script_blocks, $source);
+    // replace textarea blocks
+    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:TEXTAREA@@@",$_textarea_blocks, $source);
 
     // replace pre blocks
     smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:PRE@@@",$_pre_blocks, $source);
 
-    // replace textarea blocks
-    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:TEXTAREA@@@",$_textarea_blocks, $source);
+    // replace script blocks
+    smarty_outputfilter_trimwhitespace_replace("@@@SMARTY:TRIM:SCRIPT@@@",$_script_blocks, $source);
 
     return $source;
 }



From pclaerhout at mail.berlios.de  Sun Dec 17 13:19:31 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 13:19:31 +0100
Subject: [ydf-devel] r2260 - YDFramework2.0/trunk/examples/weblog/include
Message-ID: <200612171219.kBHCJVoW013933@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 13:19:31 +0100 (Sun, 17 Dec 2006)
New Revision: 2260

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogRequest.php
Log:
Fix for [ Bug #9748 ] Deleting items doesn't clear out the cache

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogRequest.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogRequest.php	2006-12-17 12:12:31 UTC (rev 2259)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogRequest.php	2006-12-17 12:19:31 UTC (rev 2260)
@@ -242,7 +242,7 @@
             $this->caching = false;
             
             // Delete the cache
-            if ( sizeof( $_POST ) > 0 ) {
+            if ( sizeof( $_POST ) > 0 || YDRequest::getActionName() == 'delete' ) {
                 @ $this->clearCache();
             }
 



From pclaerhout at mail.berlios.de  Sun Dec 17 13:26:21 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 13:26:21 +0100
Subject: [ydf-devel] r2261 -
	YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements
Message-ID: <200612171226.kBHCQLOC014542@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 13:26:20 +0100 (Sun, 17 Dec 2006)
New Revision: 2261

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Password.php
Log:
Fix for [ Feature Request #2966 ] Remove POST value for password fields.

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Password.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Password.php	2006-12-17 12:19:31 UTC (rev 2260)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Password.php	2006-12-17 12:26:20 UTC (rev 2261)
@@ -69,6 +69,9 @@
             );
             $attribs = array_merge( $this->_attributes, $attribs );
 
+            // Empty the value
+            $attribs['value'] = '';
+
             // Get the HTML
             return '<input' . YDForm::_convertToHtmlAttrib( $attribs ) . ' />';
 



From pclaerhout at mail.berlios.de  Sun Dec 17 13:30:09 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 13:30:09 +0100
Subject: [ydf-devel] r2262 - YDFramework2.0/trunk/YDFramework2/YDClasses
Message-ID: <200612171230.kBHCU989014884@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 13:30:09 +0100 (Sun, 17 Dec 2006)
New Revision: 2262

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php
Log:
Added the YDTemplate::addJavascriptUrl function.

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php	2006-12-17 12:26:20 UTC (rev 2261)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDTemplate.php	2006-12-17 12:30:09 UTC (rev 2262)
@@ -216,6 +216,13 @@
                 if ( $this->customCss != '' )
                     $code = "\n<style type=\"text/css\">\n" . $this->customCss . "</style>";
 
+                // test if customJavascriptUrls is set
+                if ( is_array( $this->customJavascriptUrls ) ) {
+                    foreach ( $this->customJavascriptUrls as $jsUrl ) {
+                        $code .= "\n<script type=\"text/javascript\" src=\"" . $jsUrl .  "\"></script>\n";
+                    }
+                }
+
                 // add onload code to custom javascript code
                 if ( $this->customJavascriptOnload != '' )
                     $this->customJavascript .= "window.onload = function() {" . $this->customJavascriptOnload . "}\n";
@@ -228,6 +235,7 @@
 
                 // replace head end tag
                 return eregi_replace( "</head>", $code . "</head>", $tpl_source );
+
             }
 
             /**
@@ -250,6 +258,15 @@
             }
 
             /**
+             *	This function will add custom javascript url to the template head
+             *
+             *	@param $jsUrl	   Javascript url to add
+             */
+            function addJavascriptUrl( $jsUrl ) {
+                $this->customJavascriptUrls[] = $jsUrl;
+            }
+
+            /**
              *	This function will add custom css to the template head
              *
              *	@param $cssCode	   Css code to add



From pclaerhout at mail.berlios.de  Sun Dec 17 14:11:44 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 14:11:44 +0100
Subject: [ydf-devel] r2263 - in YDFramework2.0/trunk/examples/weblog: .
	include include/languages manage
Message-ID: <200612171311.kBHDBiFd019152@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 14:11:43 +0100 (Sun, 17 Dec 2006)
New Revision: 2263

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
   YDFramework2.0/trunk/examples/weblog/item.php
   YDFramework2.0/trunk/examples/weblog/manage/config.php
   YDFramework2.0/trunk/examples/weblog/manage/config.tpl
Log:
Fixes for:
[ Feature Request #2898 ] Make max comment length configurable
[ Feature Request #2899 ] Make max num of hyperlinks configurable

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-17 12:30:09 UTC (rev 2262)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-17 13:11:43 UTC (rev 2263)
@@ -27,6 +27,9 @@
         if ( ! isset( $values['dflt_is_draft'] ) ) {
             $values['dflt_is_draft'] = false;
         }
+        if ( empty( $values['db_pass'] ) ) {
+            $values['db_pass'] = YDConfig::get( 'db_pass', '' );
+        }
 
         // Construct the new config text
         $cfg = '<?php' . "\n\n";

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-17 12:30:09 UTC (rev 2262)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-17 13:11:43 UTC (rev 2263)
@@ -90,8 +90,8 @@
 $GLOBALS['t']['err_email'] = 'Email is missing or invalid';
 $GLOBALS['t']['err_website'] = 'The website specified is not a valid URL';
 $GLOBALS['t']['err_comment'] = 'Comment is required';
-$GLOBALS['t']['err_comment_length'] = 'Comment cannot be more than 1500 characters';
-$GLOBALS['t']['err_comment_links'] = 'Comment cannot contain more than 1 hyperlink';
+$GLOBALS['t']['err_comment_length'] = 'Comment cannot be more than ' . YDConfig::get( 'max_comment_length', 1500 ) . ' characters';
+$GLOBALS['t']['err_comment_links'] = 'Comment cannot contain more than ' . YDConfig::get( 'max_comment_links', 1 ) . ' hyperlink';
 $GLOBALS['t']['with'] = 'for';
 $GLOBALS['t']['item_closed'] = 'This item does not allow comments.';
 $GLOBALS['t']['spam'] = 'Spam';
@@ -264,6 +264,10 @@
 $GLOBALS['t']['confirm_empty_spam'] = 'Are you sure you want to delete all spam comments?';
 $GLOBALS['t']['empty_spam_now'] = 'Delete all spam comments now.';
 $GLOBALS['t']['weight'] = 'Weight';
+$GLOBALS['t']['max_comment_length'] = 'Maximum lenght of comments';
+$GLOBALS['t']['err_max_comment_length'] = 'Maximum lenght of comment must be a number';
+$GLOBALS['t']['max_comment_links'] = 'Maximum number of hyperlinks in a comment';
+$GLOBALS['t']['err_max_comment_links'] = 'Maximum number of hyperlinks in a comment must be a number';
 
 // manage/config.tpl
 $GLOBALS['t']['cfg_db_settings'] = 'Database Settings';

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-17 12:30:09 UTC (rev 2262)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-17 13:11:43 UTC (rev 2263)
@@ -90,8 +90,8 @@
 $GLOBALS['t']['err_email'] = 'Email is niet ingegeven of niet correct';
 $GLOBALS['t']['err_website'] = 'De website is geen geldige URL';
 $GLOBALS['t']['err_comment'] = 'Een commentaar is vereist';
-$GLOBALS['t']['err_comment_length'] = 'Commentaar kan niet meer dan 1500 karakters bevatten';
-$GLOBALS['t']['err_comment_links'] = 'Commentaar kan niet meer dan 1 hyperlink bevatten';
+$GLOBALS['t']['err_comment_length'] = 'Commentaar kan niet meer dan ' . YDConfig::get( 'max_comment_length', 1500 ) . ' karakters bevatten';
+$GLOBALS['t']['err_comment_links'] = 'Commentaar kan niet meer dan ' . YDConfig::get( 'max_comment_links', 1500 ) . ' hyperlink bevatten';
 $GLOBALS['t']['with'] = 'bij';
 $GLOBALS['t']['item_closed'] = 'Dit item laat geen commentaren toe.';
 $GLOBALS['t']['spam'] = 'Spam';
@@ -264,6 +264,10 @@
 $GLOBALS['t']['confirm_empty_spam'] = 'Bent u zeker dat u alle spam commentaren wil verwijderen?';
 $GLOBALS['t']['empty_spam_now'] = 'Verwijder nu alle spam commentaren.';
 $GLOBALS['t']['weight'] = 'Gewicht';
+$GLOBALS['t']['max_comment_length'] = 'Maximum lengte van een commentaar';
+$GLOBALS['t']['err_max_comment_length'] = 'Maximum lengte van een commentaar moet een nummer zijn';
+$GLOBALS['t']['max_comment_links'] = 'Maximum aantal hyperlinks in een commentaar';
+$GLOBALS['t']['err_max_comment_links'] = 'Maximum aantal hyperlinks in een commentaar moet een nummer zijn';
 
 // manage/config.tpl
 $GLOBALS['t']['cfg_db_settings'] = 'Database Instellingen';

Modified: YDFramework2.0/trunk/examples/weblog/item.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/item.php	2006-12-17 12:30:09 UTC (rev 2262)
+++ YDFramework2.0/trunk/examples/weblog/item.php	2006-12-17 13:11:43 UTC (rev 2263)
@@ -74,8 +74,8 @@
             $form->addRule( 'useremail',   'required',      t( 'err_email' ) );
             $form->addRule( 'userwebsite', 'httpurl',       t( 'err_website' ) );
             $form->addRule( 'comment',     'required',      t( 'err_comment' ) );
-            $form->addRule( 'comment',     'maxlength',     t( 'err_comment_length' ), 1500 );
-            $form->addRule( 'comment',     'maxhyperlinks', t( 'err_comment_links' ), 1 );
+            $form->addRule( 'comment',     'maxlength',     t( 'err_comment_length' ), YDConfig::get( 'max_comment_length', 1500 ) );
+            $form->addRule( 'comment',     'maxhyperlinks', t( 'err_comment_links' ), YDConfig::get( 'max_comment_links', 1 ) );
 
             // Add the filters
             $form->addFilters( array( 'username', 'useremail', 'userwebsite' ), 'strip_html' );

Modified: YDFramework2.0/trunk/examples/weblog/manage/config.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/config.php	2006-12-17 12:30:09 UTC (rev 2262)
+++ YDFramework2.0/trunk/examples/weblog/manage/config.php	2006-12-17 13:11:43 UTC (rev 2263)
@@ -99,6 +99,8 @@
             $form->addElement( 'textarea', 'blocked_ips', t( 'cfg_blocked_ips' ), array( 'class' => 'tfMNoMCE' ) );
             $form->addElement( 'text', 'akismet_key', t( 'cfg_akismet_key' ), array( 'class' => 'tfM' ) );
             $form->addElement( 'text', 'comment_interval', t( 'cfg_comment_interval' ), array( 'class' => 'tfM' ) );
+            $form->addElement( 'text', 'max_comment_length', t( 'max_comment_length' ), array( 'class' => 'tfM' ) );
+            $form->addElement( 'text', 'max_comment_links', t( 'max_comment_links' ), array( 'class' => 'tfM' ) );
 
             $form->addElement( 'submit', '_cmdSubmit', t('OK'), array( 'class' => 'button' ) );
 
@@ -115,6 +117,8 @@
             $form->addRule( 'max_syndicated_items', 'required', t( 'err_max_syndicated_items' ) );
             $form->addRule( 'max_syndicated_items', 'numeric', t( 'err_max_syndicated_items_num' ) );
             $form->addRule( 'comment_interval', 'numeric', t( 'err_comment_interval_num' ) );
+            $form->addRule( 'max_comment_length', 'numeric', t( 'err_max_comment_length' ) );
+            $form->addRule( 'max_comment_links', 'numeric', t( 'err_max_comment_links' ) );
 
             // Add the filters
             $form->addFilters( 
@@ -177,6 +181,8 @@
             $config['max_img_size_x']       = YDConfig::get( 'max_img_size_x',       '' );
             $config['max_img_size_y']       = YDConfig::get( 'max_img_size_y',       '' );
             $config['comment_interval']     = YDConfig::get( 'comment_interval',     10 );
+            $config['max_comment_length']   = YDConfig::get( 'max_comment_length',   1500 );
+            $config['max_comment_links']    = YDConfig::get( 'max_comment_links',    1 );
 
             // Return the configuration
             return $config;

Modified: YDFramework2.0/trunk/examples/weblog/manage/config.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/config.tpl	2006-12-17 12:30:09 UTC (rev 2262)
+++ YDFramework2.0/trunk/examples/weblog/manage/config.tpl	2006-12-17 13:11:43 UTC (rev 2263)
@@ -148,6 +148,14 @@
             <td class="adminRowL">{t w="cfg_comment_interval"}</td>
             <td class="adminRowL">{$config.comment_interval|default:'-'}</td>
         </tr>
+        <tr onMouseOver="YDRowMouseOver(this);" onMouseOut="YDRowMouseOut(this);">
+            <td class="adminRowL">{t w="max_comment_length"}</td>
+            <td class="adminRowL">{$config.max_comment_length|default:'-'}</td>
+        </tr>
+        <tr onMouseOver="YDRowMouseOver(this);" onMouseOut="YDRowMouseOut(this);">
+            <td class="adminRowL">{t w="max_comment_links"}</td>
+            <td class="adminRowL">{$config.max_comment_links|default:'-'}</td>
+        </tr>
     </table>
     <p><input type="button" class="button" onClick="window.location='{$YD_SELF_SCRIPT}?do=edit';" value="{t w="change_config"}" />
 {/if}
@@ -294,6 +302,14 @@
                 <td class="adminRowL">{$form.comment_interval.label_html}</td>
                 <td class="adminRowL">{$form.comment_interval.html}</td>
             </tr>
+            <tr>
+                <td class="adminRowL">{$form.max_comment_length.label_html}</td>
+                <td class="adminRowL">{$form.max_comment_length.html}</td>
+            </tr>
+            <tr>
+                <td class="adminRowL">{$form.max_comment_links.label_html}</td>
+                <td class="adminRowL">{$form.max_comment_links.html}</td>
+            </tr>
         </table>
         <p>{$form._cmdSubmit.html}</p>
     {$form.endtag}



From pclaerhout at mail.berlios.de  Sun Dec 17 14:25:49 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 14:25:49 +0100
Subject: [ydf-devel] r2264 - in YDFramework2.0/trunk/examples/weblog: .
	include include/languages
Message-ID: <200612171325.kBHDPnf9020221@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 14:25:49 +0100 (Sun, 17 Dec 2006)
New Revision: 2264

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
   YDFramework2.0/trunk/examples/weblog/item.php
Log:
Duplicate comments are no longer permitted.

Fix for [ Feature Request #2977 ] Disallow duplicate comments for items

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-17 13:11:43 UTC (rev 2263)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-17 13:25:49 UTC (rev 2264)
@@ -563,6 +563,17 @@
             return $records;
         }
 
+        // Get duplicate comments based on the current values
+        function isDuplicateComment( $values ) {
+            $values['comment'] = trim( strtolower( $values['comment'] ) );
+            $values['username'] = trim( strtolower( $values['username'] ) );
+            $sql = 'SELECT COUNT(*) AS comment_count FROM #_comments WHERE item_id = ' . $this->str( $values['item_id'] )
+                 . ' AND TRIM( LOWER( username ) ) = ' . $this->str( $values['username'] )
+                 . ' AND TRIM( LOWER( comment ) ) = ' . $this->str( $values['comment'] );
+            $result = intval( $this->db->getValueByName( $sql, 'comment_count' ) );
+            return ( $result > 0 );
+        }
+
         // Get a comment by it's ID
         function getCommentById( $comment_id ) {
             $sql = $this->_prepareQuery( 'SELECT c.id as id, c.item_id as item_id, c.username as username, c.useremail as useremail, c.userwebsite as userwebsite, c.userip as userip, c.useragent as useragent, c.userrequrl as userrequrl, c.comment as comment, c.is_spam as is_spam, c.created as created, c.modified as modified, i.title as item_title FROM #_comments c, #_items i WHERE c.item_id = i.id and c.id = ' . $this->str( $comment_id ) );

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-17 13:11:43 UTC (rev 2263)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-17 13:25:49 UTC (rev 2264)
@@ -98,6 +98,7 @@
 $GLOBALS['t']['no_spam'] = 'No spam';
 $GLOBALS['t']['choose_no_spam'] = 'Choose "no spam" here';
 $GLOBALS['t']['err_userspam'] = 'Detected a spam attack';
+$GLOBALS['t']['err_duplicate_comment'] = 'Duplicate comment detected';
 
 // comment_email.tpl
 $GLOBALS['t']['new_comment'] = 'New comment';

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-17 13:11:43 UTC (rev 2263)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-17 13:25:49 UTC (rev 2264)
@@ -98,6 +98,7 @@
 $GLOBALS['t']['no_spam'] = 'Geen spam';
 $GLOBALS['t']['choose_no_spam'] = 'Kies hier "geen spam"';
 $GLOBALS['t']['err_userspam'] = 'Detecteerde een spam aanval';
+$GLOBALS['t']['err_duplicate_comment'] = 'Duplicaat commentaar gededecteerd';
 
 // comment_email.tpl
 $GLOBALS['t']['new_comment'] = 'Nieuw commentaar';

Modified: YDFramework2.0/trunk/examples/weblog/item.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/item.php	2006-12-17 13:11:43 UTC (rev 2263)
+++ YDFramework2.0/trunk/examples/weblog/item.php	2006-12-17 13:25:49 UTC (rev 2264)
@@ -76,6 +76,7 @@
             $form->addRule( 'comment',     'required',      t( 'err_comment' ) );
             $form->addRule( 'comment',     'maxlength',     t( 'err_comment_length' ), YDConfig::get( 'max_comment_length', 1500 ) );
             $form->addRule( 'comment',     'maxhyperlinks', t( 'err_comment_links' ), YDConfig::get( 'max_comment_links', 1 ) );
+            $form->addFormRule( array( & $this, 'checkDuplicateComments' ) );
 
             // Add the filters
             $form->addFilters( array( 'username', 'useremail', 'userwebsite' ), 'strip_html' );
@@ -179,6 +180,15 @@
 
         }
 
+        // Function to check for duplicate comments
+        function checkDuplicateComments( $fields ) {
+            if ( $this->weblog->isDuplicateComment( $fields ) === true ) {
+                return array( '__ALL__' => t( 'err_duplicate_comment' ) );
+            } else {
+                return true;
+            }
+        }
+
     }
 
     // Process the request



From pclaerhout at mail.berlios.de  Sun Dec 17 14:52:00 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 14:52:00 +0100
Subject: [ydf-devel] r2265 - in YDFramework2.0/trunk/examples/weblog/skins:
	default default_with_lightbox
Message-ID: <200612171352.kBHDq0tu023201@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 14:51:59 +0100 (Sun, 17 Dec 2006)
New Revision: 2265

Modified:
   YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl
   YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl
Log:
Fixed the email templates for spam emails.

Modified: YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl	2006-12-17 13:25:49 UTC (rev 2264)
+++ YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl	2006-12-17 13:51:59 UTC (rev 2265)
@@ -29,15 +29,15 @@
         <div id="content" class="narrowcolumn">
 
             <h3>[spam] {t w="new_comment"}<br/>{$item.title}</h3>
-            <p><b>{t w="posted_from"}</b><br/>{$comment.userip}</p>
-            <p><b>User Agent</b><br/>{$comment.useragent|default:'-'}</p>
-            <p><b>Request URI</b><br/>{$comment.userrequrl|default:'-'}</p>
-            <p><b>{t w="name"}</b><br/>{$comment.username|default:'-'}</p>
-            <p><b>{t w="mail"}</b><br/>{$comment.useremail|default:'-'}</p>
-            <p><b>{t w="website"}</b><br/>{$comment.userwebsite|default:'-'}</p>
-            <p><b>{t w="created_on"}</b><br/>{$comment.created|date:'%Y/%m/%d %H:%M:%S'}</p>
-            <p><b>{t w="weight"}</b><br/>{$comment.comment|strlen}</p>
-            <p><b>{t w="comment"}</b><br/>{$comment.comment|htmlentities|default:'-'}</p>
+            <p><b>{t w="posted_from"}</b><br/>{$eml_comment.userip}</p>
+            <p><b>User Agent</b><br/>{$eml_comment.useragent|default:'-'}</p>
+            <p><b>Request URI</b><br/>{$eml_comment.userrequrl|default:'-'}</p>
+            <p><b>{t w="name"}</b><br/>{$eml_comment.username|default:'-'}</p>
+            <p><b>{t w="mail"}</b><br/>{$eml_comment.useremail|default:'-'}</p>
+            <p><b>{t w="website"}</b><br/>{$eml_comment.userwebsite|default:'-'}</p>
+            <p><b>{t w="created_on"}</b><br/>{$eml_comment.created|date:'%Y/%m/%d %H:%M:%S'}</p>
+            <p><b>{t w="weight"}</b><br/>{$eml_comment.comment|strlen}</p>
+            <p><b>{t w="comment"}</b><br/>{$eml_comment.comment|htmlentities|default:'-'}</p>
 
             <h3>$_GET</h3>
             {foreach from=$smarty.get item="item" key="key"}

Modified: YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl	2006-12-17 13:25:49 UTC (rev 2264)
+++ YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl	2006-12-17 13:51:59 UTC (rev 2265)
@@ -29,15 +29,15 @@
         <div id="content" class="narrowcolumn">
 
             <h3>[spam] {t w="new_comment"}<br/>{$item.title}</h3>
-            <p><b>{t w="posted_from"}</b><br/>{$comment.userip}</p>
-            <p><b>User Agent</b><br/>{$comment.useragent|default:'-'}</p>
-            <p><b>Request URI</b><br/>{$comment.userrequrl|default:'-'}</p>
-            <p><b>{t w="name"}</b><br/>{$comment.username|default:'-'}</p>
-            <p><b>{t w="mail"}</b><br/>{$comment.useremail|default:'-'}</p>
-            <p><b>{t w="website"}</b><br/>{$comment.userwebsite|default:'-'}</p>
-            <p><b>{t w="created_on"}</b><br/>{$comment.created|date:'%Y/%m/%d %H:%M:%S'}</p>
-            <p><b>{t w="weight"}</b><br/>{$comment.comment|strlen}</p>
-            <p><b>{t w="comment"}</b><br/>{$comment.comment|htmlentities|default:'-'}</p>
+            <p><b>{t w="posted_from"}</b><br/>{$eml_comment.userip}</p>
+            <p><b>User Agent</b><br/>{$eml_comment.useragent|default:'-'}</p>
+            <p><b>Request URI</b><br/>{$eml_comment.userrequrl|default:'-'}</p>
+            <p><b>{t w="name"}</b><br/>{$eml_comment.username|default:'-'}</p>
+            <p><b>{t w="mail"}</b><br/>{$eml_comment.useremail|default:'-'}</p>
+            <p><b>{t w="website"}</b><br/>{$eml_comment.userwebsite|default:'-'}</p>
+            <p><b>{t w="created_on"}</b><br/>{$eml_comment.created|date:'%Y/%m/%d %H:%M:%S'}</p>
+            <p><b>{t w="weight"}</b><br/>{$eml_comment.comment|strlen}</p>
+            <p><b>{t w="comment"}</b><br/>{$eml_comment.comment|htmlentities|default:'-'}</p>
 
             <h3>$_GET</h3>
             {foreach from=$smarty.get item="item" key="key"}



From pclaerhout at mail.berlios.de  Sun Dec 17 15:01:11 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 17 Dec 2006 15:01:11 +0100
Subject: [ydf-devel] r2266 - YDFramework2.0/trunk/examples/weblog
Message-ID: <200612171401.kBHE1BBY024441@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-17 15:01:11 +0100 (Sun, 17 Dec 2006)
New Revision: 2266

Modified:
   YDFramework2.0/trunk/examples/weblog/item.php
Log:
Fixed another bug in the spam comment emails.

Modified: YDFramework2.0/trunk/examples/weblog/item.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/item.php	2006-12-17 13:51:59 UTC (rev 2265)
+++ YDFramework2.0/trunk/examples/weblog/item.php	2006-12-17 14:01:11 UTC (rev 2266)
@@ -126,7 +126,7 @@
                     $users = $this->weblog->getUsers();
 
                     // Add the comment to the email template
-                    $this->tpl->assign( 'eml_comment', $values );
+                    $this->tpl->assign( 'eml_comment', $comment );
 
                     // Create the email and send it
                     $eml = new YDEmail();



From ximian at mail.berlios.de  Mon Dec 18 13:17:36 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Mon, 18 Dec 2006 13:17:36 +0100
Subject: [ydf-devel] r2267 -
	YDFramework2.0/trunk/YDFramework2/addons/YDCMComponent
Message-ID: <200612181217.kBICHaCH032019@sheep.berlios.de>

Author: ximian
Date: 2006-12-18 13:17:24 +0100 (Mon, 18 Dec 2006)
New Revision: 2267

Added:
   YDFramework2.0/trunk/YDFramework2/addons/YDCMComponent/YDCMForum.php
Log:
- added a forum draft to YDCM

Added: YDFramework2.0/trunk/YDFramework2/addons/YDCMComponent/YDCMForum.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDCMComponent/YDCMForum.php	2006-12-17 14:01:11 UTC (rev 2266)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDCMComponent/YDCMForum.php	2006-12-18 12:17:24 UTC (rev 2267)
@@ -0,0 +1,767 @@
+<?php
+
+    /*
+
+        Yellow Duck Framework version 2.0
+        (c) Copyright 2002-2005 Pieter Claerhout
+
+        This library is free software; you can redistribute it and/or
+        modify it under the terms of the GNU Lesser General Public
+        License as published by the Free Software Foundation; either
+        version 2.1 of the License, or (at your option) any later version.
+
+        This library is distributed in the hope that it will be useful,
+        but WITHOUT ANY WARRANTY; without even the implied warranty of
+        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+        Lesser General Public License for more details.
+
+        You should have received a copy of the GNU Lesser General Public
+        License along with this library; if not, write to the Free Software
+        Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+
+    */
+
+    // Check if the framework is loaded
+    if ( ! defined( 'YD_FW_NAME' ) ) {
+        die( 'Yellow Duck Framework is not loaded.' );
+    }
+
+	// set components path
+	YDConfig::set( 'YD_DBOBJECT_PATH', YD_DIR_HOME_ADD . '/YDCMComponent', false );
+
+	// add YDF libs needed by this class
+	require_once( YD_DIR_HOME_ADD . '/YDDatabaseObject/YDDatabaseObject.php' );
+
+/*
+
+CREATE TABLE ydcmforum_categories (
+   category_id mediumint(8) UNSIGNED NOT NULL auto_increment,
+   category_title varchar(100),
+   category_position mediumint(8) UNSIGNED NOT NULL,
+   PRIMARY KEY (category_id)
+);
+
+INSERT INTO ydcmforum_categories VALUES ( 1, 'First category', 1 );
+INSERT INTO ydcmforum_categories VALUES ( 2, 'Second category', 2 );
+INSERT INTO ydcmforum_categories VALUES ( 3, 'Empty category', 3 );
+
+CREATE TABLE ydcmforum_forums (
+   forum_id smallint(5) UNSIGNED NOT NULL,
+   forum_category_id mediumint(8) UNSIGNED NOT NULL,
+   forum_name varchar(150),
+   forum_description text,
+   forum_status tinyint(4) DEFAULT '0' NOT NULL,
+   forum_position mediumint(8) UNSIGNED DEFAULT '1' NOT NULL,
+   forum_totaltopics mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
+   forum_totalposts mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
+   forum_lastpost_id mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
+   PRIMARY KEY (forum_id)
+);
+
+INSERT INTO ydcmforum_forums VALUES ( 1, 1, 'forum of cat 1', 'forum description', 1, 1, 10, 200, 3);
+INSERT INTO ydcmforum_forums VALUES ( 2, 2, 'forum of cat 2', 'forum cat2',        1, 1, 10, 200, 2);
+INSERT INTO ydcmforum_forums VALUES ( 3, 1, 'sec forum of cat 1', 'forum num3',    1, 1, 10, 200, 1);
+
+
+
+CREATE TABLE ydcmforum_topics (
+   topic_id mediumint(8) UNSIGNED NOT NULL auto_increment,
+   topic_forum_id mediumint UNSIGNED DEFAULT '0' NOT NULL,
+   topic_title char(60) NOT NULL,
+   topic_user_id mediumint(8) DEFAULT '0' NOT NULL,
+   topic_topicdate datetime NOT NULL,
+   topic_totalviews mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
+   topic_totalreplies mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
+   topic_status tinyint(3) DEFAULT '0' NOT NULL,
+   topic_lastpost_id mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
+   PRIMARY KEY (topic_id)
+);
+
+INSERT INTO ydcmforum_topics VALUES ( 1, 1, 'topic title', 4, '2006-10-10 10:10', 10, 2, 1, 2 );
+INSERT INTO ydcmforum_topics VALUES ( 2, 2, 'topic of f2', 6, '2006-10-10 10:10', 10, 2, 1, 1 );
+
+
+CREATE TABLE ydcmforum_posts (
+   post_id mediumint UNSIGNED NOT NULL auto_increment,
+   post_topic_id mediumint UNSIGNED DEFAULT '0' NOT NULL,
+   post_user_id mediumint DEFAULT '0' NOT NULL,
+   post_postdate DATETIME NOT NULL,
+   post_editdate int,
+   post_content TEXT,
+   PRIMARY KEY (post_id)
+);
+
+
+
+INSERT INTO ydcmforum_posts VALUES ( 1, 1, 4, '2006-10-10 10:10', null, "example" );
+INSERT INTO ydcmforum_posts VALUES ( 2, 2, 6, '2006-10-12 10:12', null, "second post" );
+INSERT INTO ydcmforum_posts VALUES ( 3, 1, 7, '2006-10-13 10:13', null, "third post" );
+
+
+CREATE TABLE ydcmforum_announcements (
+   announcement_id mediumint UNSIGNED NOT NULL auto_increment,
+   announcement_user_id mediumint DEFAULT '0' NOT NULL,
+   announcement_postdate DATETIME NOT NULL,
+   announcement_title TEXT,
+   announcement_content TEXT,
+   announcement_totalviews mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
+   announcement_onstart int,
+   PRIMARY KEY (announcement_id)
+);
+
+
+INSERT INTO ydcmforum_announcements VALUES ( 1, 4, '2006-10-11 10:11', "Help: Read One",   "content txt", 101, 0 );
+INSERT INTO ydcmforum_announcements VALUES ( 2, 4, '2006-10-12 10:12', "Help: Read Two",   "content txt", 102, 0 );
+INSERT INTO ydcmforum_announcements VALUES ( 3, 4, '2006-10-13 10:13', "Help: Read Third", "content txt", 103, 1 );
+INSERT INTO ydcmforum_announcements VALUES ( 4, 4, '2006-10-14 10:14', "Help: Read Four",  "content txt", 104, 1 );
+
+*/
+
+	// constants to define announcement show types. Smaller is the most important
+	define( 'YD_FORUM_ANNOUNCEMENTS_ONFORUMS',            30 );
+	define( 'YD_FORUM_ANNOUNCEMENTS_ONHOMEPAGEANDFORUMS', 20 );
+	define( 'YD_FORUM_ANNOUNCEMENTS_ONHOMEPAGE',          10 );
+
+    class YDCMForum_announcements extends YDDatabaseObject {
+    
+        function YDCMForum_announcements() {
+        
+			// init DB object
+            $this->YDDatabaseObject();
+
+			// register database as default
+            $this->registerDatabase();
+
+			// register table for this component
+            $this->registerTable( 'YDCMForum_announcements' );
+
+			// register fields
+			$this->registerKey( 'announcement_id', true );
+			$this->registerField( 'announcement_user_id' );
+			$this->registerField( 'announcement_postdate' );
+			$this->registerField( 'announcement_title' );
+			$this->registerField( 'announcement_content' );
+			$this->registerField( 'announcement_totalviews' );
+			$this->registerField( 'announcement_onstart' );
+
+			// init relation with user
+            $rel = & $this->registerRelation( 'author', false, 'ydcmuser' );
+			$rel->setLocalKey( 'announcement_user_id' );
+            $rel->setForeignKey( 'user_id' );
+            $rel->setForeignVar( 'author' );
+		}
+
+
+        /**
+         *  This method return an element
+         *
+         *  @param $is  Id to search for
+         *
+         *  @returns    Element as array
+         */
+		function getElement( $id ){
+		
+			$this->reset();
+			$this->set( 'announcement_id', intval( $id ) );
+			$this->find();
+			return $this->getValues();
+		}
+
+
+        /**
+         *  This method returns all elements that should be displayed in the homepage
+         *
+         *  @returns    Element as array
+         */
+		function getAllOnHomepage(){
+		
+			$this->reset();
+			$this->where( 'announcement_onstart = ' . YD_FORUM_ANNOUNCEMENTS_ONHOMEPAGE . ' OR announcement_onstart = ' . YD_FORUM_ANNOUNCEMENTS_ONHOMEPAGEANDFORUMS );
+			return $this->_getElements();
+		}
+
+
+        /**
+         *  This method returns all elements that should be displayed in forums
+         *
+         *  @returns    Element as array
+         */
+		function getAllOnForums(){
+		
+			$this->reset();
+			$this->where( 'announcement_onstart = ' . YD_FORUM_ANNOUNCEMENTS_ONFORUMS . ' OR announcement_onstart = ' . YD_FORUM_ANNOUNCEMENTS_ONHOMEPAGEANDFORUMS );
+			return $this->_getElements();
+		}
+
+
+        /**
+         *  Private helper method to search elements
+         *
+         *  @returns    Element as array
+         */
+		function _getElements(){
+
+			$this->order( $this->getTable() . '.announcement_postdate DESC' );
+			$this->findAll();
+			return $this->getResults();
+		}
+
+	}
+
+
+
+    class YDCMForum_posts extends YDDatabaseObject {
+    
+        function YDCMForum_posts() {
+        
+			// init DB object
+            $this->YDDatabaseObject();
+
+			// register database as default
+            $this->registerDatabase();
+
+			// register table for this component
+            $this->registerTable( 'YDCMForum_posts' );
+
+			// register fields
+			$this->registerKey( 'post_id', true );
+			$this->registerField( 'post_topic_id' );
+			$this->registerField( 'post_user_id' );
+			$this->registerField( 'post_postdate' );
+			$this->registerField( 'post_editdate' );
+			$this->registerField( 'post_content' );
+
+			// init relation with user
+            $rel = & $this->registerRelation( 'author', false, 'ydcmuser' );
+			$rel->setLocalKey( 'post_user_id' );
+            $rel->setForeignKey( 'user_id' );
+            $rel->setForeignVar( 'author' );
+		}
+
+
+        /**
+         *  This method returns an element
+         *
+         *  @param $id  Id to search for
+         *
+         *  @returns    Element as array
+         */
+		function getElement( $id ){
+		
+			$this->reset();
+			$this->set( 'post_id', intval( $id ) );
+			$this->find();
+			return $this->getValues();
+		}
+
+
+        /**
+         *  This method returns an posts of a topic
+         *
+         *  @param $topic_id  (optional) Topic id. If null will return all elements
+         *
+         *  @returns    Elements as array
+         */
+		function getElements( $topic_id = null ){
+
+			// check if forum_id is an array
+			if ( is_array( $topic_id ) && isset( $topic_id[ 'topic_id' ] ) && is_numeric( $topic_id[ 'topic_id' ] ) ){
+				$topic_id = intval( $topic_id[ 'topic_id' ] );
+			}
+
+			// reset previous info
+			$this->reset();
+
+			// if topic is set let's search post of that topic
+			if ( is_numeric( $topic_id ) ){
+
+				$this->set( 'post_topic_id', intval( $topic_id ) );
+				$this->order( $this->getTable() . '.post_id ASC' );
+			}
+
+			$this->findAll();
+			return $this->getResults();
+		}
+
+
+        /**
+         *  This method returns posts of a topic in a recordset form
+         *
+         *  @param $topic_id  (optional) Topic id. If null will return all elements
+         *  @param $page      (optional) Page to get in set
+         *
+         *  @returns    Elements as array
+         */
+		function getElementsAsRecordSet( $topic_id, $page = 1 ){
+		
+			return new YDRecordSet( $this->getElements( $topic_id ), $page, 2 );
+		}
+
+
+        /**
+         *  This method creates a form for post management
+         *
+         *  @param $quote_id  (optional) Post id to insert in content textarea.
+         *
+         *  @returns    YDForm object
+         */
+		function & addFormNew( $quote_id = null ){
+		
+			// create form and add elements
+			$form = new YDForm( 'ydcmforumpost' );
+			$form->addElement( 'textarea', 'content', 'Content' );
+			$form->addElement( 'button', 'cmdLogin', 'Submit' );
+
+			// if we are replying to someone, let's get the content
+			if ( is_numeric( $quote_id ) ){
+
+				// get replying post
+				$posts = new YDCMForum_posts();
+				$post  = $posts->getElement( $quote_id );
+
+				// apply default to content textarea
+				$form->setDefault( 'content', $post[ 'post_content' ] );
+			}
+
+			return $form;
+		}
+
+
+	}
+
+
+	// last user login date.
+	YDConfig::set( 'YD_FORUM_LASTLOGINDATE', YDStringUtil::formatDate( time(), 'datetimesql' ), false );
+
+
+    class YDCMForum_topics extends YDDatabaseObject {
+    
+        function YDCMForum_topics() {
+        
+			// init DB object
+            $this->YDDatabaseObject();
+
+			// register database as default
+            $this->registerDatabase();
+
+			// register table for this component
+            $this->registerTable( 'YDCMForum_topics' );
+
+			// register fields
+			$this->registerKey( 'topic_id', true );
+			$this->registerField( 'topic_forum_id' );
+			$this->registerField( 'topic_title' );
+			$this->registerField( 'topic_user_id' );
+			$this->registerField( 'topic_topicdate' );
+			$this->registerField( 'topic_totalviews' );
+			$this->registerField( 'topic_totalreplies' );
+			$this->registerField( 'topic_status' );
+			$this->registerField( 'topic_lastpost_id' );
+
+			// init relation with forum to get information about the forum this topic belongs
+            $rel = & $this->registerRelation( 'forum', false, 'ydcmforum_forums' );
+			$rel->setLocalKey( 'topic_forum_id' );
+            $rel->setForeignKey( 'forum_id' );
+            $rel->setForeignVar( 'forum' );
+
+			// init relation with forum to get information about the forum this topic belongs
+            $rel = & $this->registerRelation( 'category', false, 'ydcmforum_categories' );
+			$rel->setLocalKey( 'forum_category_id' );
+            $rel->setForeignKey( 'category_id' );
+            $rel->setForeignVar( 'category' );
+
+			// init relation with author user to get more information about the author
+            $rel = & $this->registerRelation( 'author', false, 'ydcmuser' );
+			$rel->setLocalKey( 'topic_user_id' );
+            $rel->setForeignKey( 'user_id' );
+            $rel->setForeignVar( 'author' );
+
+			// init relation with post to get more information about the last post
+            $rel = & $this->registerRelation( 'lastpostinfo', false, 'ydcmforum_posts' );
+			$rel->setLocalKey( 'topic_lastpost_id' );
+            $rel->setForeignKey( 'post_id' );
+            $rel->setForeignVar( 'lastpostinfo' );
+
+			// init relation with user to get information about the last post user
+            $rel = & $this->registerRelation( 'lastpostauthor', false, 'ydcmuser' );
+			$rel->setLocalKey( 'post_user_id' );
+            $rel->setForeignKey( 'user_id' );
+            $rel->setForeignVar( 'lastpostauthor' );
+
+			// register type: "closed", "sticky", "poll", "hot", "new"
+			$this->registerSelect( 'topic_type', 'IF(topic_status=0,"closed",IF(topic_status=1,"sticky",IF(topic_status=3,"poll",IF(topic_totalreplies>20,"hot","normal"))))' );
+
+			// register old: "old" if last post was created before last visit, or "" (empty) if new
+			$this->registerSelect( 'topic_old',  'IF(post_postdate<' . $this->escapeSql( YDConfig::get( 'YD_FORUM_LASTLOGINDATE' ) ) . ',"old","")' );
+
+			// TODO: register concat
+
+			// init counters cache
+			$this->_cache_totals = null;
+		}
+
+
+        /**
+         *  This method returns all topics
+         *
+         *  @param $forum_id  (optional) Forum id to search.
+         *
+         *  @returns    Array with elements
+         */
+		function getElements( $forum_id = null ){
+		
+			// check if forum_id is an array
+			if ( is_array( $forum_id ) && isset( $forum_id[ 'forum_id' ] ) && is_numeric( $forum_id[ 'forum_id' ] ) ){
+				$forum_id = intval( $forum_id[ 'forum_id' ] );
+			}
+
+			$this->reset();
+
+			if ( is_numeric( $forum_id ) ){
+
+				$this->set( 'topic_forum_id', intval( $forum_id ) );
+				$this->order( $this->getTable() . '.topic_status ASC, ' . $this->getTable() . '.topic_id ASC' );
+			}
+
+			$this->findAll();
+			return $this->getResults();
+		}
+
+
+        /**
+         *  This method returns all elements in a recorset form
+         *
+         *  @param $forum_id  (optional) Forum id to search.
+         *  @param $page      (optional) Page to retrive in set.
+         *
+         *  @returns    YDForm object
+         */
+		function getElementsAsRecordSet( $forum_id, $page = 1 ){
+		
+			return new YDRecordSet( $this->getElements( $forum_id ), $page, 20 );
+		}
+
+
+        /**
+         *  This method returns a specific element
+         *
+         *  @param $id  Topic id
+         *
+         *  @returns    Element as array
+         */
+		function getElement( $id ){
+		
+			$this->reset();
+			$this->set( 'topic_id', intval( $id ) );
+			$this->findAll();
+			return $this->getValues();
+		}
+
+
+        /**
+         *  This method returns total of topics
+         *
+         *  @returns    Total as integer
+         */
+		function getTotalTopics(){
+
+			if ( is_null( $this->_cache_totals ) ) $this->_cache_totals = $this->getTotals();
+
+			return $this->_cache_totals[ 'totaltopics' ];
+		}
+
+        /**
+         *  This method returns total of posts
+         *
+         *  @returns    Total as integer
+         */
+		function getTotalPosts(){
+
+			if ( is_null( $this->_cache_totals ) ) $this->_cache_totals = $this->getTotals();
+
+			return $this->_cache_totals[ 'totalposts' ];
+		}
+
+
+        /**
+         *  Helper method to retrieve totals
+         *
+         *  @returns    Totals as array
+         */
+		function getTotals(){
+		
+			$this->reset();
+			return $this->_db->getRecord( 'SELECT COUNT(topic_id) as totaltopics, COUNT(topic_totalreplies) as totalposts FROM ' . $this->getTable() );
+		}
+	}
+
+
+
+
+    class YDCMForum_forums extends YDDatabaseObject {
+    
+        function YDCMForum_forums() {
+        
+			// init DB object
+            $this->YDDatabaseObject();
+
+			// register database as default
+            $this->registerDatabase();
+
+			// register table for this component
+            $this->registerTable( 'YDCMForum_forums' );
+
+			// register fields
+			$this->registerKey( 'forum_id', true );
+			$this->registerField( 'forum_category_id' );
+			$this->registerField( 'forum_name' );
+			$this->registerField( 'forum_description' );
+			$this->registerField( 'forum_status' );
+			$this->registerField( 'forum_position' );
+			$this->registerField( 'forum_totaltopics' );
+			$this->registerField( 'forum_totalposts' );
+			$this->registerField( 'forum_lastpost_id' );
+
+			// init relation with category to get more information about the category
+            $rel = & $this->registerRelation( 'category', false, 'ydcmforum_categories' );
+			$rel->setLocalKey( 'forum_category_id' );
+            $rel->setForeignKey( 'category_id' );
+            $rel->setForeignVar( 'category' );
+
+			// init relation with post to get more information about the last post
+            $rel = & $this->registerRelation( 'lastpostinfo', false, 'ydcmforum_posts' );
+			$rel->setLocalKey( 'forum_lastpost_id' );
+            $rel->setForeignKey( 'post_id' );
+            $rel->setForeignVar( 'lastpostinfo' );
+
+			// init relation with user to get information about the last post user
+            $rel = & $this->registerRelation( 'lastpostauthor', false, 'ydcmuser' );
+			$rel->setLocalKey( 'post_user_id' );
+            $rel->setForeignKey( 'user_id' );
+            $rel->setForeignVar( 'lastpostauthor' );
+
+			// init relation with topics to get more information about the last post topic
+            $rel = & $this->registerRelation( 'lasttopicinfo', false, 'ydcmforum_topics' );
+			$rel->setLocalKey( 'post_topic_id' );
+            $rel->setForeignKey( 'topic_id' );
+            $rel->setForeignVar( 'lasttopicinfo' );
+
+			// register old: "old" if last post was created before last visit, or "" (empty) if new
+			$this->registerSelect( 'forum_old',  'IF(post_postdate<' . $this->escapeSql( YDConfig::get( 'YD_FORUM_LASTLOGINDATE' ) ) . ',"normalold","normal")' );
+
+			// TODO: rename to register CONCAT
+
+			$this->_elements = null;
+		}
+
+
+        /**
+         *  This method returns all elements
+         *
+         *  @param $category_id  (optional) Category to search.
+         *  @param $use_cache    (optional) Use result cache. True by default.
+         *
+         *  @returns    Elements as array
+         */
+		function getElements( $category_id = null, $use_cache = true ){
+		
+			// if we want to use cache, we must get topics from cache instead of querying db again
+			if ( $use_cache ){
+			
+				// get all forums and convert to an associative array using category_id as key
+				if ( is_null( $this->_elements ) ) $this->_elements = YDArrayUtil::convertToNested( $this->getElements( null, false ), 'forum_category_id' );
+
+				// check if category exists
+				if ( isset( $this->_elements[ intval( $category_id ) ] ) ) return $this->_elements[ $category_id ];
+				else                                                       return array();
+			}
+
+			// reset previous values		
+			$this->reset();
+
+			// check if category_id is an array
+			if ( is_array( $category_id ) && isset( $category_id[ 'category_id' ] ) && is_numeric( $category_id[ 'category_id' ] ) ){
+				$category_id = intval( $category_id[ 'category_id' ] );
+			}
+
+			// check if we want a specific category
+			if ( is_numeric( $category_id ) ){
+
+				$this->set( 'forum_category_id', intval( $category_id ) );
+				$this->order( $this->getTable() . '.forum_position ASC' );
+			}
+
+			// get elements
+			$this->findAll();
+
+			// return results
+			return $this->getResults();
+		}
+
+
+        /**
+         *  This method returns a specific element
+         *
+         *  @param $id  Category to search.
+         *
+         *  @returns    Element as array
+         */
+		function getElement( $id ){
+		
+			$this->reset();
+			$this->set( 'forum_id', intval( $id ) );
+			$this->findAll();
+			return $this->getValues();
+		}
+
+
+	}
+
+
+
+    class YDCMForum_categories extends YDDatabaseObject {
+    
+        function YDCMForum_categories() {
+        
+			// init DB object
+            $this->YDDatabaseObject();
+
+			// register database as default
+            $this->registerDatabase();
+
+			// register table for this component
+            $this->registerTable( 'YDCMForum_categories' );
+
+			// register fields
+			$this->registerKey( 'category_id', true );
+			$this->registerField( 'category_title' );
+			$this->registerField( 'category_position' );
+		}
+
+
+        /**
+         *  This method returns all elements
+         *
+         *  @returns    Elements as array
+         */
+		function getElements(){
+
+			$this->reset();
+			$this->order( $this->getTable() . '.category_position ASC' );
+			$this->findAll();
+			return $this->getResults();
+		}
+
+
+        /**
+         *  This method returns a specifi element
+         *
+         *  @param $id  Category to search.
+         *
+         *  @returns    Element as array
+         */
+		function getElement( $id ){
+
+			$this->reset();
+			$this->set( 'category_id', intval( $id ) );
+			$this->findAll();
+			return $this->getValues();
+		}
+
+
+        /**
+         *  This method creates a form for category management
+         *
+         *  @returns    Element as array
+         */
+		function & addFormNew(){
+			return $this->addFormDetails( null, false );
+		}
+
+
+        /**
+         *  Helper method to manage form handling
+         *
+         *  @param $id    Category id
+         *  @param $edit  Boolean flag the defines if we are editing or creating
+         *
+         *  @returns    YDForm element
+         */
+		function & addFormDetails( $id, $edit ){
+		
+			YDInclude( 'YDForm.php' );
+
+			$this->_form = new YDForm( 'YDCMForum_category' );
+			$this->_form->addElement( 'text', 'title', t( 'ydcmforum_categories label name' ) );
+			$this->_form->addElement( 'text', 'position', t( 'ydcmforum_categories label position' ) );
+
+			if ( $edit == true ) $this->_form->addElement( 'submit', 'editit', 'Save' );
+			else                 $this->_form->addElement( 'submit', 'addit',  'Add' );
+
+			$this->_form->addFormRule( array( & $this, '_checkcategory' ), array( $edit, $id ) );
+
+			return $this->_form;
+		}
+
+
+        /**
+         *  Internal method to check if a category already exists 
+         */
+		function _checkcategory( $values, $options ){
+
+			list( $edit, $id ) = $options;
+
+			$this->reset();
+
+			$this->set( 'title', $values[ 'title' ] );
+
+			// check if we are editing.
+			if ( $edit == true ){
+				$this->where( 'id != ' . intval( $id ) );
+			}
+
+			if ( $this->find() == 0 ) return true;
+
+			return array( 'title' => _( 'forum category title already exists' ) );
+		}
+
+
+
+        /**
+         *  This method will save a category form in db
+         *
+         *  @param $formvalues   (optional) Form values
+         *
+         *  @returns    YDForm element
+         */
+		function saveFormNew( $formvalues = null ){
+		
+			return $this->insertForm( $this->_form, array(), $formvalues );
+		}
+
+
+        /**
+         *  This method will delete a category from db
+         *
+         *  @param $category_id   Category id
+         *
+         *  @returns    YDResult object
+         */
+		function deleteElement( $category_id ){
+		
+			YDInclude( 'YDResult.php' );
+		
+			$this->reset();
+			$this->set( 'id', intval( $category_id ) );
+			$result = $this->delete();
+			
+			if ( $result ){ return YDResult::ok( t( 'forum category deleted' ), $result ); }
+			else{          return YDResult::fatal( t( 'impossible to delete forum category' ), $result ); }
+		}
+
+
+	}
+
+
+
+?>
\ No newline at end of file



From pclaerhout at mail.berlios.de  Mon Dec 18 14:41:39 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Mon, 18 Dec 2006 14:41:39 +0100
Subject: [ydf-devel] r2268 - in YDFramework2.0/trunk/examples/weblog/skins:
	default default_with_lightbox
Message-ID: <200612181341.kBIDfdPn012100@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-18 14:41:31 +0100 (Mon, 18 Dec 2006)
New Revision: 2268

Modified:
   YDFramework2.0/trunk/examples/weblog/skins/default/__std_sidebar.tpl
   YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/__std_sidebar.tpl
Log:
Added home links to the weblog templates.

Modified: YDFramework2.0/trunk/examples/weblog/skins/default/__std_sidebar.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default/__std_sidebar.tpl	2006-12-18 12:17:24 UTC (rev 2267)
+++ YDFramework2.0/trunk/examples/weblog/skins/default/__std_sidebar.tpl	2006-12-18 13:41:31 UTC (rev 2268)
@@ -2,6 +2,10 @@
 
     <ul>
 
+        <li>
+            <h2><a href="{$weblog_link}" title="{$weblog_title}">Home</a></h2>
+        </li>
+
         {if $pages}
             <li>
                 <h2>{t w="pages"}</h2>

Modified: YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/__std_sidebar.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/__std_sidebar.tpl	2006-12-18 12:17:24 UTC (rev 2267)
+++ YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/__std_sidebar.tpl	2006-12-18 13:41:31 UTC (rev 2268)
@@ -2,6 +2,10 @@
 
     <ul>
 
+        <li>
+            <h2><a href="{$weblog_link}" title="{$weblog_title}">Home</a></h2>
+        </li>
+
         {if $pages}
             <li>
                 <h2>{t w="pages"}</h2>



From pclaerhout at mail.berlios.de  Mon Dec 18 14:42:09 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Mon, 18 Dec 2006 14:42:09 +0100
Subject: [ydf-devel] r2269 - in YDFramework2.0/trunk/examples/weblog/skins:
	default default_with_lightbox
Message-ID: <200612181342.kBIDg9aN012204@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-18 14:42:08 +0100 (Mon, 18 Dec 2006)
New Revision: 2269

Modified:
   YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl
   YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl
Log:
The output of the standard php variables in the spam comments emails are now properly escaped.

Modified: YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl	2006-12-18 13:41:31 UTC (rev 2268)
+++ YDFramework2.0/trunk/examples/weblog/skins/default/comment_email_spam.tpl	2006-12-18 13:42:08 UTC (rev 2269)
@@ -41,32 +41,32 @@
 
             <h3>$_GET</h3>
             {foreach from=$smarty.get item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_POST</h3>
             {foreach from=$smarty.post item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_SERVER</h3>
             {foreach from=$smarty.server item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_COOKIE</h3>
             {foreach from=$smarty.cookies item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_ENV</h3>
             {foreach from=$smarty.env item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_SESSION</h3>
             {foreach from=$smarty.session item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             &nbsp;

Modified: YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl	2006-12-18 13:41:31 UTC (rev 2268)
+++ YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/comment_email_spam.tpl	2006-12-18 13:42:08 UTC (rev 2269)
@@ -41,32 +41,32 @@
 
             <h3>$_GET</h3>
             {foreach from=$smarty.get item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_POST</h3>
             {foreach from=$smarty.post item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_SERVER</h3>
             {foreach from=$smarty.server item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_COOKIE</h3>
             {foreach from=$smarty.cookies item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_ENV</h3>
             {foreach from=$smarty.env item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             <h3>$_SESSION</h3>
             {foreach from=$smarty.session item="item" key="key"}
-                <p><b>{$key}</b><br/>{$item}</p>
+                <p><b>{$key}</b><br/>{$item|htmlentities}</p>
             {/foreach}
 
             &nbsp;
@@ -79,4 +79,5 @@
 
 </body>
 
-</html>
\ No newline at end of file
+</html>
+



From ximian at mail.berlios.de  Mon Dec 18 14:53:36 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Mon, 18 Dec 2006 14:53:36 +0100
Subject: [ydf-devel] r2270 -
	YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements
Message-ID: <200612181353.kBIDraSW013858@sheep.berlios.de>

Author: ximian
Date: 2006-12-18 14:53:23 +0100 (Mon, 18 Dec 2006)
New Revision: 2270

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php
Log:
new feature on captcha form element: ist's possible to use a refresh button to force image renew. Not used by default.

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php	2006-12-18 13:42:08 UTC (rev 2269)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFormElements/YDFormElement_Captcha.php	2006-12-18 13:53:23 UTC (rev 2270)
@@ -57,13 +57,16 @@
 
 			// text box position
 			$this->_textPosition_left = false;
+			
+			// refresh button. not added by default
+			$this->_button = null;
         }
 
 
         /**
          *	This function set text element position
          *
-         *	@param $onleft		Boolean that defines if text is before image (TRUE) or after image (FALSE)
+         *	@param $onleft		Boolean that defines if text is before image (TRUE: on left) or after image (FALSE: on right)
          */
         function setTextPosition( $onleft = true ) {
 			$this->_textPosition_left = $onleft;
@@ -71,6 +74,23 @@
 
 
         /**
+         *	This function adds a button to renew the image. Useful when image is not clear.
+         */
+        function & addRefreshButton( $caption = null ) {
+
+			if ( ! is_string( $caption ) ) $caption = 'Get another image';
+
+			include_once( YD_DIR_HOME_CLS . '/YDFormElements/YDFormElement_Button.php');
+
+			$this->_button = new YDFormElement_Button( $this->_form, $this->_name . '_refreshbutton', $caption );
+			$this->_button->setAttribute( 'onclick', "document.getElementById('" . $this->getAttribute( 'id' ) . "_captcha').src = document.getElementById('" . $this->getAttribute( 'id' ) . "_captcha').src.split('&id=')[0] + '&id=' + Math.random();" );
+			$this->_button->setAttribute( 'style',   "vertical-align: middle" );
+
+			return $this->_button;
+		}
+
+
+        /**
          *	This function will return the element as HTML.
          *
          *	@returns	The form element as HTML text.
@@ -79,18 +99,21 @@
 
             // Create the list of attributes
             $attribs = array(
-                'type' => 'text', 'name' => $this->_form . '_' . $this->_name, 'value' => $this->_value, 'size' => 8
+                'type' => 'text', 'name' => $this->_form . '_' . $this->_name, 'value' => $this->_value, 'size' => 7
             );
             $attribs = array_merge( $this->_attributes, $attribs );
 
             // Get the HTML
-			$img = '<img width="150" height="40" src="' . $this->_url . '" style="vertical-align: middle"/>';
+			$img = '<img id="' . $this->getAttribute( 'id' ) . '_captcha" width="200" height="40" src="' . $this->_url . '" style="vertical-align: middle"/>';
 			$txt = '<input' . YDForm::_convertToHtmlAttrib( $attribs ) . ' />';
 
+			if ( is_null( $this->_button ) ) $button = '';
+			else                             $button = $this->_button->toHTML();
+
 			if ( $this->_textPosition_left ){
-				return $txt . ' ' . $img;
+				return $txt . ' ' . $img . ' ' . $button;
 			}else{
-				return $img . ' ' . $txt;
+				return $img . ' ' . $txt . ' ' . $button;
 			}
         }
 



From rene at reneschmidt.de  Mon Dec 18 17:16:25 2006
From: rene at reneschmidt.de (Rene Schmidt)
Date: Mon, 18 Dec 2006 17:16:25 +0100
Subject: [ydf-devel] Encoding issues
Message-ID: <4586BED9.3020206@reneschmidt.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello,

I often stumble across situations where two encodings bite each other
while developing. For example:

User enters some text in a form field, for example "german umlauts ???".
User's desktop encoding is ISO-8859-1.

Data is to be verified by YDForm and its friends,
YDValidateRule::regex() for example.

My source is written in UTF-8 (no I don't want to check and switch
everytime) and the validation regex is "/^[a-z ???]+$/".

The pattern WILL NOT match because the data is ISO-8859-1 and the regex
is UTF-8 while they seem to be the same.

This is making life hard, sometimes at least.

My questions: is this behaviour intended? If not, where should
conversion be done? And if it is intended, should not there be at least
a warning that data and pattern encoding do not match?

TIA for your opinion :)
- --
Rene Schmidt
Berater f?r Web-Entwicklung und eCommerce
Lange Str. 15, 21614 Buxtehude
Tel. 04161.558363 - http://www.reneschmidt.de/

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.3 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFFhr7Za8BQAFpXn2cRAoBvAKDaZEj/+C57H82CN2eaovObzV5kDgCfeOGV
3jObDZmDLs5g0jyd5zZsnVE=
=aQZo
-----END PGP SIGNATURE-----


From pclaerhout at mail.berlios.de  Tue Dec 19 15:43:40 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Tue, 19 Dec 2006 15:43:40 +0100
Subject: [ydf-devel] r2271 - in YDFramework2.0/trunk:
	YDFramework2/addons/YDAkismet examples/weblog/manage
Message-ID: <200612191443.kBJEheAi006208@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-19 15:43:40 +0100 (Tue, 19 Dec 2006)
New Revision: 2271

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDAkismet/YDAkismet.php
   YDFramework2.0/trunk/examples/weblog/manage/config.php
   YDFramework2.0/trunk/examples/weblog/manage/config.tpl
Log:
Added test option to verify if the connection with the Akismet service is working or not.

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDAkismet/YDAkismet.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDAkismet/YDAkismet.php	2006-12-18 13:53:23 UTC (rev 2270)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDAkismet/YDAkismet.php	2006-12-19 14:43:40 UTC (rev 2271)
@@ -37,7 +37,7 @@
         /**
          *	This is the class constructor for the YDAkismet module.
          */
-        function YDAkismet( $blog_url, $api_key ) {
+        function YDAkismet( $blog_url, $api_key, $debug=false ) {
 
             // Initialize the parent class
             $this->YDAddOnModule();
@@ -51,6 +51,8 @@
             // Set the variables
             $this->blog_url = $blog_url;
             $this->api_key  = $api_key;
+            $this->debug    = $debug;
+            $this->error    = null;
 
         }
 
@@ -187,10 +189,20 @@
             $client = new YDHttpClient( $host, 80 );
             $client->setDebug( false );
             $client->user_agent = YD_FW_NAME . '/' . YD_FW_VERSION . ' | ' . $this->getClassName() . '/' . $this->_version;
+            if ( $this->debug ) {
+                echo( 'HTTP request: ' . $host . $url . '<br/>' );
+            }
             $result = @ $client->post( $url, $data );
             if ( $result == false ) {
+                $this->error = $client->getError();
+                if ( $this->debug ) {
+                    echo( 'HTTP request failed.<br/>' );
+                }
                 return null;
             } else {
+                if ( $this->debug ) {
+                    echo( 'HTTP request OK.<br/>' );
+                }
                 return @ $client->getContent();
             }
         }

Modified: YDFramework2.0/trunk/examples/weblog/manage/config.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/config.php	2006-12-18 13:53:23 UTC (rev 2270)
+++ YDFramework2.0/trunk/examples/weblog/manage/config.php	2006-12-19 14:43:40 UTC (rev 2271)
@@ -151,6 +151,46 @@
 
         }
 
+        // Action to test Akismet
+        function actionTestAkismet() {
+            echo( '<html>' );
+            echo( '<head>' );
+            echo( '    <title>Testing Akismet</title>' );
+            echo( '    <link rel="stylesheet" type="text/css" href="manage.css" />' );
+            echo( '</head>' );
+            echo( '<body>' );
+            echo( '    <p class="title">Testing Akismet service...</p>' );
+            if ( is_null( $this->weblog->akismet ) ) {
+                echo( '&nbsp;<br/><span style="font-weight:bold;color:red;">ERROR: No akismet key is specified.</span>' );
+            } else {
+                echo( 'Akismet key used for this request: ' . YDConfig::get( 'akismet_key', '' ) . '<br/>' );
+                echo( 'Sending test request to Akismet...<br/>' );
+                $this->weblog->akismet->debug = true;
+                $result = $this->weblog->akismet->checkComment(
+                    'Fuck%XXKEVDJX!!http://porn.z0rder.com/anal-porn.htm [url= http://porn.z0rder.com/anal-porn.htm ]http://porn.z0rder.com/anal-porn.htm[/url]',
+                    'PCNFZUII',
+                    '',
+                    '',
+                    '80.77.80.187',
+                    ''
+                );
+                if ( is_null( $this->weblog->akismet->error ) ) {
+                    if ( $result == NULL || $result === false ) {
+                        echo( 'Test request was marked as not spam.<br/>' );
+                    } else {
+                        echo( 'Test request was marked as spam.<br/>' );
+                    }
+                    echo( '&nbsp;<br/><span style="font-weight:bold;color:green;">Akismet connectivity is working properly</span>' );
+                } else {
+                    echo( '&nbsp;<br/><span style="font-weight:bold;color:red;">ERROR: ' . $this->weblog->akismet->error . '</span>' );
+                }
+            }
+            echo( '&nbsp;<br/>&nbsp;<br/>' );
+            echo( '[ <a href="" onClick="window.close();">close</a> ]' );
+            echo( '</body>' );
+            echo( '</html>' );
+        }
+
         // Function to get the configuration
         function getConfig() {
 

Modified: YDFramework2.0/trunk/examples/weblog/manage/config.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/config.tpl	2006-12-18 13:53:23 UTC (rev 2270)
+++ YDFramework2.0/trunk/examples/weblog/manage/config.tpl	2006-12-19 14:43:40 UTC (rev 2271)
@@ -142,7 +142,12 @@
         </tr>
         <tr onMouseOver="YDRowMouseOver(this);" onMouseOut="YDRowMouseOut(this);">
             <td class="adminRowL">{t w="cfg_akismet_key"}</td>
-            <td class="adminRowL">{$config.akismet_key|default:'-'}</td>
+            <td class="adminRowL">
+                {$config.akismet_key|default:'-'}
+                {if $config.akismet_key}
+                    [ <a href="" onClick="window.open('{$YD_SELF_SCRIPT}?do=TestAkismet','TestAkismet','width=640,height=360,scrollbars=yes,toolbar=no,location=no');return false;">test</a> ]
+                {/if}
+            </td>
         </tr>
         <tr onMouseOver="YDRowMouseOver(this);" onMouseOut="YDRowMouseOut(this);">
             <td class="adminRowL">{t w="cfg_comment_interval"}</td>



From ximian at mail.berlios.de  Thu Dec 21 01:21:03 2006
From: ximian at mail.berlios.de (ximian at mail.berlios.de)
Date: Thu, 21 Dec 2006 01:21:03 +0100
Subject: [ydf-devel] r2272 -
	YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha
Message-ID: <200612210021.kBL0L3YV010072@sheep.berlios.de>

Author: ximian
Date: 2006-12-21 01:20:58 +0100 (Thu, 21 Dec 2006)
New Revision: 2272

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/YDCaptcha.php
Log:
on YDCaptcha:
  * feature: it's now possible to define the total background lines
  * feature: deleted identical characters and added standard symbols, eg, # $ % @

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/YDCaptcha.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/YDCaptcha.php	2006-12-19 14:43:40 UTC (rev 2271)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDCaptcha/YDCaptcha.php	2006-12-21 00:20:58 UTC (rev 2272)
@@ -56,11 +56,15 @@
 			$fonts = array( $fdir . 'VeraBd.ttf', $fdir . 'VeraIt.ttf', $fdir . 'Vera.ttf');
 
 			// create image object
-			$this->_img = new PhpCaptcha( $fonts, 150, 40 );
+			$this->_img = new PhpCaptcha( $fonts, 200, 40 );
 			
 			$this->_img->DisplayShadow( false );
 			$this->_img->UseColour( false );
-			$this->_img->SetNumChars( 4 );
+			$this->_img->SetNumChars( 5 );
+
+			// add simbols ;) 
+			// don't add possible character problems for user, eg, l <--> 1 (lower L or number ONE?), 0 <--> O (ZERO OR upper O?)
+			$this->_img->SetCharSet( "a-h,!,j-k,#,&,%,$,m-n,@,p-r,2-4,6,?,?,8-9,t-w,y-z,#,&,%,$,A-H,!,J-K,#,&,%,$,M-N,@,P-R,T-W,Y-Z,2-4,6,?,?,8-9" );
         }
 
 
@@ -75,6 +79,16 @@
 
 
         /**
+         *	This function set the number of interference lines
+         *
+         *	@param $num		Number of lines
+         */
+        function setNumLines( $num ){
+			$this->_img->setNumLines( $num );
+		}
+
+
+        /**
          *	This function defines use of shadows
          *
          *	@param $flag		True or false boolean



From pclaerhout at mail.berlios.de  Wed Dec 27 11:47:33 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Wed, 27 Dec 2006 11:47:33 +0100
Subject: [ydf-devel] r2273 -
	YDFramework2.0/trunk/YDFramework2/addons/YDAkismet
Message-ID: <200612271047.kBRAlXP7003887@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-27 11:47:33 +0100 (Wed, 27 Dec 2006)
New Revision: 2273

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDAkismet/YDAkismet.php
Log:
The debug output of YDAkismet now also shows the IP address of the akismet server.

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDAkismet/YDAkismet.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDAkismet/YDAkismet.php	2006-12-21 00:20:58 UTC (rev 2272)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDAkismet/YDAkismet.php	2006-12-27 10:47:33 UTC (rev 2273)
@@ -190,6 +190,7 @@
             $client->setDebug( false );
             $client->user_agent = YD_FW_NAME . '/' . YD_FW_VERSION . ' | ' . $this->getClassName() . '/' . $this->_version;
             if ( $this->debug ) {
+                echo( 'IP Adress Akismet: ' . gethostbyname( $host ) . '<br/>' );
                 echo( 'HTTP request: ' . $host . $url . '<br/>' );
             }
             $result = @ $client->post( $url, $data );



From pclaerhout at mail.berlios.de  Wed Dec 27 11:48:21 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Wed, 27 Dec 2006 11:48:21 +0100
Subject: [ydf-devel] r2274 - in YDFramework2.0/trunk/examples/weblog: .
	include
Message-ID: <200612271048.kBRAmLMH003958@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-27 11:48:19 +0100 (Wed, 27 Dec 2006)
New Revision: 2274

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
   YDFramework2.0/trunk/examples/weblog/item.php
Log:
Changed the safehtml filter to the API class instead when adding a comment.

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-27 10:47:33 UTC (rev 2273)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-27 10:48:19 UTC (rev 2274)
@@ -1,1048 +1,1052 @@
-<?php
-
-    // Function to save the configuration
-    function YDWeblogSaveConfig( $values ) {
-
-        // Remove some unneeded values
-        unset( $values['name'] );
-        unset( $values['email'] );
-        unset( $values['password'] );
-
-        // Add some default ones
-        if ( ! isset( $values['weblog_entries_fp'] ) ) {
-            $values['weblog_entries_fp'] = 5;
-        }
-        if ( ! isset( $values['email_new_comment'] ) ) {
-            $values['email_new_comment'] = true;
-        }
-        if ( ! isset( $values['use_cache'] ) ) {
-            $values['use_cache'] = false;
-        }
-        if ( ! isset( $values['max_syndicated_items'] ) ) {
-            $values['max_syndicated_items'] = 20;
-        }
-        if ( ! isset( $values['include_debug_info'] ) ) {
-            $values['include_debug_info'] = 0;
-        }
-        if ( ! isset( $values['dflt_is_draft'] ) ) {
-            $values['dflt_is_draft'] = false;
-        }
-        if ( empty( $values['db_pass'] ) ) {
-            $values['db_pass'] = YDConfig::get( 'db_pass', '' );
-        }
-
-        // Construct the new config text
-        $cfg = '<?php' . "\n\n";
-        $cfg .= '    // Do not edit this file manually!' . "\n";
-        $cfg .= '    // Only edit this file using the admin tools!' . "\n\n";
-
-        // Loop over the config values
-        foreach ( $values as $key=>$val ) {
-
-            // Ignore items starting with an underscore
-            if ( substr( $key, 0, 1 ) != '_' ) {
-
-                // Escape strings
-                $key = str_replace( "'", "\\'", $key );
-                $val = str_replace( "'", "\\'", $val );
-
-                // Don't enclose numeric values with quotes
-                if ( is_bool( $val ) ) {
-                    $val = ( $val ) ? 'true' : 'false';
-                    $cfg .= "    YDConfig::set( '" . $key . "', " . $val . " );\n";
-                } elseif ( is_numeric( $val ) ) {
-                    $cfg .= "    YDConfig::set( '" . $key . "', " . $val . " );\n";
-                } else {
-                    $cfg .= "    YDConfig::set( '" . $key . "', '" . $val . "' );\n";
-                }
-            }
-        }
-        $cfg .= "\n" . '?>';
-
-        // Open the config file
-        $f = fopen( dirname( __FILE__ ) . '/config.php', 'w' );
-        fwrite( $f, $cfg );
-        fclose( $f );
-
-        // Set the right permissions
-        //@chmod( dirname( __FILE__ ) . '/config.php', 0700 );
-
-        // Create a .htaccess file if needed
-        $htaccessPath = dirname( dirname( __FILE__ ) ) . '/.htaccess';
-        if ( ! is_file( $htaccessPath ) ) {
-
-            // The htaccess data
-            $data = 'RewriteEngine on' . YD_CRLF;
-            $data .= 'Options +FollowSymlinks' . YD_CRLF;
-            $data .= 'RewriteRule ^item_([0-9]+).php?$ item.php?id=$1 [L]' . YD_CRLF;
-            $data .= 'RewriteRule ^page_([0-9]+).php?$ page.php?id=$1 [L]' . YD_CRLF;
-            $data .= 'RewriteRule ^category_([0-9]+).php?$ category.php?id=$1 [L]' . YD_CRLF;
-            $data .= 'RewriteRule ^link_([0-9]+).php?$ link.php?id=$1 [L]' . YD_CRLF;
-            $data .= 'RewriteRule ^image/(.*) item_gallery.php?id=$1 [L]' . YD_CRLF;
-
-            // Open the config file
-            $f = fopen( $htaccessPath, 'w' );
-            fwrite( $f, $data );
-            fclose( $f );
-
-            // Set the right permissions
-            //@chmod( $htaccessPath, 0700 );
-
-        }
-
-    }
-
-    // Function to format a string with list values
-    function YDFormatStringWithListValues( $string ) {
-        $string = str_replace( ';', ',', $string );
-        $string = explode( ',', $string );
-        foreach ( $string as $k=>$v ) {
-            if ( trim( $v ) == '' ) {
-                unset( $string[$k] );
-            } else {
-                $string[$k] = trim( $v );
-            }
-        }
-        return implode( ', ', $string );
-    }
-
-    // Class defining our weblog API
-    class YDWeblogAPI extends YDBase {
-
-        // Class constructor
-        function YDWeblogAPI() {
-
-            // Initialize the parent
-            $this->YDBase();
-
-            // Get the database connection
-            $this->db = YDDatabase::getInstance(
-                'mysql',
-                YDConfig::get( 'db_name', 'YDWeblog' ), YDConfig::get( 'db_user', 'root' ),
-                YDConfig::get( 'db_pass', '' ), YDConfig::get( 'db_host', 'localhost' )
-            );
-
-            // Get a link to the database metadata
-            $this->dbmeta = new YDDatabaseMetaData( $this->db );
-
-            // Upgrade the schema if needed
-            $this->upgradeSchemaIfNeeded();
-
-            // The array that will hold the image metadata
-            $this->imagemetadata = null;
-
-            // Delete spam comments older than 7 days
-            $sql = 'DELETE FROM #_comments WHERE is_spam = 1 AND created < (unix_timestamp()-604800)';
-            $this->db->executeSql( $sql );
-
-            // Delete the old IP numbers from spam check
-            $comment_interval = YDConfig::get( 'comment_interval', 10 );
-            if ( $comment_interval != '' && is_numeric( $comment_interval ) ) {
-                $sql = 'DELETE FROM #_spamcheck WHERE lastvisit < (unix_timestamp()-' . $comment_interval . ')';
-                $this->db->executeSql( $sql );
-            }
-
-            // Check against akismet if a key is there
-            if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
-
-                // Include the YDAkismet addon
-                include_once( YD_DIR_HOME_ADD . '/YDAkismet/YDAkismet.php' );
-
-                // Get the URL of the weblog
-                $weblog_url = dirname( YDRequest::getCurrentUrl( true ) ) . '/';
-
-                // Initialize YDAkismet
-                $this->akismet = new YDAkismet( $weblog_url, YDConfig::get( 'akismet_key', '' ) );
-
-            } else {
-
-                // No akismet
-                $this->akismet = null;
-
-            }
-
-        }
-
-        // Get the schema version
-        function getSchemaVersion() {
-
-            // Create the schemaversion table if it doesn't exists
-            if ( ! $this->dbmeta->tableExists( '#_schemaversion' ) ) {
-                $sql = 'CREATE TABLE #_schemaversion (installed INT(11), version INT (11))';
-                $this->db->executeSql( $sql );
-            }
-
-            // Check the schema version
-            $schema_version = $this->db->getValue( 'select version from #_schemaversion order by installed desc, version desc' );
-
-            // Return the schema version
-            return ( $schema_version === false  ) ? 0 : intval( $schema_version );
-
-        }
-
-        // Get the full schema information
-        function getFullSchemaVersion() {
-            $this->getSchemaVersion();
-            return $this->db->getRecord( 'select installed, version from #_schemaversion order by installed desc, version desc' );
-        }
-
-        // Function to set the schema version
-        function setSchemaVersion( $version ) {
-            $values = array();
-            $values['installed'] = time();
-            $values['version'] = $version;
-            $this->db->executeInsert( '#_schemaversion', $values );
-        }
-
-        // Upgrade the schema if needed
-        function upgradeSchemaIfNeeded() {
-
-            // The current weblog schema version
-            $current_schema = 7;
-
-            // Get the schema version
-            $installed_schema = $this->getSchemaVersion();
-
-            // Check if we have the required schema version
-            if ( $installed_schema < $current_schema ) {
-
-                // Add any missing comments fields
-                $fields = $this->dbmeta->getFields( '#_comments' );
-                $this->executeIfMissing( 'useragent', $fields, 'ALTER TABLE #_comments ADD useragent varchar(255) AFTER userip' );
-                $this->executeIfMissing( 'userrequrl', $fields, 'ALTER TABLE #_comments ADD userrequrl varchar(255) AFTER useragent' );
-                $this->executeIfMissing( 'is_spam', $fields, 'ALTER TABLE #_comments ADD is_spam TINYINT(1) DEFAULT "0" NOT NULL AFTER comment' );
-
-                // Add any missing items fields
-                $fields = $this->dbmeta->getFields( '#_items' );
-                $this->executeIfMissing( 'body_more', $fields, 'ALTER TABLE #_items ADD body_more LONGTEXT AFTER body' );
-                $this->executeIfMissing( 'is_draft', $fields, 'ALTER TABLE #_items ADD is_draft TINYINT(1) DEFAULT "0" NOT NULL AFTER num_comments' );
-                $this->executeIfPresent( 'allow_comments', $fields, 'ALTER TABLE #_items DROP allow_comments' );
-                $this->executeIfPresent( 'auto_close', $fields, 'ALTER TABLE #_items DROP auto_close' );
-
-                // Add any missing pages field
-                $fields = $this->dbmeta->getFields( '#_pages' );
-                $this->executeIfMissing( 'is_draft', $fields, 'ALTER TABLE #_pages ADD is_draft TINYINT(1) DEFAULT "0" NOT NULL AFTER body' );
-
-                // Get the list of indexes for the items table
-                $indexes = $this->dbmeta->getIndexes( '#_items' );
-                $this->executeIfMissing( 'is_draft', $indexes, 'ALTER TABLE #_items ADD INDEX is_draft (is_draft)' );
-
-                // Get the list of indexes for the pages table
-                $indexes = $this->dbmeta->getIndexes( '#_pages' );
-                $this->executeIfMissing( 'is_draft', $indexes, 'ALTER TABLE #_pages ADD INDEX is_draft (is_draft)' );
-
-                // Get the list of indexes for the users table
-                $indexes = $this->dbmeta->getIndexes( '#_users' );
-                $this->executeIfPresent( 'email', $indexes, 'ALTER TABLE #_users DROP INDEX email' );
-                $this->executeIfMissing( 'name',  $indexes, 'ALTER TABLE #_users ADD UNIQUE name (name)' );
-
-                // Fix the shemaversion table if needed
-                $this->db->executeSql( 'ALTER TABLE #_schemaversion CHANGE installed installed INT(11)' );
-                $this->db->executeSql( 'UPDATE #_schemaversion SET installed = unix_timestamp() WHERE installed = 0' );
-
-                // Drop the statistics tables
-                $this->db->executeSql( 'DROP TABLE IF EXISTS #_statistics' );
-                $this->db->executeSql( 'DROP TABLE IF EXISTS #_statistics_init' );
-
-                // Create the image_metadata table
-                if ( ! $this->dbmeta->tableExists( '#_imagemetadata' ) ) {
-                    $this->db->executeSql(
-                          'CREATE TABLE #_imagemetadata ('
-                        . '  id int(11) NOT NULL auto_increment,'
-                        . '  img_path varchar(255) NOT NULL default \'\','
-                        . '  title varchar(255) default NULL,'
-                        . '  description longtext,'
-                        . '  created int(11) default NULL,'
-                        . '  modified int(11) default NULL,'
-                        . '  PRIMARY KEY  (id),'
-                        . '  UNIQUE KEY img_path (img_path)'
-                        . ')'
-                    );
-                }
-
-                // Create the spamcheck table
-                if ( ! $this->dbmeta->tableExists( '#_spamcheck' ) ) {
-                    $this->db->executeSql(
-                          'CREATE TABLE #_spamcheck ('
-                        . '  id int(11) NOT NULL auto_increment,'
-                        . '  userip varchar(20) default NULL,'
-                        . '  lastvisit int(11) default NULL,'
-                        . '  PRIMARY KEY  (id),'
-                        . '  UNIQUE KEY userip (userip)'
-                        . ')'
-                    );
-                }
-
-                // Update the schema information
-                $this->setSchemaVersion( $current_schema );
-
-            }
-
-        }
-
-        // Function to execute SQL if the item is missing
-        function executeIfMissing( $needle, $haystack, $sql ) {
-            if ( ! in_array( $needle, $haystack ) ) {
-                $this->db->executeSql( $sql );
-            }
-        }
-
-        // Function to execute SQL if the item is not missing
-        function executeIfPresent( $needle, $haystack, $sql ) {
-            if ( in_array( $needle, $haystack ) ) {
-                $this->db->executeSql( $sql );
-            }
-        }
-
-        // Function to auto add some records to an item
-        function _fixItem( $item, $order='created desc, title' ) {
-
-            // Return false if no item
-            if ( ! $item ) {
-                return $item;
-            }
-
-            // Get the item indexes for the indicated weblog (cached to minimize the number of SQL queries)
-            $cacheName = 'YD_CACHE_WEBLOG_ITEMIDS_' . md5( strtolower( $order ) );
-            if ( ! isset( $GLOBALS[ $cacheName ] ) ) {
-                $sql = $this->_prepareQuery( 'SELECT id FROM #_items', $order );
-                $item_ids = $this->db->getValuesByName( $sql, 'id' );
-                $GLOBALS[ $cacheName ] = $item_ids;
-            }
-
-            // Get the ID of the previous and the next item
-            $pos = array_search( $item['id'], $GLOBALS[ $cacheName ] );
-            $item['newer_id'] = ( $pos == 0 ) ? false : $GLOBALS[ $cacheName ][$pos-1] ;
-            $item['older_id'] = ( $pos == sizeof( $GLOBALS[ $cacheName ] )-1 ) ? false : $GLOBALS[ $cacheName ][$pos+1] ;
-
-            // Add the year, month and yearmonth fields
-            $item['yearmonth'] = ucwords( strftime( '%B %Y', $item['created'] ) );
-            $item['month']     = ucwords( strftime( '%B',    $item['created'] ) );
-            $item['year']      = ucwords( strftime( '%Y',    $item['created'] ) );
-
-            // Get the list of images related to this item
-            $imgPath = dirname( __FILE__ ) . '/../' . YDConfig::get( 'dir_uploads', 'uploads' ) . '/item_' . $item['id'] .'/';
-
-            // Get the list of pictures if any
-            if ( is_dir( $imgPath ) ) {
-
-                // Get a handle to the directory
-                $dir = new YDFSDirectory( dirname( __FILE__ ) . '/../' . YDConfig::get( 'dir_uploads', 'uploads' ) . '/item_' . $item['id'] .'/' );
-
-                // Get the list of files
-                $images = $dir->getContents( array( '!index.html', '!index.php', '!m_*.*', '!s_*.*' ), null, array( 'YDFSImage' ) );
-
-                // Make the relative path for each file
-                foreach ( $images as $key=>$image ) {
-
-                    // Generate the thumbnails if not there yet
-                    if ( ! is_file( $dir->getAbsolutePath() . '/s_' . $image->getBasename() ) ) {
-                        $image->saveThumbnail( 48, 48, $dir->getAbsolutePath() . '/s_' . $image->getBasename() );
-                    }
-                    if ( ! is_file( $dir->getAbsolutePath() . '/m_' . $image->getBasename() ) ) {
-                        $image->saveThumbnail( 100, 100, $dir->getAbsolutePath() . '/m_' . $image->getBasename() );
-                    }
-
-                    // Set the relative path
-                    $dir_uploads = dirname( __FILE__ ) . '/../' . YDConfig::get( 'dir_uploads', 'uploads' );
-                    $dir_uploads = new YDFSDirectory( $dir_uploads );
-                    $image->relative_path = str_replace( $dir_uploads->getAbsolutePath(), '', $image->getAbsolutePath() );
-
-                    // Update the backslashes
-                    $image->relative_path = ltrim( str_replace( '\\', '/', $image->relative_path ), '/' );
-
-                    // Merge the title and description if any
-                    $image = $this->getItemImageMetaData( $image );
-
-                    // Create the full title, including item title, image title and description if any
-                    $image->full_description = $item['title'] . ' &raquo; ' . $image->title;
-                    if ( $image->description ) {
-                        $image->full_description .= '<p class="img_description">'
-                                                 . YDTemplate_modifier_bbcode( $image->description ) . '</p>';
-                    }
-                    $image->full_description_html = htmlspecialchars( $image->full_description, ENT_QUOTES );
-
-                    // Make links to the thumbnails
-                    $image->relative_path_s = dirname( $image->relative_path ) . '/s_' . basename( $image->relative_path );
-                    $image->relative_path_m = dirname( $image->relative_path ) . '/m_' . basename( $image->relative_path );
-
-                    // Add the thumbnails as objects
-                    $image->relative_path_s_obj = new YDFSImage( $dir_uploads->getAbsolutePath() . '/' . $image->relative_path_s );
-                    $image->relative_path_m_obj = new YDFSImage( $dir_uploads->getAbsolutePath() . '/' . $image->relative_path_m );
-
-                    // Update the original image
-                    $images[$key] = $image;
-
-                }
-
-                // Add it to the item
-                $item['images'] = $images;
-
-            } else {
-
-                // No images for this item
-                $item['images'] = array();
-
-            }
-
-            // Fix the image paths
-            if( strtolower( basename( dirname( YD_SELF_FILE ) ) ) != 'manage' ) {
-                $uploads = YDConfig::get( 'dir_uploads', 'uploads' );
-                $item['body'] = str_replace( '../' . $uploads, $uploads, $item['body'] );
-                $item['body_more'] = str_replace( '../' . $uploads, $uploads, $item['body_more'] );
-            }
-
-            // Get the count of images
-            $item['num_images'] = sizeof( $item['images'] );
-
-            // Return the fixed item
-            return $item;
-
-        }
-
-        // Fix a list of items
-        function _fixItems( $items, $order='created desc, title' ) {
-            foreach ( $items as $key=>$item ) {
-                $items[$key] = $this->_fixItem( $item, $order );
-            }
-            return $items;
-        }
-
-        // Function to initialize image metadata
-        function initImageMetaData() {
-
-            // Get the image metadata if not there yet
-            if ( is_null( $this->imagemetadata ) ) {
-                $this->imagemetadata = $this->db->getRecords( 'SELECT * FROM #_imagemetadata' );
-                $this->imagemetadata = YDArrayUtil::convertToNested( $this->imagemetadata, 'img_path' );
-                foreach ( $this->imagemetadata as $key=>$val ) {
-                    $this->imagemetadata[$key] = $val[0];
-                }
-            }
-
-        }
-
-        // Get the title and description for an item image
-        function getItemImageMetaData( $image ) {
-
-            // Initialize the image data
-            $this->initImageMetaData();
-
-            // Start with the default settings
-            $image->title = $image->getBasenameNoExt();
-            $image->description = '';
-
-            // Add the image data if any
-            if ( isset( $this->imagemetadata[ $image->relative_path ] ) ) {
-                $image->title = $this->imagemetadata[ $image->relative_path ]['title'];
-                $image->description = $this->imagemetadata[ $image->relative_path ]['description'];
-            }
-
-            // Return the image metadata
-            return $image;
-
-        }
-
-        // Update the image data for an item in the database
-        function setItemImageMetaData( $item, $data ) {
-            $values = $data;
-            $values['img_path'] = $item;
-            $result = $this->_executeUpdate( '#_imagemetadata', $values, 'img_path = ' . $this->str( $item ) );
-            if ( $result == '0' ) {
-                $result = $this->_executeInsert( '#_imagemetadata', $values );
-            }
-            return $result;
-        }
-
-        // Function to delete the image data for an item in the database
-        function removeImageMetaData( $image ) {
-            $sql = 'DELETE FROM #_imagemetadata WHERE img_path = ' . $this->str( $image );
-            return $this->db->executeSql( $sql );
-        }
-
-        // Function to get a single item
-        function getItem( $where ) {
-            $result = $this->getItems( 1, 0, 'created desc, title', $where );
-            return ( $result && sizeof( $result ) == 1 ) ? $result[0] : $result;
-        }
-
-        // Get the non draft items
-        function getPublicItems( $limit=-1, $offset=-1, $order='created desc, title', $where='AND is_draft = 0' ) {
-            return $this->getItems( $limit, $offset, $order, $where );
-        }
-
-        // Function to get the items of the weblog
-        function getItems( $limit=-1, $offset=-1, $order='created desc, title', $where='' ) {
-            $sql = 'SELECT i.id, i.category_id, i.title, i.body, i.body_more, i.num_comments, i.created, i.modified, '
-                 . 'i.is_draft, '
-                 . 'c.title as category, u.email as user_email, u.name as user_name FROM #_items i, #_categories c, '
-                 . '#_users u WHERE i.category_id = c.id AND i.user_id = u.id ';
-            $sql = $this->_prepareQuery( $sql . $where, $order );
-            return $this->_fixItems( $this->db->getRecords( $sql, $limit, $offset ) );
-        }
-
-        // Get related items
-        function getRelatedItemsByItem( $limit, $item ) {
-
-            // Get the items from the same category
-            $items = $this->getItems(
-                -1, -1, 'created desc, title', 'AND is_draft = 0 AND i.category_id = '
-              . $this->str( $item['category_id'] ) . ' and i.id <> ' . $this->str( $item['id'] )
-            );
-
-            // Shuffle the items
-            shuffle( $items );
-
-            // Get the right rows
-            $items = array_slice( $items, 0, $limit );
-
-            // Sort them by date
-            $sorted = array();
-            foreach ( $items as $key=>$item ) {
-                $sorted[ $key ] = intval( $item['created'] );
-            }
-            sort( $sorted );
-
-            // Rearrange the array
-            $sorted_items = array();
-            foreach ( $sorted as $key=>$date ) {
-                array_push( $sorted_items, $items[ $key ] );
-            }
-
-            // Return the items
-            return array_values( $sorted_items );
-
-        }
-
-        // Get a publc item by it's ID
-        function getPublicItemByID( $item_id ) {
-            return $this->getItem( 'AND is_draft = 0 AND i.id = ' . $this->str( $item_id ) );
-        }
-
-        // Get an item by it's ID
-        function getItemById( $item_id ) {
-            return $this->getItem( 'AND i.id = ' . $this->str( $item_id ) );
-        }
-
-        // Add an item
-        function addItem( $values ) {
-            return $this->_executeInsert( '#_items', $values );
-        }
-
-        // Update an item
-        function updateItem( $values ) {
-            unset( $values['user_id'] );
-            return $this->db->executeUpdate( '#_items', $values, 'id = ' . $this->str( $values['id'] ) );
-        }
-
-        // Delete an item
-        function deleteItem( $item_id ) {
-            $sql = $this->_prepareQuery( 'DELETE FROM #_comments WHERE item_id = ' . $this->str( $item_id ) );
-            $this->db->executeSql( $sql );
-            return $this->_deleteFromTableUsingID( '#_items', $item_id );
-        }
-
-        // Get the comments for an item
-        function getComments( $item_id=null, $order='created', $limit=-1, $offset=-1, $public_only=false, $spam_only=false ) {
-            $query = 'SELECT c.id as id, c.item_id as item_id, c.username as username, c.useremail as useremail, c.userwebsite as userwebsite, c.userip as userip, c.useragent as useragent, c.userrequrl as userrequrl, c.comment as comment, c.is_spam as is_spam, c.created as created, c.modified as modified, i.title as item_title, i.is_draft as item_is_draft FROM #_comments c, #_items i WHERE c.item_id = i.id';
-            if ( $item_id ) {
-                $query .= ' and item_id = ' . $this->str( $item_id );
-            }
-            if ( $public_only == true ) {
-                $query .= ' and i.is_draft = 0';
-            }
-            if ( $spam_only == true ) {
-                $query .= ' and c.is_spam = 1';
-            } else {
-                $query .= ' and c.is_spam = 0';
-            }
-            $records = $this->db->getRecords( $this->_prepareQuery( $query, $order ), $limit, $offset );
-            foreach ( $records as $key=>$record ) {
-                $records[$key]['comment'] = trim( $record['comment'] );
-            }
-            return $records;
-        }
-
-        // Get duplicate comments based on the current values
-        function isDuplicateComment( $values ) {
-            $values['comment'] = trim( strtolower( $values['comment'] ) );
-            $values['username'] = trim( strtolower( $values['username'] ) );
-            $sql = 'SELECT COUNT(*) AS comment_count FROM #_comments WHERE item_id = ' . $this->str( $values['item_id'] )
-                 . ' AND TRIM( LOWER( username ) ) = ' . $this->str( $values['username'] )
-                 . ' AND TRIM( LOWER( comment ) ) = ' . $this->str( $values['comment'] );
-            $result = intval( $this->db->getValueByName( $sql, 'comment_count' ) );
-            return ( $result > 0 );
-        }
-
-        // Get a comment by it's ID
-        function getCommentById( $comment_id ) {
-            $sql = $this->_prepareQuery( 'SELECT c.id as id, c.item_id as item_id, c.username as username, c.useremail as useremail, c.userwebsite as userwebsite, c.userip as userip, c.useragent as useragent, c.userrequrl as userrequrl, c.comment as comment, c.is_spam as is_spam, c.created as created, c.modified as modified, i.title as item_title FROM #_comments c, #_items i WHERE c.item_id = i.id and c.id = ' . $this->str( $comment_id ) );
-            $record  = $this->db->getRecord( $sql );
-            $record['comment'] = trim( $record['comment'] );
-            return $record;
-        }
-
-        // Add a comment
-        function addComment( $values ) {
-
-            // Update the values
-            $values['userip'] = $_SERVER['REMOTE_ADDR'];
-            $values['useragent'] = $_SERVER['HTTP_USER_AGENT'];
-            $values['userrequrl'] = $_SERVER['REQUEST_URI'];
-            $values['is_spam'] = 0;
-
-            // Check against akismet if a key is there
-            if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
-
-                // Check if it's spam or not
-                $result = $this->akismet->checkComment(
-                    $values['comment'], $values['username'], $values['useremail'], $values['userwebsite'],
-                    $values['userip'], $values['useragent']
-                );
-
-                // Update the comment values
-                if ( $result == NULL || $result === false ) {
-                    $values['is_spam'] = '0';
-                } else {
-                    $values['is_spam'] = '1';
-                }
-
-            }
-
-            // Add the comment
-            $result = $this->_executeInsert( '#_comments', $values );
-            $comment_id = $this->db->getLastInsertID();
-
-            // Only update the items table if not spam
-            if ( ! $values['is_spam'] ) {
-                $sql = 'UPDATE #_items SET num_comments = num_comments+1 WHERE id = ' . $this->str( $values['item_id'] );
-                $this->db->executeSql( $sql );
-            }
-
-            // Update the comment
-            $values['id'] = $comment_id;
-
-            // Return the comment id
-            return $values;
-
-        }
-
-        // Update a comment
-        function updateComment( $values ) {
-            return $this->db->executeUpdate( '#_comments', $values, 'id = ' . $this->str( $values['id'] ) );
-        }
-
-        // Update a comment and mark it as spam
-        function updateCommentAsSpam( $comment_id ) {
-
-            // Update the comment
-            $comment = $this->getCommentById( $comment_id );
-            $comment['is_spam'] = 1;
-            unset( $comment['item_title'] );
-            $this->updateComment( $comment );
-            $sql = 'UPDATE #_items SET num_comments = num_comments-1 WHERE id = ' . $this->str( $comment['item_id'] );
-            $this->db->executeSql( $sql );
-
-            // Check against akismet if a key is there
-            if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
-
-                // Submit as spam
-                $this->akismet->submitSpam(
-                    $comment['comment'], $comment['username'], $comment['useremail'], $comment['userwebsite'],
-                    $comment['userip'], $comment['useragent']
-                );
-
-            }
-
-        }
-
-        // Update a comment and unmark it as spam
-        function updateCommentAsNotSpam( $comment_id ) {
-
-            // Update the comment
-            $comment = $this->getCommentById( $comment_id );
-            $comment['is_spam'] = 0;
-            unset( $comment['item_title'] );
-            $this->updateComment( $comment );
-            $sql = 'UPDATE #_items SET num_comments = num_comments+1 WHERE id = ' . $this->str( $comment['item_id'] );
-            $this->db->executeSql( $sql );
-
-            // Check against akismet if a key is there
-            if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
-
-                // Submit as ham
-                $this->akismet->submitHam(
-                    $comment['comment'], $comment['username'], $comment['useremail'], $comment['userwebsite'],
-                    $comment['userip'], $comment['useragent']
-                );
-
-            }
-
-        }
-
-        // Delete a comment
-        function deleteComment( $comment_id ) {
-            $comment = $this->getCommentById( $comment_id );
-            $result = $this->_deleteFromTableUsingID( '#_comments', $comment_id );
-            if ( ! $comment['is_spam'] ) {
-                $sql = 'UPDATE #_items SET num_comments = num_comments-1 WHERE id = ' . $this->str( $comment['item_id'] );
-                $this->db->executeSql( $sql );
-            }
-            return $result;
-        }
-
-        // Get the comment subscriber list
-        function getCommentSubscribers( $item_id ) {
-            $sql = $this->_prepareQuery(
-                'SELECT DISTINCT useremail FROM #_comments WHERE item_id = ' . $this->str( $item_id )
-              . ' AND NOT ISNULL( useremail ) AND useremail <> \'\''
-            );
-            return $this->db->getValuesByName( $sql, 'useremail' );
-        }
-
-        // Get the categories
-        function getCategories( $order='title' ) {
-            $result = $this->_selectFromTable( '#_categories', $order );
-            $sql = $this->_prepareQuery( 'SELECT category_id, COUNT(*) AS num_items FROM #_items i WHERE is_draft=0 GROUP BY category_id' );
-            $num_items = $this->db->getAsAssocArray( $sql, 'category_id', 'num_items' );
-            foreach ( $result as $key=>$val ) {
-                if ( isset( $num_items[ $val['id'] ] ) ) {
-                    $result[ $key ]['num_items'] = $num_items[ $val['id'] ];
-                } else {
-                    $result[ $key ]['num_items'] = '0';
-                }
-            }
-            return $result;
-        }
-
-        // Get the categories as an associative array
-        function getCategoriesAsAssoc( $order='title' ) {
-            $sql = $this->_prepareQuery( 'SELECT id, title FROM #_categories', $order );
-            return $this->db->getAsAssocArray( $sql, 'id', 'title' );
-        }
-
-        // Get a category by it's ID
-        function getCategoryById( $category_id ) {
-            return $this->_selectFromTableUsingID( '#_categories', $category_id );
-        }
-
-        // Get a category by it's name
-        function getCategoryByName( $name ) {
-            $sql = $this->_prepareQuery( 'SELECT * FROM #_categories WHERE title = ' . $this->str( $name ) );
-            return $this->db->getRecord( $sql );
-        }
-
-        // Get the items by category
-        function getItemsByCategoryId( $category_id, $limit=-1, $offset=-1, $order='created desc, title' ) {
-            return $this->getItems( $limit, $offset, $order, 'AND is_draft = 0 AND i.category_id = ' . $this->str( $category_id ) );
-        }
-
-        // Add a category
-        function addCategory( $values ) {
-            return $this->_executeInsert( '#_categories', $values );
-        }
-
-        // Update a category
-        function updateCategory( $values ) {
-            return $this->db->executeUpdate( '#_categories', $values, 'id = ' . $this->str( $values['id'] ) );
-        }
-
-        // Delete a category
-        function deleteCategory( $category_id ) {
-            return $this->_deleteFromTableUsingID( '#_categories', $category_id );
-        }
-
-        // Get the public pages
-        function getPublicPages( $order='title', $where=' AND p.is_draft=0' ) {
-            return $this->getPages( $order, $where );
-        }
-
-        // Get the pages
-        function getPages( $order='title', $where='' ) {
-            $sql = $this->_prepareQuery(
-                'SELECT p.id, p.title, p.body, p.is_draft, p.created, p.modified, u.email as user_email, u.name as user_name '
-              . 'FROM #_pages p, #_users u WHERE p.user_id = u.id'
-            );
-            if ( ! empty( $where ) ) {
-                $sql .= ' ' . $where;
-            }
-            return $this->db->getRecords( $sql );
-        }
-
-        // Get a public page by it's ID
-        function getPublicPageByID( $page_id, $where=' AND p.is_draft=0' ) {
-            return $this->getPageByID( $page_id, $where );
-        }
-
-        // Get a page by it's ID
-        function getPageByID( $page_id, $where='' ) {
-            $sql = $this->_prepareQuery(
-                'SELECT p.id, p.title, p.body, p.is_draft, p.created, p.modified, u.email as user_email, u.name as user_name FROM '
-                . '#_pages p, #_users u WHERE p.user_id = u.id AND p.id = ' . $this->str( $page_id )
-            );
-            if ( ! empty( $where ) ) {
-                $sql .= ' ' . $where;
-            }
-            return $this->db->getRecord( $sql );
-        }
-
-        // Add a page
-        function addPage( $values ) {
-            return $this->_executeInsert( '#_pages', $values );
-        }
-
-        // Update a page
-        function updatePage( $values ) {
-            unset( $values['user_id'] );
-            return $this->db->executeUpdate( '#_pages', $values, 'id = ' . $this->str( $values['id'] ) );
-        }
-
-        // Delete a page
-        function deletePage( $page_id ) {
-            return $this->_deleteFromTableUsingID( '#_pages', $page_id );
-        }
-
-        // Get the links
-        function getLinks( $order='title' ) {
-            return $this->_selectFromTable( '#_links', $order );
-        }
-
-        // Get a link by it's ID
-        function getLinkByID( $link_id ) {
-            return $this->_selectFromTableUsingID( '#_links', $link_id );
-        }
-
-        // Get a link by it's url
-        function getLinkByUrl( $url ) {
-            $sql = $this->_prepareQuery( 'SELECT * FROM #_links WHERE url = ' . $this->str( $url ) );
-            return $this->db->getRecord( $sql );
-        }
-
-        // Add a link
-        function addLink( $values ) {
-            return $this->_executeInsert( '#_links', $values );
-        }
-
-        // Update a link
-        function updateLink( $values ) {
-            return $this->db->executeUpdate( '#_links', $values, 'id = ' . $this->str( $values['id'] ) );
-        }
-
-        // Delete a link
-        function deleteLink( $link_id ) {
-            return $this->_deleteFromTableUsingID( '#_links', $link_id );
-        }
-
-        // Function to increase the link num_visits
-        function updateLinkNumVisits( $link_id ) {
-            $sql = 'UPDATE #_links SET num_visits = num_visits+1 WHERE id = ' . $this->str( $link_id );
-            $this->db->executeSql( $sql );
-        }
-
-        // Check the user login
-        function checkLogin( $user, $password ) {
-            return $this->db->getRecord(
-                'SELECT * FROM #_users WHERE name = ' . $this->str( $user ) . ' AND password = ' . $this->str( $password )
-            );
-        }
-
-        // Get the number of items
-        function getStatsItemCount() {
-            return $this->db->getValue( 'SELECT count(*) FROM #_items' );
-        }
-
-        // Get the number of comments
-        function getStatsCommentCount() {
-            return $this->db->getValue( 'SELECT count(*) FROM #_comments' );
-        }
-
-        // Get the commenter statistics
-        function getCommenterStats( $limit=10 ) {
-            return $this->db->getRecords(
-                'SELECT username, count(*) as hits FROM #_comments GROUP BY username ORDER BY hits DESC', $limit
-            );
-        }
-
-        // Get the list of users
-        function getUsers( $order='name' ) {
-            $sql = $this->_prepareQuery( 'SELECT * FROM #_users', $order );
-            return $this->db->getRecords( $sql );
-        }
-
-        // Function to get a user by it's ID
-        function getUserByID( $user_id ) {
-            return $this->_selectFromTableUsingID( '#_users', $user_id );
-        }
-
-        // Function to get a user by his name
-        function getUserByName( $user_name ) {
-            $sql = 'SELECT * FROM #_users WHERE LOWER( name ) = ' . $this->str( strtolower( $user_name ) );
-            return $this->db->getRecord( $sql );
-        }
-
-        // Replace the user with another one
-        function replaceUser( $old, $new ) {
-            $sql = 'UPDATE #_items SET user_id = ' . $this->str( $new ) . ' WHERE user_id = ' . $this->str( $old );
-            $this->db->executeSql( $sql );
-            $sql = 'UPDATE #_pages SET user_id = ' . $this->str( $new ) . ' WHERE user_id = ' . $this->str( $old );
-            $this->db->executeSql( $sql );
-        }
-
-        // Function to save a user
-        function saveUser( $user ) {
-
-            // Unset the submit value
-            unset( $user['cmdSubmit'] );
-
-            // Convert the password to md5
-            if ( ! empty( $user['password'] ) ) {
-                $user['password'] = md5( $user['password'] );
-            } else {
-                unset( $user['password'] );
-            }
-
-            // Check if we need to update or insert
-            if ( empty( $user['id'] ) ) {
-                $user['created']= time();
-                $user['modified'] = time();
-                unset( $user['id'] );
-                return $this->db->executeInsert( '#_users', $user );
-            } else {
-                if ( empty( $user['created'] ) ) {
-                    $user['created']= time();
-                }
-                $user['modified'] = time();
-                unset( $user['name'] );
-                return $this->db->executeUpdate( '#_users', $user, 'id = ' . $this->str( $user['id'] ) );
-            }
-
-        }
-
-        // Delete a user from the database
-        function deleteUser( $user_id ) {
-            $sql = 'DELETE FROM #_users WHERE id = ' . $this->str( $user_id );
-            $this->db->executeSql( $sql );
-        }
-
-        // Check if we are in the spam_check table, which means we have a spam attack
-        function inSpamAttack() {
-            $comment_interval = YDConfig::get( 'comment_interval', 10 );
-            if ( $comment_interval != '' && is_numeric( $comment_interval ) ) {
-                $sql = 'SELECT * FROM #_spamcheck WHERE userip = ' . $this->str( $_SERVER['REMOTE_ADDR'] );
-                return $this->db->getRecord( $sql );
-            }
-        }
-
-        // Mark ourselves in the spam check table
-        function spamCheckMark() {
-            $comment_interval = YDConfig::get( 'comment_interval', 10 );
-            if ( $comment_interval != '' && is_numeric( $comment_interval ) ) {
-                $values = array( 'userip' => $_SERVER['REMOTE_ADDR'], 'lastvisit' => time() );
-                $this->db->executeInsert( '#_spamcheck', $values );
-            }
-        }
-
-        // Delete the spam comments
-        function emptySpam() {
-            $sql = 'DELETE FROM #_comments WHERE is_spam = 1';
-            $this->db->executeSql( $sql );
-        }
-
-        // Function to resize an uploaded image. Takes a YDFSImage object as it's argument
-        function resizeUploadedImage( $image ) {
-
-            // Convert the YDFSFile objects to images
-            if ( is_object( $image ) && strtolower( get_class( $image ) ) == 'ydfsfile' ) {
-                $image = new YDFSImage( $image->getAbsolutePath() );
-            }
-
-            // Convert strings to images
-            if ( is_string( $image ) ) {
-                $image = new YDFSImage( $image );
-            }
-
-            // Get the maximum X and Y size
-            $max_x = YDConfig::get( 'max_img_size_x', '' );
-            $max_y = YDConfig::get( 'max_img_size_y', '' );
-            $max_x = empty( $max_x ) ? 999999 : $max_x;
-            $max_y = empty( $max_y ) ? 999999 : $max_y;
-
-            // Do nothing if maximum sizes are specified
-            if ( $max_x == 99999 && $max_y == 999999 ) {
-                return $image;
-            }
-
-            // Resize the image
-            $image->saveThumbnail( $max_x, $max_y, $image->getAbsolutePath() );
-
-            // Return the image
-            return $image;
-
-        }
-
-        // Prepare a query
-        function _prepareQuery( $sql, $order=null ) {
-            return is_null( $order ) ? $sql : $sql . ' ORDER BY ' . $order;
-        }
-
-        // Execute an insert
-        function _executeInsert( $table, $values ) {
-            if ( @ empty( $values['created'] ) ) {
-                $values['created'] = time();
-            }
-            if ( @ empty( $values['modified'] ) ) {
-                $values['modified'] = time();
-            }
-            foreach ( $values as $key=>$val ) {
-                if ( substr( $key, 0, 3 ) == 'cmd' ) {
-                    unset( $values[$key] );
-                }
-            }
-            return $this->db->executeInsert( $table, $values );
-        }
-
-        // Execute an update
-        function _executeUpdate( $table, $values, $where ) {
-            if ( @ empty( $values['created'] ) ) {
-                $values['created'] = time();
-            }
-            $values['modified'] = time();
-            foreach ( $values as $key=>$val ) {
-                if ( substr( $key, 0, 3 ) == 'cmd' ) {
-                    unset( $values[$key] );
-                }
-            }
-            return $this->db->executeUpdate( $table, $values, $where );
-        }
-
-        // Select items from a table with a given table name
-        function _selectFromTable( $table, $order=null, $limit=-1, $offset=-1 ) {
-            $sql = $this->_prepareQuery( 'SELECT * FROM ' . $table, $order, $limit, $offset );
-            return $this->db->getRecords( $sql );
-         }
-
-        // Select items from a table with a given id
-        function _selectFromTableUsingID( $table, $id ) {
-            $sql = $this->_prepareQuery( 'SELECT * FROM ' . $table . ' WHERE id = ' . $this->str( $id ) );
-            return $this->db->getRecord( $sql );
-        }
-
-        // Delete items from a table with a given id
-        function _deleteFromTableUsingID( $table, $id ) {
-            $sql = $this->_prepareQuery( 'DELETE FROM ' . $table . ' WHERE id = ' . $this->str( $id ) );
-            return $this->db->executeSql( $sql );
-        }
-
-        // Escapes a string
-        function str( $t ) {
-            return '\''. $this->db->escape( $t ) . '\'';
-        }
-
-        // Get a translation from the translation table
-        function t( $t ) {
-            return YDTplModT( array( 'w' => $t ) );
-        }
-
-    }
-
-?>
+<?php
+
+    // Function to save the configuration
+    function YDWeblogSaveConfig( $values ) {
+
+        // Remove some unneeded values
+        unset( $values['name'] );
+        unset( $values['email'] );
+        unset( $values['password'] );
+
+        // Add some default ones
+        if ( ! isset( $values['weblog_entries_fp'] ) ) {
+            $values['weblog_entries_fp'] = 5;
+        }
+        if ( ! isset( $values['email_new_comment'] ) ) {
+            $values['email_new_comment'] = true;
+        }
+        if ( ! isset( $values['use_cache'] ) ) {
+            $values['use_cache'] = false;
+        }
+        if ( ! isset( $values['max_syndicated_items'] ) ) {
+            $values['max_syndicated_items'] = 20;
+        }
+        if ( ! isset( $values['include_debug_info'] ) ) {
+            $values['include_debug_info'] = 0;
+        }
+        if ( ! isset( $values['dflt_is_draft'] ) ) {
+            $values['dflt_is_draft'] = false;
+        }
+        if ( empty( $values['db_pass'] ) ) {
+            $values['db_pass'] = YDConfig::get( 'db_pass', '' );
+        }
+
+        // Construct the new config text
+        $cfg = '<?php' . "\n\n";
+        $cfg .= '    // Do not edit this file manually!' . "\n";
+        $cfg .= '    // Only edit this file using the admin tools!' . "\n\n";
+
+        // Loop over the config values
+        foreach ( $values as $key=>$val ) {
+
+            // Ignore items starting with an underscore
+            if ( substr( $key, 0, 1 ) != '_' ) {
+
+                // Escape strings
+                $key = str_replace( "'", "\\'", $key );
+                $val = str_replace( "'", "\\'", $val );
+
+                // Don't enclose numeric values with quotes
+                if ( is_bool( $val ) ) {
+                    $val = ( $val ) ? 'true' : 'false';
+                    $cfg .= "    YDConfig::set( '" . $key . "', " . $val . " );\n";
+                } elseif ( is_numeric( $val ) ) {
+                    $cfg .= "    YDConfig::set( '" . $key . "', " . $val . " );\n";
+                } else {
+                    $cfg .= "    YDConfig::set( '" . $key . "', '" . $val . "' );\n";
+                }
+            }
+        }
+        $cfg .= "\n" . '?>';
+
+        // Open the config file
+        $f = fopen( dirname( __FILE__ ) . '/config.php', 'w' );
+        fwrite( $f, $cfg );
+        fclose( $f );
+
+        // Set the right permissions
+        //@chmod( dirname( __FILE__ ) . '/config.php', 0700 );
+
+        // Create a .htaccess file if needed
+        $htaccessPath = dirname( dirname( __FILE__ ) ) . '/.htaccess';
+        if ( ! is_file( $htaccessPath ) ) {
+
+            // The htaccess data
+            $data = 'RewriteEngine on' . YD_CRLF;
+            $data .= 'Options +FollowSymlinks' . YD_CRLF;
+            $data .= 'RewriteRule ^item_([0-9]+).php?$ item.php?id=$1 [L]' . YD_CRLF;
+            $data .= 'RewriteRule ^page_([0-9]+).php?$ page.php?id=$1 [L]' . YD_CRLF;
+            $data .= 'RewriteRule ^category_([0-9]+).php?$ category.php?id=$1 [L]' . YD_CRLF;
+            $data .= 'RewriteRule ^link_([0-9]+).php?$ link.php?id=$1 [L]' . YD_CRLF;
+            $data .= 'RewriteRule ^image/(.*) item_gallery.php?id=$1 [L]' . YD_CRLF;
+
+            // Open the config file
+            $f = fopen( $htaccessPath, 'w' );
+            fwrite( $f, $data );
+            fclose( $f );
+
+            // Set the right permissions
+            //@chmod( $htaccessPath, 0700 );
+
+        }
+
+    }
+
+    // Function to format a string with list values
+    function YDFormatStringWithListValues( $string ) {
+        $string = str_replace( ';', ',', $string );
+        $string = explode( ',', $string );
+        foreach ( $string as $k=>$v ) {
+            if ( trim( $v ) == '' ) {
+                unset( $string[$k] );
+            } else {
+                $string[$k] = trim( $v );
+            }
+        }
+        return implode( ', ', $string );
+    }
+
+    // Class defining our weblog API
+    class YDWeblogAPI extends YDBase {
+
+        // Class constructor
+        function YDWeblogAPI() {
+
+            // Initialize the parent
+            $this->YDBase();
+
+            // Get the database connection
+            $this->db = YDDatabase::getInstance(
+                'mysql',
+                YDConfig::get( 'db_name', 'YDWeblog' ), YDConfig::get( 'db_user', 'root' ),
+                YDConfig::get( 'db_pass', '' ), YDConfig::get( 'db_host', 'localhost' )
+            );
+
+            // Get a link to the database metadata
+            $this->dbmeta = new YDDatabaseMetaData( $this->db );
+
+            // Upgrade the schema if needed
+            $this->upgradeSchemaIfNeeded();
+
+            // The array that will hold the image metadata
+            $this->imagemetadata = null;
+
+            // Delete spam comments older than 7 days
+            $sql = 'DELETE FROM #_comments WHERE is_spam = 1 AND created < (unix_timestamp()-604800)';
+            $this->db->executeSql( $sql );
+
+            // Delete the old IP numbers from spam check
+            $comment_interval = YDConfig::get( 'comment_interval', 10 );
+            if ( $comment_interval != '' && is_numeric( $comment_interval ) ) {
+                $sql = 'DELETE FROM #_spamcheck WHERE lastvisit < (unix_timestamp()-' . $comment_interval . ')';
+                $this->db->executeSql( $sql );
+            }
+
+            // Check against akismet if a key is there
+            if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
+
+                // Include the YDAkismet addon
+                include_once( YD_DIR_HOME_ADD . '/YDAkismet/YDAkismet.php' );
+
+                // Get the URL of the weblog
+                $weblog_url = dirname( YDRequest::getCurrentUrl( true ) ) . '/';
+
+                // Initialize YDAkismet
+                $this->akismet = new YDAkismet( $weblog_url, YDConfig::get( 'akismet_key', '' ) );
+
+            } else {
+
+                // No akismet
+                $this->akismet = null;
+
+            }
+
+        }
+
+        // Get the schema version
+        function getSchemaVersion() {
+
+            // Create the schemaversion table if it doesn't exists
+            if ( ! $this->dbmeta->tableExists( '#_schemaversion' ) ) {
+                $sql = 'CREATE TABLE #_schemaversion (installed INT(11), version INT (11))';
+                $this->db->executeSql( $sql );
+            }
+
+            // Check the schema version
+            $schema_version = $this->db->getValue( 'select version from #_schemaversion order by installed desc, version desc' );
+
+            // Return the schema version
+            return ( $schema_version === false  ) ? 0 : intval( $schema_version );
+
+        }
+
+        // Get the full schema information
+        function getFullSchemaVersion() {
+            $this->getSchemaVersion();
+            return $this->db->getRecord( 'select installed, version from #_schemaversion order by installed desc, version desc' );
+        }
+
+        // Function to set the schema version
+        function setSchemaVersion( $version ) {
+            $values = array();
+            $values['installed'] = time();
+            $values['version'] = $version;
+            $this->db->executeInsert( '#_schemaversion', $values );
+        }
+
+        // Upgrade the schema if needed
+        function upgradeSchemaIfNeeded() {
+
+            // The current weblog schema version
+            $current_schema = 7;
+
+            // Get the schema version
+            $installed_schema = $this->getSchemaVersion();
+
+            // Check if we have the required schema version
+            if ( $installed_schema < $current_schema ) {
+
+                // Add any missing comments fields
+                $fields = $this->dbmeta->getFields( '#_comments' );
+                $this->executeIfMissing( 'useragent', $fields, 'ALTER TABLE #_comments ADD useragent varchar(255) AFTER userip' );
+                $this->executeIfMissing( 'userrequrl', $fields, 'ALTER TABLE #_comments ADD userrequrl varchar(255) AFTER useragent' );
+                $this->executeIfMissing( 'is_spam', $fields, 'ALTER TABLE #_comments ADD is_spam TINYINT(1) DEFAULT "0" NOT NULL AFTER comment' );
+
+                // Add any missing items fields
+                $fields = $this->dbmeta->getFields( '#_items' );
+                $this->executeIfMissing( 'body_more', $fields, 'ALTER TABLE #_items ADD body_more LONGTEXT AFTER body' );
+                $this->executeIfMissing( 'is_draft', $fields, 'ALTER TABLE #_items ADD is_draft TINYINT(1) DEFAULT "0" NOT NULL AFTER num_comments' );
+                $this->executeIfPresent( 'allow_comments', $fields, 'ALTER TABLE #_items DROP allow_comments' );
+                $this->executeIfPresent( 'auto_close', $fields, 'ALTER TABLE #_items DROP auto_close' );
+
+                // Add any missing pages field
+                $fields = $this->dbmeta->getFields( '#_pages' );
+                $this->executeIfMissing( 'is_draft', $fields, 'ALTER TABLE #_pages ADD is_draft TINYINT(1) DEFAULT "0" NOT NULL AFTER body' );
+
+                // Get the list of indexes for the items table
+                $indexes = $this->dbmeta->getIndexes( '#_items' );
+                $this->executeIfMissing( 'is_draft', $indexes, 'ALTER TABLE #_items ADD INDEX is_draft (is_draft)' );
+
+                // Get the list of indexes for the pages table
+                $indexes = $this->dbmeta->getIndexes( '#_pages' );
+                $this->executeIfMissing( 'is_draft', $indexes, 'ALTER TABLE #_pages ADD INDEX is_draft (is_draft)' );
+
+                // Get the list of indexes for the users table
+                $indexes = $this->dbmeta->getIndexes( '#_users' );
+                $this->executeIfPresent( 'email', $indexes, 'ALTER TABLE #_users DROP INDEX email' );
+                $this->executeIfMissing( 'name',  $indexes, 'ALTER TABLE #_users ADD UNIQUE name (name)' );
+
+                // Fix the shemaversion table if needed
+                $this->db->executeSql( 'ALTER TABLE #_schemaversion CHANGE installed installed INT(11)' );
+                $this->db->executeSql( 'UPDATE #_schemaversion SET installed = unix_timestamp() WHERE installed = 0' );
+
+                // Drop the statistics tables
+                $this->db->executeSql( 'DROP TABLE IF EXISTS #_statistics' );
+                $this->db->executeSql( 'DROP TABLE IF EXISTS #_statistics_init' );
+
+                // Create the image_metadata table
+                if ( ! $this->dbmeta->tableExists( '#_imagemetadata' ) ) {
+                    $this->db->executeSql(
+                          'CREATE TABLE #_imagemetadata ('
+                        . '  id int(11) NOT NULL auto_increment,'
+                        . '  img_path varchar(255) NOT NULL default \'\','
+                        . '  title varchar(255) default NULL,'
+                        . '  description longtext,'
+                        . '  created int(11) default NULL,'
+                        . '  modified int(11) default NULL,'
+                        . '  PRIMARY KEY  (id),'
+                        . '  UNIQUE KEY img_path (img_path)'
+                        . ')'
+                    );
+                }
+
+                // Create the spamcheck table
+                if ( ! $this->dbmeta->tableExists( '#_spamcheck' ) ) {
+                    $this->db->executeSql(
+                          'CREATE TABLE #_spamcheck ('
+                        . '  id int(11) NOT NULL auto_increment,'
+                        . '  userip varchar(20) default NULL,'
+                        . '  lastvisit int(11) default NULL,'
+                        . '  PRIMARY KEY  (id),'
+                        . '  UNIQUE KEY userip (userip)'
+                        . ')'
+                    );
+                }
+
+                // Update the schema information
+                $this->setSchemaVersion( $current_schema );
+
+            }
+
+        }
+
+        // Function to execute SQL if the item is missing
+        function executeIfMissing( $needle, $haystack, $sql ) {
+            if ( ! in_array( $needle, $haystack ) ) {
+                $this->db->executeSql( $sql );
+            }
+        }
+
+        // Function to execute SQL if the item is not missing
+        function executeIfPresent( $needle, $haystack, $sql ) {
+            if ( in_array( $needle, $haystack ) ) {
+                $this->db->executeSql( $sql );
+            }
+        }
+
+        // Function to auto add some records to an item
+        function _fixItem( $item, $order='created desc, title' ) {
+
+            // Return false if no item
+            if ( ! $item ) {
+                return $item;
+            }
+
+            // Get the item indexes for the indicated weblog (cached to minimize the number of SQL queries)
+            $cacheName = 'YD_CACHE_WEBLOG_ITEMIDS_' . md5( strtolower( $order ) );
+            if ( ! isset( $GLOBALS[ $cacheName ] ) ) {
+                $sql = $this->_prepareQuery( 'SELECT id FROM #_items', $order );
+                $item_ids = $this->db->getValuesByName( $sql, 'id' );
+                $GLOBALS[ $cacheName ] = $item_ids;
+            }
+
+            // Get the ID of the previous and the next item
+            $pos = array_search( $item['id'], $GLOBALS[ $cacheName ] );
+            $item['newer_id'] = ( $pos == 0 ) ? false : $GLOBALS[ $cacheName ][$pos-1] ;
+            $item['older_id'] = ( $pos == sizeof( $GLOBALS[ $cacheName ] )-1 ) ? false : $GLOBALS[ $cacheName ][$pos+1] ;
+
+            // Add the year, month and yearmonth fields
+            $item['yearmonth'] = ucwords( strftime( '%B %Y', $item['created'] ) );
+            $item['month']     = ucwords( strftime( '%B',    $item['created'] ) );
+            $item['year']      = ucwords( strftime( '%Y',    $item['created'] ) );
+
+            // Get the list of images related to this item
+            $imgPath = dirname( __FILE__ ) . '/../' . YDConfig::get( 'dir_uploads', 'uploads' ) . '/item_' . $item['id'] .'/';
+
+            // Get the list of pictures if any
+            if ( is_dir( $imgPath ) ) {
+
+                // Get a handle to the directory
+                $dir = new YDFSDirectory( dirname( __FILE__ ) . '/../' . YDConfig::get( 'dir_uploads', 'uploads' ) . '/item_' . $item['id'] .'/' );
+
+                // Get the list of files
+                $images = $dir->getContents( array( '!index.html', '!index.php', '!m_*.*', '!s_*.*' ), null, array( 'YDFSImage' ) );
+
+                // Make the relative path for each file
+                foreach ( $images as $key=>$image ) {
+
+                    // Generate the thumbnails if not there yet
+                    if ( ! is_file( $dir->getAbsolutePath() . '/s_' . $image->getBasename() ) ) {
+                        $image->saveThumbnail( 48, 48, $dir->getAbsolutePath() . '/s_' . $image->getBasename() );
+                    }
+                    if ( ! is_file( $dir->getAbsolutePath() . '/m_' . $image->getBasename() ) ) {
+                        $image->saveThumbnail( 100, 100, $dir->getAbsolutePath() . '/m_' . $image->getBasename() );
+                    }
+
+                    // Set the relative path
+                    $dir_uploads = dirname( __FILE__ ) . '/../' . YDConfig::get( 'dir_uploads', 'uploads' );
+                    $dir_uploads = new YDFSDirectory( $dir_uploads );
+                    $image->relative_path = str_replace( $dir_uploads->getAbsolutePath(), '', $image->getAbsolutePath() );
+
+                    // Update the backslashes
+                    $image->relative_path = ltrim( str_replace( '\\', '/', $image->relative_path ), '/' );
+
+                    // Merge the title and description if any
+                    $image = $this->getItemImageMetaData( $image );
+
+                    // Create the full title, including item title, image title and description if any
+                    $image->full_description = $item['title'] . ' &raquo; ' . $image->title;
+                    if ( $image->description ) {
+                        $image->full_description .= '<p class="img_description">'
+                                                 . YDTemplate_modifier_bbcode( $image->description ) . '</p>';
+                    }
+                    $image->full_description_html = htmlspecialchars( $image->full_description, ENT_QUOTES );
+
+                    // Make links to the thumbnails
+                    $image->relative_path_s = dirname( $image->relative_path ) . '/s_' . basename( $image->relative_path );
+                    $image->relative_path_m = dirname( $image->relative_path ) . '/m_' . basename( $image->relative_path );
+
+                    // Add the thumbnails as objects
+                    $image->relative_path_s_obj = new YDFSImage( $dir_uploads->getAbsolutePath() . '/' . $image->relative_path_s );
+                    $image->relative_path_m_obj = new YDFSImage( $dir_uploads->getAbsolutePath() . '/' . $image->relative_path_m );
+
+                    // Update the original image
+                    $images[$key] = $image;
+
+                }
+
+                // Add it to the item
+                $item['images'] = $images;
+
+            } else {
+
+                // No images for this item
+                $item['images'] = array();
+
+            }
+
+            // Fix the image paths
+            if( strtolower( basename( dirname( YD_SELF_FILE ) ) ) != 'manage' ) {
+                $uploads = YDConfig::get( 'dir_uploads', 'uploads' );
+                $item['body'] = str_replace( '../' . $uploads, $uploads, $item['body'] );
+                $item['body_more'] = str_replace( '../' . $uploads, $uploads, $item['body_more'] );
+            }
+
+            // Get the count of images
+            $item['num_images'] = sizeof( $item['images'] );
+
+            // Return the fixed item
+            return $item;
+
+        }
+
+        // Fix a list of items
+        function _fixItems( $items, $order='created desc, title' ) {
+            foreach ( $items as $key=>$item ) {
+                $items[$key] = $this->_fixItem( $item, $order );
+            }
+            return $items;
+        }
+
+        // Function to initialize image metadata
+        function initImageMetaData() {
+
+            // Get the image metadata if not there yet
+            if ( is_null( $this->imagemetadata ) ) {
+                $this->imagemetadata = $this->db->getRecords( 'SELECT * FROM #_imagemetadata' );
+                $this->imagemetadata = YDArrayUtil::convertToNested( $this->imagemetadata, 'img_path' );
+                foreach ( $this->imagemetadata as $key=>$val ) {
+                    $this->imagemetadata[$key] = $val[0];
+                }
+            }
+
+        }
+
+        // Get the title and description for an item image
+        function getItemImageMetaData( $image ) {
+
+            // Initialize the image data
+            $this->initImageMetaData();
+
+            // Start with the default settings
+            $image->title = $image->getBasenameNoExt();
+            $image->description = '';
+
+            // Add the image data if any
+            if ( isset( $this->imagemetadata[ $image->relative_path ] ) ) {
+                $image->title = $this->imagemetadata[ $image->relative_path ]['title'];
+                $image->description = $this->imagemetadata[ $image->relative_path ]['description'];
+            }
+
+            // Return the image metadata
+            return $image;
+
+        }
+
+        // Update the image data for an item in the database
+        function setItemImageMetaData( $item, $data ) {
+            $values = $data;
+            $values['img_path'] = $item;
+            $result = $this->_executeUpdate( '#_imagemetadata', $values, 'img_path = ' . $this->str( $item ) );
+            if ( $result == '0' ) {
+                $result = $this->_executeInsert( '#_imagemetadata', $values );
+            }
+            return $result;
+        }
+
+        // Function to delete the image data for an item in the database
+        function removeImageMetaData( $image ) {
+            $sql = 'DELETE FROM #_imagemetadata WHERE img_path = ' . $this->str( $image );
+            return $this->db->executeSql( $sql );
+        }
+
+        // Function to get a single item
+        function getItem( $where ) {
+            $result = $this->getItems( 1, 0, 'created desc, title', $where );
+            return ( $result && sizeof( $result ) == 1 ) ? $result[0] : $result;
+        }
+
+        // Get the non draft items
+        function getPublicItems( $limit=-1, $offset=-1, $order='created desc, title', $where='AND is_draft = 0' ) {
+            return $this->getItems( $limit, $offset, $order, $where );
+        }
+
+        // Function to get the items of the weblog
+        function getItems( $limit=-1, $offset=-1, $order='created desc, title', $where='' ) {
+            $sql = 'SELECT i.id, i.category_id, i.title, i.body, i.body_more, i.num_comments, i.created, i.modified, '
+                 . 'i.is_draft, '
+                 . 'c.title as category, u.email as user_email, u.name as user_name FROM #_items i, #_categories c, '
+                 . '#_users u WHERE i.category_id = c.id AND i.user_id = u.id ';
+            $sql = $this->_prepareQuery( $sql . $where, $order );
+            return $this->_fixItems( $this->db->getRecords( $sql, $limit, $offset ) );
+        }
+
+        // Get related items
+        function getRelatedItemsByItem( $limit, $item ) {
+
+            // Get the items from the same category
+            $items = $this->getItems(
+                -1, -1, 'created desc, title', 'AND is_draft = 0 AND i.category_id = '
+              . $this->str( $item['category_id'] ) . ' and i.id <> ' . $this->str( $item['id'] )
+            );
+
+            // Shuffle the items
+            shuffle( $items );
+
+            // Get the right rows
+            $items = array_slice( $items, 0, $limit );
+
+            // Sort them by date
+            $sorted = array();
+            foreach ( $items as $key=>$item ) {
+                $sorted[ $key ] = intval( $item['created'] );
+            }
+            sort( $sorted );
+
+            // Rearrange the array
+            $sorted_items = array();
+            foreach ( $sorted as $key=>$date ) {
+                array_push( $sorted_items, $items[ $key ] );
+            }
+
+            // Return the items
+            return array_values( $sorted_items );
+
+        }
+
+        // Get a publc item by it's ID
+        function getPublicItemByID( $item_id ) {
+            return $this->getItem( 'AND is_draft = 0 AND i.id = ' . $this->str( $item_id ) );
+        }
+
+        // Get an item by it's ID
+        function getItemById( $item_id ) {
+            return $this->getItem( 'AND i.id = ' . $this->str( $item_id ) );
+        }
+
+        // Add an item
+        function addItem( $values ) {
+            return $this->_executeInsert( '#_items', $values );
+        }
+
+        // Update an item
+        function updateItem( $values ) {
+            unset( $values['user_id'] );
+            return $this->db->executeUpdate( '#_items', $values, 'id = ' . $this->str( $values['id'] ) );
+        }
+
+        // Delete an item
+        function deleteItem( $item_id ) {
+            $sql = $this->_prepareQuery( 'DELETE FROM #_comments WHERE item_id = ' . $this->str( $item_id ) );
+            $this->db->executeSql( $sql );
+            return $this->_deleteFromTableUsingID( '#_items', $item_id );
+        }
+
+        // Get the comments for an item
+        function getComments( $item_id=null, $order='created', $limit=-1, $offset=-1, $public_only=false, $spam_only=false ) {
+            $query = 'SELECT c.id as id, c.item_id as item_id, c.username as username, c.useremail as useremail, c.userwebsite as userwebsite, c.userip as userip, c.useragent as useragent, c.userrequrl as userrequrl, c.comment as comment, c.is_spam as is_spam, c.created as created, c.modified as modified, i.title as item_title, i.is_draft as item_is_draft FROM #_comments c, #_items i WHERE c.item_id = i.id';
+            if ( $item_id ) {
+                $query .= ' and item_id = ' . $this->str( $item_id );
+            }
+            if ( $public_only == true ) {
+                $query .= ' and i.is_draft = 0';
+            }
+            if ( $spam_only == true ) {
+                $query .= ' and c.is_spam = 1';
+            } else {
+                $query .= ' and c.is_spam = 0';
+            }
+            $records = $this->db->getRecords( $this->_prepareQuery( $query, $order ), $limit, $offset );
+            foreach ( $records as $key=>$record ) {
+                $records[$key]['comment'] = trim( $record['comment'] );
+            }
+            return $records;
+        }
+
+        // Get duplicate comments based on the current values
+        function isDuplicateComment( $values ) {
+            $values['comment'] = trim( strtolower( $values['comment'] ) );
+            $values['username'] = trim( strtolower( $values['username'] ) );
+            $sql = 'SELECT COUNT(*) AS comment_count FROM #_comments WHERE item_id = ' . $this->str( $values['item_id'] )
+                 . ' AND TRIM( LOWER( username ) ) = ' . $this->str( $values['username'] )
+                 . ' AND TRIM( LOWER( comment ) ) = ' . $this->str( $values['comment'] );
+            $result = intval( $this->db->getValueByName( $sql, 'comment_count' ) );
+            return ( $result > 0 );
+        }
+
+        // Get a comment by it's ID
+        function getCommentById( $comment_id ) {
+            $sql = $this->_prepareQuery( 'SELECT c.id as id, c.item_id as item_id, c.username as username, c.useremail as useremail, c.userwebsite as userwebsite, c.userip as userip, c.useragent as useragent, c.userrequrl as userrequrl, c.comment as comment, c.is_spam as is_spam, c.created as created, c.modified as modified, i.title as item_title FROM #_comments c, #_items i WHERE c.item_id = i.id and c.id = ' . $this->str( $comment_id ) );
+            $record  = $this->db->getRecord( $sql );
+            $record['comment'] = trim( $record['comment'] );
+            return $record;
+        }
+
+        // Add a comment
+        function addComment( $values ) {
+
+            // Update the values
+            $values['userip'] = $_SERVER['REMOTE_ADDR'];
+            $values['useragent'] = $_SERVER['HTTP_USER_AGENT'];
+            $values['userrequrl'] = $_SERVER['REQUEST_URI'];
+            $values['is_spam'] = '0';
+
+            // Check against akismet if a key is there
+            if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
+
+                // Check if it's spam or not
+                $result = $this->akismet->checkComment(
+                    $values['comment'], $values['username'], $values['useremail'], $values['userwebsite'],
+                    $values['userip'], $values['useragent']
+                );
+
+                // Update the comment values
+                if ( $result == NULL || $result === false ) {
+                    $values['is_spam'] = '0';
+                } else {
+                    $values['is_spam'] = '1';
+                }
+
+            }
+
+            // Safe the HTML from the comment
+            $values['comment'] = YDFormFilter_safe_html( $values['comment'] );
+
+            // Add the comment
+            $result = $this->_executeInsert( '#_comments', $values );
+            $comment_id = $this->db->getLastInsertID();
+
+            // Only update the items table if not spam
+            if ( ! $values['is_spam'] ) {
+                $sql = 'UPDATE #_items SET num_comments = num_comments+1 WHERE id = ' . $this->str( $values['item_id'] );
+                $this->db->executeSql( $sql );
+            }
+
+            // Update the comment
+            $values['id'] = $comment_id;
+
+            // Return the comment id
+            return $values;
+
+        }
+
+        // Update a comment
+        function updateComment( $values ) {
+            $values['comment'] = YDFormFilter_safe_html( $values['comment'] );
+            return $this->db->executeUpdate( '#_comments', $values, 'id = ' . $this->str( $values['id'] ) );
+        }
+
+        // Update a comment and mark it as spam
+        function updateCommentAsSpam( $comment_id ) {
+
+            // Update the comment
+            $comment = $this->getCommentById( $comment_id );
+            $comment['is_spam'] = 1;
+            unset( $comment['item_title'] );
+            $this->updateComment( $comment );
+            $sql = 'UPDATE #_items SET num_comments = num_comments-1 WHERE id = ' . $this->str( $comment['item_id'] );
+            $this->db->executeSql( $sql );
+
+            // Check against akismet if a key is there
+            if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
+
+                // Submit as spam
+                $this->akismet->submitSpam(
+                    $comment['comment'], $comment['username'], $comment['useremail'], $comment['userwebsite'],
+                    $comment['userip'], $comment['useragent']
+                );
+
+            }
+
+        }
+
+        // Update a comment and unmark it as spam
+        function updateCommentAsNotSpam( $comment_id ) {
+
+            // Update the comment
+            $comment = $this->getCommentById( $comment_id );
+            $comment['is_spam'] = 0;
+            unset( $comment['item_title'] );
+            $this->updateComment( $comment );
+            $sql = 'UPDATE #_items SET num_comments = num_comments+1 WHERE id = ' . $this->str( $comment['item_id'] );
+            $this->db->executeSql( $sql );
+
+            // Check against akismet if a key is there
+            if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
+
+                // Submit as ham
+                $this->akismet->submitHam(
+                    $comment['comment'], $comment['username'], $comment['useremail'], $comment['userwebsite'],
+                    $comment['userip'], $comment['useragent']
+                );
+
+            }
+
+        }
+
+        // Delete a comment
+        function deleteComment( $comment_id ) {
+            $comment = $this->getCommentById( $comment_id );
+            $result = $this->_deleteFromTableUsingID( '#_comments', $comment_id );
+            if ( ! $comment['is_spam'] ) {
+                $sql = 'UPDATE #_items SET num_comments = num_comments-1 WHERE id = ' . $this->str( $comment['item_id'] );
+                $this->db->executeSql( $sql );
+            }
+            return $result;
+        }
+
+        // Get the comment subscriber list
+        function getCommentSubscribers( $item_id ) {
+            $sql = $this->_prepareQuery(
+                'SELECT DISTINCT useremail FROM #_comments WHERE item_id = ' . $this->str( $item_id )
+              . ' AND NOT ISNULL( useremail ) AND useremail <> \'\''
+            );
+            return $this->db->getValuesByName( $sql, 'useremail' );
+        }
+
+        // Get the categories
+        function getCategories( $order='title' ) {
+            $result = $this->_selectFromTable( '#_categories', $order );
+            $sql = $this->_prepareQuery( 'SELECT category_id, COUNT(*) AS num_items FROM #_items i WHERE is_draft=0 GROUP BY category_id' );
+            $num_items = $this->db->getAsAssocArray( $sql, 'category_id', 'num_items' );
+            foreach ( $result as $key=>$val ) {
+                if ( isset( $num_items[ $val['id'] ] ) ) {
+                    $result[ $key ]['num_items'] = $num_items[ $val['id'] ];
+                } else {
+                    $result[ $key ]['num_items'] = '0';
+                }
+            }
+            return $result;
+        }
+
+        // Get the categories as an associative array
+        function getCategoriesAsAssoc( $order='title' ) {
+            $sql = $this->_prepareQuery( 'SELECT id, title FROM #_categories', $order );
+            return $this->db->getAsAssocArray( $sql, 'id', 'title' );
+        }
+
+        // Get a category by it's ID
+        function getCategoryById( $category_id ) {
+            return $this->_selectFromTableUsingID( '#_categories', $category_id );
+        }
+
+        // Get a category by it's name
+        function getCategoryByName( $name ) {
+            $sql = $this->_prepareQuery( 'SELECT * FROM #_categories WHERE title = ' . $this->str( $name ) );
+            return $this->db->getRecord( $sql );
+        }
+
+        // Get the items by category
+        function getItemsByCategoryId( $category_id, $limit=-1, $offset=-1, $order='created desc, title' ) {
+            return $this->getItems( $limit, $offset, $order, 'AND is_draft = 0 AND i.category_id = ' . $this->str( $category_id ) );
+        }
+
+        // Add a category
+        function addCategory( $values ) {
+            return $this->_executeInsert( '#_categories', $values );
+        }
+
+        // Update a category
+        function updateCategory( $values ) {
+            return $this->db->executeUpdate( '#_categories', $values, 'id = ' . $this->str( $values['id'] ) );
+        }
+
+        // Delete a category
+        function deleteCategory( $category_id ) {
+            return $this->_deleteFromTableUsingID( '#_categories', $category_id );
+        }
+
+        // Get the public pages
+        function getPublicPages( $order='title', $where=' AND p.is_draft=0' ) {
+            return $this->getPages( $order, $where );
+        }
+
+        // Get the pages
+        function getPages( $order='title', $where='' ) {
+            $sql = $this->_prepareQuery(
+                'SELECT p.id, p.title, p.body, p.is_draft, p.created, p.modified, u.email as user_email, u.name as user_name '
+              . 'FROM #_pages p, #_users u WHERE p.user_id = u.id'
+            );
+            if ( ! empty( $where ) ) {
+                $sql .= ' ' . $where;
+            }
+            return $this->db->getRecords( $sql );
+        }
+
+        // Get a public page by it's ID
+        function getPublicPageByID( $page_id, $where=' AND p.is_draft=0' ) {
+            return $this->getPageByID( $page_id, $where );
+        }
+
+        // Get a page by it's ID
+        function getPageByID( $page_id, $where='' ) {
+            $sql = $this->_prepareQuery(
+                'SELECT p.id, p.title, p.body, p.is_draft, p.created, p.modified, u.email as user_email, u.name as user_name FROM '
+                . '#_pages p, #_users u WHERE p.user_id = u.id AND p.id = ' . $this->str( $page_id )
+            );
+            if ( ! empty( $where ) ) {
+                $sql .= ' ' . $where;
+            }
+            return $this->db->getRecord( $sql );
+        }
+
+        // Add a page
+        function addPage( $values ) {
+            return $this->_executeInsert( '#_pages', $values );
+        }
+
+        // Update a page
+        function updatePage( $values ) {
+            unset( $values['user_id'] );
+            return $this->db->executeUpdate( '#_pages', $values, 'id = ' . $this->str( $values['id'] ) );
+        }
+
+        // Delete a page
+        function deletePage( $page_id ) {
+            return $this->_deleteFromTableUsingID( '#_pages', $page_id );
+        }
+
+        // Get the links
+        function getLinks( $order='title' ) {
+            return $this->_selectFromTable( '#_links', $order );
+        }
+
+        // Get a link by it's ID
+        function getLinkByID( $link_id ) {
+            return $this->_selectFromTableUsingID( '#_links', $link_id );
+        }
+
+        // Get a link by it's url
+        function getLinkByUrl( $url ) {
+            $sql = $this->_prepareQuery( 'SELECT * FROM #_links WHERE url = ' . $this->str( $url ) );
+            return $this->db->getRecord( $sql );
+        }
+
+        // Add a link
+        function addLink( $values ) {
+            return $this->_executeInsert( '#_links', $values );
+        }
+
+        // Update a link
+        function updateLink( $values ) {
+            return $this->db->executeUpdate( '#_links', $values, 'id = ' . $this->str( $values['id'] ) );
+        }
+
+        // Delete a link
+        function deleteLink( $link_id ) {
+            return $this->_deleteFromTableUsingID( '#_links', $link_id );
+        }
+
+        // Function to increase the link num_visits
+        function updateLinkNumVisits( $link_id ) {
+            $sql = 'UPDATE #_links SET num_visits = num_visits+1 WHERE id = ' . $this->str( $link_id );
+            $this->db->executeSql( $sql );
+        }
+
+        // Check the user login
+        function checkLogin( $user, $password ) {
+            return $this->db->getRecord(
+                'SELECT * FROM #_users WHERE name = ' . $this->str( $user ) . ' AND password = ' . $this->str( $password )
+            );
+        }
+
+        // Get the number of items
+        function getStatsItemCount() {
+            return $this->db->getValue( 'SELECT count(*) FROM #_items' );
+        }
+
+        // Get the number of comments
+        function getStatsCommentCount() {
+            return $this->db->getValue( 'SELECT count(*) FROM #_comments' );
+        }
+
+        // Get the commenter statistics
+        function getCommenterStats( $limit=10 ) {
+            return $this->db->getRecords(
+                'SELECT username, count(*) as hits FROM #_comments GROUP BY username ORDER BY hits DESC', $limit
+            );
+        }
+
+        // Get the list of users
+        function getUsers( $order='name' ) {
+            $sql = $this->_prepareQuery( 'SELECT * FROM #_users', $order );
+            return $this->db->getRecords( $sql );
+        }
+
+        // Function to get a user by it's ID
+        function getUserByID( $user_id ) {
+            return $this->_selectFromTableUsingID( '#_users', $user_id );
+        }
+
+        // Function to get a user by his name
+        function getUserByName( $user_name ) {
+            $sql = 'SELECT * FROM #_users WHERE LOWER( name ) = ' . $this->str( strtolower( $user_name ) );
+            return $this->db->getRecord( $sql );
+        }
+
+        // Replace the user with another one
+        function replaceUser( $old, $new ) {
+            $sql = 'UPDATE #_items SET user_id = ' . $this->str( $new ) . ' WHERE user_id = ' . $this->str( $old );
+            $this->db->executeSql( $sql );
+            $sql = 'UPDATE #_pages SET user_id = ' . $this->str( $new ) . ' WHERE user_id = ' . $this->str( $old );
+            $this->db->executeSql( $sql );
+        }
+
+        // Function to save a user
+        function saveUser( $user ) {
+
+            // Unset the submit value
+            unset( $user['cmdSubmit'] );
+
+            // Convert the password to md5
+            if ( ! empty( $user['password'] ) ) {
+                $user['password'] = md5( $user['password'] );
+            } else {
+                unset( $user['password'] );
+            }
+
+            // Check if we need to update or insert
+            if ( empty( $user['id'] ) ) {
+                $user['created']= time();
+                $user['modified'] = time();
+                unset( $user['id'] );
+                return $this->db->executeInsert( '#_users', $user );
+            } else {
+                if ( empty( $user['created'] ) ) {
+                    $user['created']= time();
+                }
+                $user['modified'] = time();
+                unset( $user['name'] );
+                return $this->db->executeUpdate( '#_users', $user, 'id = ' . $this->str( $user['id'] ) );
+            }
+
+        }
+
+        // Delete a user from the database
+        function deleteUser( $user_id ) {
+            $sql = 'DELETE FROM #_users WHERE id = ' . $this->str( $user_id );
+            $this->db->executeSql( $sql );
+        }
+
+        // Check if we are in the spam_check table, which means we have a spam attack
+        function inSpamAttack() {
+            $comment_interval = YDConfig::get( 'comment_interval', 10 );
+            if ( $comment_interval != '' && is_numeric( $comment_interval ) ) {
+                $sql = 'SELECT * FROM #_spamcheck WHERE userip = ' . $this->str( $_SERVER['REMOTE_ADDR'] );
+                return $this->db->getRecord( $sql );
+            }
+        }
+
+        // Mark ourselves in the spam check table
+        function spamCheckMark() {
+            $comment_interval = YDConfig::get( 'comment_interval', 10 );
+            if ( $comment_interval != '' && is_numeric( $comment_interval ) ) {
+                $values = array( 'userip' => $_SERVER['REMOTE_ADDR'], 'lastvisit' => time() );
+                $this->db->executeInsert( '#_spamcheck', $values );
+            }
+        }
+
+        // Delete the spam comments
+        function emptySpam() {
+            $sql = 'DELETE FROM #_comments WHERE is_spam = 1';
+            $this->db->executeSql( $sql );
+        }
+
+        // Function to resize an uploaded image. Takes a YDFSImage object as it's argument
+        function resizeUploadedImage( $image ) {
+
+            // Convert the YDFSFile objects to images
+            if ( is_object( $image ) && strtolower( get_class( $image ) ) == 'ydfsfile' ) {
+                $image = new YDFSImage( $image->getAbsolutePath() );
+            }
+
+            // Convert strings to images
+            if ( is_string( $image ) ) {
+                $image = new YDFSImage( $image );
+            }
+
+            // Get the maximum X and Y size
+            $max_x = YDConfig::get( 'max_img_size_x', '' );
+            $max_y = YDConfig::get( 'max_img_size_y', '' );
+            $max_x = empty( $max_x ) ? 999999 : $max_x;
+            $max_y = empty( $max_y ) ? 999999 : $max_y;
+
+            // Do nothing if maximum sizes are specified
+            if ( $max_x == 99999 && $max_y == 999999 ) {
+                return $image;
+            }
+
+            // Resize the image
+            $image->saveThumbnail( $max_x, $max_y, $image->getAbsolutePath() );
+
+            // Return the image
+            return $image;
+
+        }
+
+        // Prepare a query
+        function _prepareQuery( $sql, $order=null ) {
+            return is_null( $order ) ? $sql : $sql . ' ORDER BY ' . $order;
+        }
+
+        // Execute an insert
+        function _executeInsert( $table, $values ) {
+            if ( @ empty( $values['created'] ) ) {
+                $values['created'] = time();
+            }
+            if ( @ empty( $values['modified'] ) ) {
+                $values['modified'] = time();
+            }
+            foreach ( $values as $key=>$val ) {
+                if ( substr( $key, 0, 3 ) == 'cmd' ) {
+                    unset( $values[$key] );
+                }
+            }
+            return $this->db->executeInsert( $table, $values );
+        }
+
+        // Execute an update
+        function _executeUpdate( $table, $values, $where ) {
+            if ( @ empty( $values['created'] ) ) {
+                $values['created'] = time();
+            }
+            $values['modified'] = time();
+            foreach ( $values as $key=>$val ) {
+                if ( substr( $key, 0, 3 ) == 'cmd' ) {
+                    unset( $values[$key] );
+                }
+            }
+            return $this->db->executeUpdate( $table, $values, $where );
+        }
+
+        // Select items from a table with a given table name
+        function _selectFromTable( $table, $order=null, $limit=-1, $offset=-1 ) {
+            $sql = $this->_prepareQuery( 'SELECT * FROM ' . $table, $order, $limit, $offset );
+            return $this->db->getRecords( $sql );
+         }
+
+        // Select items from a table with a given id
+        function _selectFromTableUsingID( $table, $id ) {
+            $sql = $this->_prepareQuery( 'SELECT * FROM ' . $table . ' WHERE id = ' . $this->str( $id ) );
+            return $this->db->getRecord( $sql );
+        }
+
+        // Delete items from a table with a given id
+        function _deleteFromTableUsingID( $table, $id ) {
+            $sql = $this->_prepareQuery( 'DELETE FROM ' . $table . ' WHERE id = ' . $this->str( $id ) );
+            return $this->db->executeSql( $sql );
+        }
+
+        // Escapes a string
+        function str( $t ) {
+            return '\''. $this->db->escape( $t ) . '\'';
+        }
+
+        // Get a translation from the translation table
+        function t( $t ) {
+            return YDTplModT( array( 'w' => $t ) );
+        }
+
+    }
+
+?>

Modified: YDFramework2.0/trunk/examples/weblog/item.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/item.php	2006-12-27 10:47:33 UTC (rev 2273)
+++ YDFramework2.0/trunk/examples/weblog/item.php	2006-12-27 10:48:19 UTC (rev 2274)
@@ -1,197 +1,197 @@
-<?php
-
-    // Include the Yellow Duck Framework
-    include_once( dirname( __FILE__ ) . '/include/YDWeblog_init.php' );
-
-    // Includes
-    YDInclude( 'YDForm.php' );
-
-    // Class definition
-    class item extends YDWeblogRequest {
-
-        // Class constructor
-        function item() {
-
-            // Initialize the parent
-            $this->YDWeblogRequest();
-
-            // Disable caching
-            $this->caching = false;
-
-        }
-
-        // Default action
-        function actionDefault() {
-
-            // Get the ID from the query string
-            $id = $this->getIdFromQS();
-
-            // Get the weblog details and go to the default view if none is matched
-            $item  = @ $this->weblog->getPublicItemById( $id );
-            $this->redirectIfMissing( $item );
-
-            // Get the related items
-            $related_items = $this->weblog->getRelatedItemsByItem( YDConfig::get( 'weblog_entries_fp', 5 ), $item );
-
-            // Convert the list of images to a table of 3 columns
-            $item['images_as_table'] = YDArrayUtil::convertToTable( $item['images'], 3, true );
-
-            // Get the comments
-            $comments = $this->weblog->getComments( $id );
-
-            // Assign the variables to the template
-            $this->tpl->assign( 'title', $item['title'] );
-            $this->tpl->assign( 'item', $item );
-            $this->tpl->assign( 'related_items', $related_items );
-            $this->tpl->assign( 'comments', $comments );
-
-            // Create the comments form
-            $form = new YDWeblogForm(
-                'comments', 'POST', YDTplModLinkItemRespond( $item ), '_self', array( 'id' => 'commentform' )
-            );
-
-            // Add the fields
-            $form->addElement( 'text', 'username', t( 'name' ) );
-            $form->addElement( 'text', 'useremail', t( 'mail_not_published' ) );
-            $form->addElement( 'text', 'userwebsite', t( 'website' ) );
-            $form->addElement( 'textarea', 'comment', '' );
-            $form->addElement( 'submit', 'cmdSubmit', t( 'submit_comment' ), array( 'class' => 'button' ) );
-            $form->addElement( 'hidden', 'item_id' );
-
-            // Set the defaults
-            $defaults = array();
-            $defaults['item_id']     = $id;
-            $defaults['username']    = empty( $_COOKIE['YD_USER_NAME'] ) ? '' : $_COOKIE['YD_USER_NAME'];
-            $defaults['useremail']   = empty( $_COOKIE['YD_USER_EMAIL'] ) ? '' : $_COOKIE['YD_USER_EMAIL'];
-            $defaults['userwebsite'] = empty( $_COOKIE['YD_USER_WEBSITE'] ) ? '' : $_COOKIE['YD_USER_WEBSITE'];
-            $form->setDefaults( $defaults );
-
-            // Set the rules
-            $form->addRule( 'username',    'required',      t( 'err_name' ) );
-            $form->addRule( 'username',    'not_email',     t( 'err_name_email' ) );
-            $form->addRule( 'username',    'maxlength',     t( 'err_name_length' ), 35 );
-            $form->addRule( 'useremail',   'email',         t( 'err_email' ) );
-            $form->addRule( 'useremail',   'required',      t( 'err_email' ) );
-            $form->addRule( 'userwebsite', 'httpurl',       t( 'err_website' ) );
-            $form->addRule( 'comment',     'required',      t( 'err_comment' ) );
-            $form->addRule( 'comment',     'maxlength',     t( 'err_comment_length' ), YDConfig::get( 'max_comment_length', 1500 ) );
-            $form->addRule( 'comment',     'maxhyperlinks', t( 'err_comment_links' ), YDConfig::get( 'max_comment_links', 1 ) );
-            $form->addFormRule( array( & $this, 'checkDuplicateComments' ) );
-
-            // Add the filters
-            $form->addFilters( array( 'username', 'useremail', 'userwebsite' ), 'strip_html' );
-            $form->addFilter( 'comment', 'safe_html' );
-
-            // Process the form
-            if ( $form->validate() === true ) {
-
-                // Post request, so check comment interval
-                if ( $this->weblog->inSpamAttack() ) {
-                    die( '<b>ERROR:</b> Comment interval exceeded. Refusing request.' );
-                } else {
-                    $this->weblog->spamCheckMark();
-                }
-
-                // Get the form values
-                $values = $form->getValues();
-
-                // Simple spam protection
-                if ( ! empty( $values['userwebsite'] ) && strpos( $values['userwebsite'], '.' ) === false ) {
-                    $this->redirect( YDTplModLinkItem( $item, '#comment-' . $comment_id ) );
-                }
-
-                // Fix any faulty web addresses
-                if ( ! empty( $values['userwebsite'] ) && substr( strtolower( $values['userwebsite'] ), 0, 7 ) != 'http://' ) {
-                    $values['userwebsite'] = 'http://' . $values['userwebsite'];
-                }
-
-                // Save the username, useremail and userwebsite
-                setcookie( 'YD_USER_NAME',    $values['username'],    time() + 31536000, '/' );
-                setcookie( 'YD_USER_EMAIL',   $values['useremail'],   time() + 31536000, '/' );
-                setcookie( 'YD_USER_WEBSITE', $values['userwebsite'], time() + 31536000, '/' );
-
-                // Add the values to the database
-                $comment = $this->weblog->addComment( $values );
-
-                // Send an email if configured
-                if ( $comment['id'] > 0 && YDConfig::get( 'email_new_comment', true ) ) {
-
-                    // Include the YDEmail library
-                    YDInclude( 'YDEmail.php' );
-
-                    // Get the list of subscriptions
-                    $subscribers = $this->weblog->getCommentSubscribers( $id );
-
-                    // Get the list of subscriptions
-                    $users = $this->weblog->getUsers();
-
-                    // Add the comment to the email template
-                    $this->tpl->assign( 'eml_comment', $comment );
-
-                    // Create the email and send it
-                    $eml = new YDEmail();
-                    if ( ! empty( $item['user_email'] ) ) {
-                        $eml->setFrom( $item['user_email'], YDConfig::get( 'weblog_title', 'Untitled Weblog' ) );
-                    } else {
-                        $eml->setFrom( 'nobody at nowhere.com', YDConfig::get( 'weblog_title', 'Untitled Weblog' ) );
-                    }
-                    $eml->setReplyTo( 'no at reply.net' );
-                    $eml->addBcc( $item['user_email'] );
-
-                    // Spam emails do not go to the subscribers
-                    if ( strval( $comment['is_spam'] ) == '0' ) {
-                        foreach ( $subscribers as $subscriber ) {
-                            $eml->addBcc( $subscriber );
-                        }
-                    }
-
-                    // Email the item owners
-                    foreach ( $users as $user ) {
-                        $eml->addBcc( $user['email'], $user['name'] );
-                    }
-
-                    // Set the subject and body
-                    if ( strval( $comment['is_spam'] ) == '0' ) {
-                        $eml->setSubject( t('new_comment') . ': ' . strip_tags( $item['title'] ) );
-                        $eml->setHtmlBody( $this->fetch( 'comment_email' ) );
-                    } else {
-                        $eml->setSubject( '[spam] ' . t('new_comment') . ': ' . strip_tags( $item['title'] ) );
-                        $eml->setHtmlBody( $this->fetch( 'comment_email_spam' ) );
-                    }
-
-                    // Send the email
-                    $eml->send();
-
-                }
-
-                // Clear the cache
-                $this->clearCache();
-
-                // Redirect to the item
-                $this->redirect( YDTplModLinkItem( $item, '#comment-' . $comment['id'] ) );
-
-            }
-
-            // Add the form to the template
-            $this->tpl->assignForm( 'comments_form', $form );
-
-            // Display the template
-            $this->display();
-
-        }
-
-        // Function to check for duplicate comments
-        function checkDuplicateComments( $fields ) {
-            if ( $this->weblog->isDuplicateComment( $fields ) === true ) {
-                return array( '__ALL__' => t( 'err_duplicate_comment' ) );
-            } else {
-                return true;
-            }
-        }
-
-    }
-
-    // Process the request
-    YDInclude( 'YDF2_process.php' );
-
+<?php
+
+    // Include the Yellow Duck Framework
+    include_once( dirname( __FILE__ ) . '/include/YDWeblog_init.php' );
+
+    // Includes
+    YDInclude( 'YDForm.php' );
+
+    // Class definition
+    class item extends YDWeblogRequest {
+
+        // Class constructor
+        function item() {
+
+            // Initialize the parent
+            $this->YDWeblogRequest();
+
+            // Disable caching
+            $this->caching = false;
+
+        }
+
+        // Default action
+        function actionDefault() {
+
+            // Get the ID from the query string
+            $id = $this->getIdFromQS();
+
+            // Get the weblog details and go to the default view if none is matched
+            $item  = @ $this->weblog->getPublicItemById( $id );
+            $this->redirectIfMissing( $item );
+
+            // Get the related items
+            $related_items = $this->weblog->getRelatedItemsByItem( YDConfig::get( 'weblog_entries_fp', 5 ), $item );
+
+            // Convert the list of images to a table of 3 columns
+            $item['images_as_table'] = YDArrayUtil::convertToTable( $item['images'], 3, true );
+
+            // Get the comments
+            $comments = $this->weblog->getComments( $id );
+
+            // Assign the variables to the template
+            $this->tpl->assign( 'title', $item['title'] );
+            $this->tpl->assign( 'item', $item );
+            $this->tpl->assign( 'related_items', $related_items );
+            $this->tpl->assign( 'comments', $comments );
+
+            // Create the comments form
+            $form = new YDWeblogForm(
+                'comments', 'POST', YDTplModLinkItemRespond( $item ), '_self', array( 'id' => 'commentform' )
+            );
+
+            // Add the fields
+            $form->addElement( 'text', 'username', t( 'name' ) );
+            $form->addElement( 'text', 'useremail', t( 'mail_not_published' ) );
+            $form->addElement( 'text', 'userwebsite', t( 'website' ) );
+            $form->addElement( 'textarea', 'comment', '' );
+            $form->addElement( 'submit', 'cmdSubmit', t( 'submit_comment' ), array( 'class' => 'button' ) );
+            $form->addElement( 'hidden', 'item_id' );
+
+            // Set the defaults
+            $defaults = array();
+            $defaults['item_id']     = $id;
+            $defaults['username']    = empty( $_COOKIE['YD_USER_NAME'] ) ? '' : $_COOKIE['YD_USER_NAME'];
+            $defaults['useremail']   = empty( $_COOKIE['YD_USER_EMAIL'] ) ? '' : $_COOKIE['YD_USER_EMAIL'];
+            $defaults['userwebsite'] = empty( $_COOKIE['YD_USER_WEBSITE'] ) ? '' : $_COOKIE['YD_USER_WEBSITE'];
+            $form->setDefaults( $defaults );
+
+            // Set the rules
+            $form->addRule( 'username',    'required',      t( 'err_name' ) );
+            $form->addRule( 'username',    'not_email',     t( 'err_name_email' ) );
+            $form->addRule( 'username',    'maxlength',     t( 'err_name_length' ), 35 );
+            $form->addRule( 'useremail',   'email',         t( 'err_email' ) );
+            $form->addRule( 'useremail',   'required',      t( 'err_email' ) );
+            $form->addRule( 'userwebsite', 'httpurl',       t( 'err_website' ) );
+            $form->addRule( 'comment',     'required',      t( 'err_comment' ) );
+            $form->addRule( 'comment',     'maxlength',     t( 'err_comment_length' ), YDConfig::get( 'max_comment_length', 1500 ) );
+            $form->addRule( 'comment',     'maxhyperlinks', t( 'err_comment_links' ), YDConfig::get( 'max_comment_links', 1 ) );
+            $form->addFormRule( array( & $this, 'checkDuplicateComments' ) );
+
+            // Add the filters
+            $form->addFilters( array( 'username', 'useremail', 'userwebsite' ), 'strip_html' );
+            //$form->addFilter( 'comment', 'safe_html' );
+
+            // Process the form
+            if ( $form->validate() === true ) {
+
+                // Post request, so check comment interval
+                if ( $this->weblog->inSpamAttack() ) {
+                    die( '<b>ERROR:</b> Comment interval exceeded. Refusing request.' );
+                } else {
+                    $this->weblog->spamCheckMark();
+                }
+
+                // Get the form values
+                $values = $form->getValues();
+
+                // Simple spam protection
+                if ( ! empty( $values['userwebsite'] ) && strpos( $values['userwebsite'], '.' ) === false ) {
+                    $this->redirect( YDTplModLinkItem( $item, '#comment-' . $comment_id ) );
+                }
+
+                // Fix any faulty web addresses
+                if ( ! empty( $values['userwebsite'] ) && substr( strtolower( $values['userwebsite'] ), 0, 7 ) != 'http://' ) {
+                    $values['userwebsite'] = 'http://' . $values['userwebsite'];
+                }
+
+                // Save the username, useremail and userwebsite
+                setcookie( 'YD_USER_NAME',    $values['username'],    time() + 31536000, '/' );
+                setcookie( 'YD_USER_EMAIL',   $values['useremail'],   time() + 31536000, '/' );
+                setcookie( 'YD_USER_WEBSITE', $values['userwebsite'], time() + 31536000, '/' );
+
+                // Add the values to the database
+                $comment = $this->weblog->addComment( $values );
+
+                // Send an email if configured
+                if ( $comment['id'] > 0 && YDConfig::get( 'email_new_comment', true ) ) {
+
+                    // Include the YDEmail library
+                    YDInclude( 'YDEmail.php' );
+
+                    // Get the list of subscriptions
+                    $subscribers = $this->weblog->getCommentSubscribers( $id );
+
+                    // Get the list of subscriptions
+                    $users = $this->weblog->getUsers();
+
+                    // Add the comment to the email template
+                    $this->tpl->assign( 'eml_comment', $comment );
+
+                    // Create the email and send it
+                    $eml = new YDEmail();
+                    if ( ! empty( $item['user_email'] ) ) {
+                        $eml->setFrom( $item['user_email'], YDConfig::get( 'weblog_title', 'Untitled Weblog' ) );
+                    } else {
+                        $eml->setFrom( 'nobody at nowhere.com', YDConfig::get( 'weblog_title', 'Untitled Weblog' ) );
+                    }
+                    $eml->setReplyTo( 'no at reply.net' );
+                    $eml->addBcc( $item['user_email'] );
+
+                    // Spam emails do not go to the subscribers
+                    if ( strval( $comment['is_spam'] ) == '0' ) {
+                        foreach ( $subscribers as $subscriber ) {
+                            $eml->addBcc( $subscriber );
+                        }
+                    }
+
+                    // Email the item owners
+                    foreach ( $users as $user ) {
+                        $eml->addBcc( $user['email'], $user['name'] );
+                    }
+
+                    // Set the subject and body
+                    if ( strval( $comment['is_spam'] ) == '0' ) {
+                        $eml->setSubject( t('new_comment') . ': ' . strip_tags( $item['title'] ) );
+                        $eml->setHtmlBody( $this->fetch( 'comment_email' ) );
+                    } else {
+                        $eml->setSubject( '[spam] ' . t('new_comment') . ': ' . strip_tags( $item['title'] ) );
+                        $eml->setHtmlBody( $this->fetch( 'comment_email_spam' ) );
+                    }
+
+                    // Send the email
+                    $eml->send();
+
+                }
+
+                // Clear the cache
+                $this->clearCache();
+
+                // Redirect to the item
+                $this->redirect( YDTplModLinkItem( $item, '#comment-' . $comment['id'] ) );
+
+            }
+
+            // Add the form to the template
+            $this->tpl->assignForm( 'comments_form', $form );
+
+            // Display the template
+            $this->display();
+
+        }
+
+        // Function to check for duplicate comments
+        function checkDuplicateComments( $fields ) {
+            if ( $this->weblog->isDuplicateComment( $fields ) === true ) {
+                return array( '__ALL__' => t( 'err_duplicate_comment' ) );
+            } else {
+                return true;
+            }
+        }
+
+    }
+
+    // Process the request
+    YDInclude( 'YDF2_process.php' );
+
 ?>
\ No newline at end of file



From pclaerhout at mail.berlios.de  Wed Dec 27 13:06:54 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Wed, 27 Dec 2006 13:06:54 +0100
Subject: [ydf-devel] r2275 - YDFramework2.0/trunk/examples
Message-ID: <200612271206.kBRC6sdB030324@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-27 13:06:53 +0100 (Wed, 27 Dec 2006)
New Revision: 2275

Modified:
   YDFramework2.0/trunk/examples/index.tpl
Log:
Fixed a small typo in the html of the examples.

Modified: YDFramework2.0/trunk/examples/index.tpl
===================================================================
--- YDFramework2.0/trunk/examples/index.tpl	2006-12-27 10:48:19 UTC (rev 2274)
+++ YDFramework2.0/trunk/examples/index.tpl	2006-12-27 12:06:53 UTC (rev 2275)
@@ -384,7 +384,7 @@
         </tr>
         <tr>
             <td valign="top">
-                <a href="database_named_instances.php">Using named database instances/a><br/>            </td>
+                <a href="database_named_instances.php">Using named database instances</a><br/>            </td>
             <td valign="top">
                 <a href="{$YD_SELF_SCRIPT}?do=source&id=database_named_instances.php">database_named_instances.php</a>            </td>
         </tr>



From pclaerhout at mail.berlios.de  Wed Dec 27 14:45:33 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Wed, 27 Dec 2006 14:45:33 +0100
Subject: [ydf-devel] r2276 - YDFramework2.0/trunk/YDFramework2/YDClasses
Message-ID: <200612271345.kBRDjX7T031640@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-27 14:45:33 +0100 (Wed, 27 Dec 2006)
New Revision: 2276

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabase.php
Log:
Changed the YDDatabaseDriver class so that it also changes the sequence `#_ to the table name (so that it works fine with YDDatabaseObject).

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabase.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabase.php	2006-12-27 12:06:53 UTC (rev 2275)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabase.php	2006-12-27 13:45:33 UTC (rev 2276)
@@ -1708,6 +1708,7 @@
 
             // Add the table prefix
             $sql = str_replace( ' #_', ' ' . YDConfig::get( 'YD_DB_TABLEPREFIX', '' ), $sql );
+            $sql = str_replace( ' `#_', ' `' . YDConfig::get( 'YD_DB_TABLEPREFIX', '' ), $sql );
 
             // Log the statement
             $this->_logSql( $sql );



From pclaerhout at mail.berlios.de  Wed Dec 27 15:43:50 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Wed, 27 Dec 2006 15:43:50 +0100
Subject: [ydf-devel] r2277 - YDFramework2.0/trunk/YDFramework2/YDClasses
Message-ID: <200612271443.kBREhokj004420@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-27 15:43:50 +0100 (Wed, 27 Dec 2006)
New Revision: 2277

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabaseTree.php
Log:
Removed the check to see if the parent id exists or not.

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabaseTree.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabaseTree.php	2006-12-27 13:45:33 UTC (rev 2276)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabaseTree.php	2006-12-27 14:43:50 UTC (rev 2277)
@@ -715,13 +715,13 @@
                 $values[ $parentField ] = 0;
             }
 
-            // Check if the parent node exists
+            /*// Check if the parent node exists
             if ( isset( $values[ $parentField ] ) && intval( $values[ $parentField ] ) != 0 ) {
                 $node = $this->getNode( $values[ $parentField ] );
                 if ( ! $node ) {
                     trigger_error( 'Parent node (' . $values[ $parentField ] . ') does not exist in the tree!', YD_ERROR );
                 }
-            }
+            }*/
 
             // Perform the insert
             $this->db->executeInsert( $this->table, $values );



From pclaerhout at mail.berlios.de  Wed Dec 27 21:08:51 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Wed, 27 Dec 2006 21:08:51 +0100
Subject: [ydf-devel] r2278 - YDFramework2.0/trunk/YDFramework2/YDClasses
Message-ID: <200612272008.kBRK8p8l018665@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-27 21:08:50 +0100 (Wed, 27 Dec 2006)
New Revision: 2278

Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDUtil.php
Log:
Added an option to convert tables in a vertical direction.

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDUtil.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDUtil.php	2006-12-27 14:43:50 UTC (rev 2277)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDUtil.php	2006-12-27 20:08:50 UTC (rev 2278)
@@ -118,17 +118,18 @@
          *  If you enable the $fillLastRow option, it will fill the last row with null values to match the number of
          *	columns.
          *
-         *  @param $array		The single dimension array you want to convert.
-         *  @param $columns		The number of columns the table should have.
-         *  @param $fillLastRow	(optional) If true, the last row will be filled with null values so that it matches the
-         *						number of columns.
+         *  @param $array		    The single dimension array you want to convert.
+         *  @param $columns		    The number of columns the table should have.
+         *  @param $fillLastRow	    (optional) If true, the last row will be filled with null values so that it matches
+         *						    the number of columns.
+         *  @param $horizontally	(optional) If true, rows will be filled first, then it will create an new row
          *
          *  @returns	A multi-dimension array with the contents of the original array converted to a table with the
          *				indicated number of colums.
          *
          *	@static
          */
-        function convertToTable( $array, $columns, $fillLastRow=false ) {
+        function convertToTable( $array, $columns, $fillLastRow=false, $horizontal=true ) {
 
             // If the number of columns is 1, return the original array
             if ( $columns == 1 ) {
@@ -140,20 +141,49 @@
                 return $array;
             }
 
-            // Use the array_chunk function to convert to a table
-            $newArray = @array_chunk( $array, $columns );
-            if ( $newArray == null ) {
-                trigger_error( 'Failed to split the array in chunks.', YD_ERROR );
-            }
+            // Convert horizontally or vertically
+            if ( $horizontal ) {
 
-            // Pad the last row
-            if ( $fillLastRow ) {
-                $lastRow = $newArray[sizeof( $newArray )-1];
-                $numMissing = $columns - sizeof( $lastRow );
-                for ( $i = 0; $i < $numMissing; $i++ ) {
-                    array_push( $newArray[sizeof( $newArray )-1], null );
+                // Use the array_chunk function to convert to a table
+                $newArray = @array_chunk( $array, $columns );
+                if ( $newArray == null ) {
+                    trigger_error( 'Failed to split the array in chunks.', YD_ERROR );
                 }
 
+                // Pad the last row
+                if ( $fillLastRow ) {
+                    $lastRow = $newArray[sizeof( $newArray )-1];
+                    $numMissing = $columns - sizeof( $lastRow );
+                    for ( $i = 0; $i < $numMissing; $i++ ) {
+                        array_push( $newArray[sizeof( $newArray )-1], null );
+                    }
+
+                }
+
+            } else {
+
+                // Get only the values of the array
+                $array = array_values( $array );
+
+                // Check how many rows we will have
+                $rows = ceil( sizeof( $array ) / $columns );
+
+                // Keep track of the current row
+                $currentItem = 0;
+                $currentCol  = 0;
+
+                // Start with a new empty array
+                $newArray = array();
+
+                // Loop over the rows
+                while ( $currentCol < $columns ) {
+                    foreach ( range( 0, $rows-1 ) as $row ) {
+                        $newArray[$row][$currentCol] = isset( $array[$currentItem] ) ? $array[$currentItem] : null;
+                        $currentItem++;
+                    }
+                    $currentCol++;
+                }
+
             }
 
             // Return the array



From pclaerhout at mail.berlios.de  Thu Dec 28 18:49:41 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Thu, 28 Dec 2006 18:49:41 +0100
Subject: [ydf-devel] r2279 - in YDFramework2.0/trunk/YDFramework2: 3rdparty
	YDClasses
Message-ID: <200612281749.kBSHnfA5023149@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-28 18:49:40 +0100 (Thu, 28 Dec 2006)
New Revision: 2279

Added:
   YDFramework2.0/trunk/YDFramework2/3rdparty/bmp.php
Modified:
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabaseTree.php
   YDFramework2.0/trunk/YDFramework2/YDClasses/YDFileSystem.php
Log:
Improved YDFSImage and YDPath to support BMP images.

Added: YDFramework2.0/trunk/YDFramework2/3rdparty/bmp.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/bmp.php	2006-12-27 20:08:50 UTC (rev 2278)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/bmp.php	2006-12-28 17:49:40 UTC (rev 2279)
@@ -0,0 +1,529 @@
+<?
+/*
+*------------------------------------------------------------
+*                   BMP Image functions
+*------------------------------------------------------------
+*                      By JPEXS
+*/
+
+
+
+
+/*
+*------------------------------------------------------------
+*                    ImageBMP
+*------------------------------------------------------------
+*            - Creates new BMP file
+*
+*         Parameters:  $img - Target image
+*                      $file - Target file to store
+*                            - if not specified, bmp is returned
+*
+*           Returns: if $file specified - true if OK
+                     if $file not specified - image data
+*/
+function imagebmp($img,$file="",$RLE=0)
+{
+
+
+$ColorCount=imagecolorstotal($img);
+
+$Transparent=imagecolortransparent($img);
+$IsTransparent=$Transparent!=-1;
+
+
+if($IsTransparent) $ColorCount--;
+
+if($ColorCount==0) {$ColorCount=0; $BitCount=24;};
+if(($ColorCount>0)and($ColorCount<=2)) {$ColorCount=2; $BitCount=1;};
+if(($ColorCount>2)and($ColorCount<=16)) { $ColorCount=16; $BitCount=4;};
+if(($ColorCount>16)and($ColorCount<=256)) { $ColorCount=0; $BitCount=8;};
+
+
+                $Width=imagesx($img);
+                $Height=imagesy($img);
+
+                $Zbytek=(4-($Width/(8/$BitCount))%4)%4;
+
+                if($BitCount<24) $palsize=pow(2,$BitCount)*4;
+
+                $size=(floor($Width/(8/$BitCount))+$Zbytek)*$Height+54;
+                $size+=$palsize;
+                $offset=54+$palsize;
+
+                // Bitmap File Header
+                $ret = 'BM';                        // header (2b)
+                $ret .= int_to_dword($size);        // size of file (4b)
+                $ret .= int_to_dword(0);        // reserved (4b)
+                $ret .= int_to_dword($offset);        // byte location in the file which is first byte of IMAGE (4b)
+                // Bitmap Info Header
+                $ret .= int_to_dword(40);        // Size of BITMAPINFOHEADER (4b)
+                $ret .= int_to_dword($Width);        // width of bitmap (4b)
+                $ret .= int_to_dword($Height);        // height of bitmap (4b)
+                $ret .= int_to_word(1);        // biPlanes = 1 (2b)
+                $ret .= int_to_word($BitCount);        // biBitCount = {1 (mono) or 4 (16 clr ) or 8 (256 clr) or 24 (16 Mil)} (2b)
+                $ret .= int_to_dword($RLE);        // RLE COMPRESSION (4b)
+                $ret .= int_to_dword(0);        // width x height (4b)
+                $ret .= int_to_dword(0);        // biXPelsPerMeter (4b)
+                $ret .= int_to_dword(0);        // biYPelsPerMeter (4b)
+                $ret .= int_to_dword(0);        // Number of palettes used (4b)
+                $ret .= int_to_dword(0);        // Number of important colour (4b)
+                // image data
+
+                $CC=$ColorCount;
+                $sl1=strlen($ret);
+                if($CC==0) $CC=256;
+                if($BitCount<24)
+                   {
+                    $ColorTotal=imagecolorstotal($img);
+                     if($IsTransparent) $ColorTotal--;
+
+                     for($p=0;$p<$ColorTotal;$p++)
+                     {
+                      $color=imagecolorsforindex($img,$p);
+                       $ret.=inttobyte($color["blue"]);
+                       $ret.=inttobyte($color["green"]);
+                       $ret.=inttobyte($color["red"]);
+                       $ret.=inttobyte(0); //RESERVED
+                     };
+
+                    $CT=$ColorTotal;
+                  for($p=$ColorTotal;$p<$CC;$p++)
+                       {
+                      $ret.=inttobyte(0);
+                      $ret.=inttobyte(0);
+                      $ret.=inttobyte(0);
+                      $ret.=inttobyte(0); //RESERVED
+                     };
+                   };
+
+
+if($BitCount<=8)
+{
+
+ for($y=$Height-1;$y>=0;$y--)
+ {
+  $bWrite="";
+  for($x=0;$x<$Width;$x++)
+   {
+   $color=imagecolorat($img,$x,$y);
+   $bWrite.=decbinx($color,$BitCount);
+   if(strlen($bWrite)==8)
+    {
+     $retd.=inttobyte(bindec($bWrite));
+     $bWrite="";
+    };
+   };
+
+  if((strlen($bWrite)<8)and(strlen($bWrite)!=0))
+    {
+     $sl=strlen($bWrite);
+     for($t=0;$t<8-$sl;$t++)
+      $sl.="0";
+     $retd.=inttobyte(bindec($bWrite));
+    };
+ for($z=0;$z<$Zbytek;$z++)
+   $retd.=inttobyte(0);
+ };
+};
+
+if(($RLE==1)and($BitCount==8))
+{
+ for($t=0;$t<strlen($retd);$t+=4)
+  {
+   if($t!=0)
+   if(($t)%$Width==0)
+    $ret.=chr(0).chr(0);
+
+   if(($t+5)%$Width==0)
+   {
+     $ret.=chr(0).chr(5).substr($retd,$t,5).chr(0);
+     $t+=1;
+   }
+   if(($t+6)%$Width==0)
+    {
+     $ret.=chr(0).chr(6).substr($retd,$t,6);
+     $t+=2;
+    }
+    else
+    {
+     $ret.=chr(0).chr(4).substr($retd,$t,4);
+    };
+  };
+  $ret.=chr(0).chr(1);
+}
+else
+{
+$ret.=$retd;
+};
+
+
+                if($BitCount==24)
+                {
+                for($z=0;$z<$Zbytek;$z++)
+                 $Dopl.=chr(0);
+
+                for($y=$Height-1;$y>=0;$y--)
+                 {
+                 for($x=0;$x<$Width;$x++)
+                        {
+                           $color=imagecolorsforindex($img,ImageColorAt($img,$x,$y));
+                           $ret.=chr($color["blue"]).chr($color["green"]).chr($color["red"]);
+                        }
+                 $ret.=$Dopl;
+                 };
+
+                 };
+
+  if($file!="")
+   {
+    $r=($f=fopen($file,"w"));
+    $r=$r and fwrite($f,$ret);
+    $r=$r and fclose($f);
+    return $r;
+   }
+  else
+  {
+   echo $ret;
+  };
+};
+
+
+/*
+*------------------------------------------------------------
+*                    ImageCreateFromBmp
+*------------------------------------------------------------
+*            - Reads image from a BMP file
+*
+*         Parameters:  $file - Target file to load
+*
+*            Returns: Image ID
+*/
+
+function imagecreatefrombmp($file)
+{
+global  $CurrentBit, $echoMode;
+
+$f=fopen($file,"r");
+$Header=fread($f,2);
+
+if($Header=="BM")
+{
+ $Size=freaddword($f);
+ $Reserved1=freadword($f);
+ $Reserved2=freadword($f);
+ $FirstByteOfImage=freaddword($f);
+
+ $SizeBITMAPINFOHEADER=freaddword($f);
+ $Width=freaddword($f);
+ $Height=freaddword($f);
+ $biPlanes=freadword($f);
+ $biBitCount=freadword($f);
+ $RLECompression=freaddword($f);
+ $WidthxHeight=freaddword($f);
+ $biXPelsPerMeter=freaddword($f);
+ $biYPelsPerMeter=freaddword($f);
+ $NumberOfPalettesUsed=freaddword($f);
+ $NumberOfImportantColors=freaddword($f);
+
+if($biBitCount<24)
+ {
+  $img=imagecreate($Width,$Height);
+  $Colors=pow(2,$biBitCount);
+  for($p=0;$p<$Colors;$p++)
+   {
+    $B=freadbyte($f);
+    $G=freadbyte($f);
+    $R=freadbyte($f);
+    $Reserved=freadbyte($f);
+    $Palette[]=imagecolorallocate($img,$R,$G,$B);
+   };
+
+
+
+
+if($RLECompression==0)
+{
+   $Zbytek=(4-ceil(($Width/(8/$biBitCount)))%4)%4;
+
+for($y=$Height-1;$y>=0;$y--)
+    {
+     $CurrentBit=0;
+     for($x=0;$x<$Width;$x++)
+      {
+         $C=freadbits($f,$biBitCount);
+       imagesetpixel($img,$x,$y,$Palette[$C]);
+      };
+    if($CurrentBit!=0) {freadbyte($f);};
+    for($g=0;$g<$Zbytek;$g++)
+     freadbyte($f);
+     };
+
+ };
+};
+
+
+if($RLECompression==1) //$BI_RLE8
+{
+$y=$Height;
+
+$pocetb=0;
+
+while(true)
+{
+$y--;
+$prefix=freadbyte($f);
+$suffix=freadbyte($f);
+$pocetb+=2;
+
+$echoit=false;
+
+if($echoit)echo "Prefix: $prefix Suffix: $suffix<BR>";
+if(($prefix==0)and($suffix==1)) break;
+if(feof($f)) break;
+
+while(!(($prefix==0)and($suffix==0)))
+{
+ if($prefix==0)
+  {
+   $pocet=$suffix;
+   $Data.=fread($f,$pocet);
+   $pocetb+=$pocet;
+   if($pocetb%2==1) {freadbyte($f); $pocetb++;};
+  };
+ if($prefix>0)
+  {
+   $pocet=$prefix;
+   for($r=0;$r<$pocet;$r++)
+    $Data.=chr($suffix);
+  };
+ $prefix=freadbyte($f);
+ $suffix=freadbyte($f);
+ $pocetb+=2;
+ if($echoit) echo "Prefix: $prefix Suffix: $suffix<BR>";
+};
+
+for($x=0;$x<strlen($Data);$x++)
+ {
+  imagesetpixel($img,$x,$y,$Palette[ord($Data[$x])]);
+ };
+$Data="";
+
+};
+
+};
+
+
+if($RLECompression==2) //$BI_RLE4
+{
+$y=$Height;
+$pocetb=0;
+
+/*while(!feof($f))
+ echo freadbyte($f)."_".freadbyte($f)."<BR>";*/
+while(true)
+{
+//break;
+$y--;
+$prefix=freadbyte($f);
+$suffix=freadbyte($f);
+$pocetb+=2;
+
+$echoit=false;
+
+if($echoit)echo "Prefix: $prefix Suffix: $suffix<BR>";
+if(($prefix==0)and($suffix==1)) break;
+if(feof($f)) break;
+
+while(!(($prefix==0)and($suffix==0)))
+{
+ if($prefix==0)
+  {
+   $pocet=$suffix;
+
+   $CurrentBit=0;
+   for($h=0;$h<$pocet;$h++)
+    $Data.=chr(freadbits($f,4));
+   if($CurrentBit!=0) freadbits($f,4);
+   $pocetb+=ceil(($pocet/2));
+   if($pocetb%2==1) {freadbyte($f); $pocetb++;};
+  };
+ if($prefix>0)
+  {
+   $pocet=$prefix;
+   $i=0;
+   for($r=0;$r<$pocet;$r++)
+    {
+    if($i%2==0)
+     {
+      $Data.=chr($suffix%16);
+     }
+     else
+     {
+      $Data.=chr(floor($suffix/16));
+     };
+    $i++;
+    };
+  };
+ $prefix=freadbyte($f);
+ $suffix=freadbyte($f);
+ $pocetb+=2;
+ if($echoit) echo "Prefix: $prefix Suffix: $suffix<BR>";
+};
+
+for($x=0;$x<strlen($Data);$x++)
+ {
+  imagesetpixel($img,$x,$y,$Palette[ord($Data[$x])]);
+ };
+$Data="";
+
+};
+
+};
+
+
+ if($biBitCount==24)
+{
+ $img=imagecreatetruecolor($Width,$Height);
+ $Zbytek=$Width%4;
+
+   for($y=$Height-1;$y>=0;$y--)
+    {
+     for($x=0;$x<$Width;$x++)
+      {
+       $B=freadbyte($f);
+       $G=freadbyte($f);
+       $R=freadbyte($f);
+       $color=imagecolorexact($img,$R,$G,$B);
+       if($color==-1) $color=imagecolorallocate($img,$R,$G,$B);
+       imagesetpixel($img,$x,$y,$color);
+      }
+    for($z=0;$z<$Zbytek;$z++)
+     freadbyte($f);
+   };
+};
+return $img;
+
+};
+
+
+fclose($f);
+
+
+};
+
+
+
+
+
+/*
+* Helping functions:
+*-------------------------
+*
+* freadbyte($file) - reads 1 byte from $file
+* freadword($file) - reads 2 bytes (1 word) from $file
+* freaddword($file) - reads 4 bytes (1 dword) from $file
+* freadlngint($file) - same as freaddword($file)
+* decbin8($d) - returns binary string of d zero filled to 8
+* RetBits($byte,$start,$len) - returns bits $start->$start+$len from $byte
+* freadbits($file,$count) - reads next $count bits from $file
+* RGBToHex($R,$G,$B) - convert $R, $G, $B to hex
+* int_to_dword($n) - returns 4 byte representation of $n
+* int_to_word($n) - returns 2 byte representation of $n
+*/
+
+function freadbyte($f)
+{
+ return ord(fread($f,1));
+};
+
+function freadword($f)
+{
+ $b1=freadbyte($f);
+ $b2=freadbyte($f);
+ return $b2*256+$b1;
+};
+
+
+function freadlngint($f)
+{
+return freaddword($f);
+};
+
+function freaddword($f)
+{
+ $b1=freadword($f);
+ $b2=freadword($f);
+ return $b2*65536+$b1;
+};
+
+
+
+function RetBits($byte,$start,$len)
+{
+$bin=decbin8($byte);
+$r=bindec(substr($bin,$start,$len));
+return $r;
+
+};
+
+
+
+$CurrentBit=0;
+function freadbits($f,$count)
+{
+ global $CurrentBit,$SMode;
+ $Byte=freadbyte($f);
+ $LastCBit=$CurrentBit;
+ $CurrentBit+=$count;
+ if($CurrentBit==8)
+  {
+   $CurrentBit=0;
+  }
+ else
+  {
+   fseek($f,ftell($f)-1);
+  };
+ return RetBits($Byte,$LastCBit,$count);
+};
+
+
+
+function RGBToHex($Red,$Green,$Blue)
+  {
+   $hRed=dechex($Red);if(strlen($hRed)==1) $hRed="0$hRed";
+   $hGreen=dechex($Green);if(strlen($hGreen)==1) $hGreen="0$hGreen";
+   $hBlue=dechex($Blue);if(strlen($hBlue)==1) $hBlue="0$hBlue";
+   return($hRed.$hGreen.$hBlue);
+  };
+
+        function int_to_dword($n)
+        {
+                return chr($n & 255).chr(($n >> 8) & 255).chr(($n >> 16) & 255).chr(($n >> 24) & 255);
+        }
+        function int_to_word($n)
+        {
+                return chr($n & 255).chr(($n >> 8) & 255);
+        }
+
+
+function decbin8($d)
+{
+return decbinx($d,8);
+};
+
+function decbinx($d,$n)
+{
+$bin=decbin($d);
+$sbin=strlen($bin);
+for($j=0;$j<$n-$sbin;$j++)
+ $bin="0$bin";
+return $bin;
+};
+
+function inttobyte($n)
+{
+return chr($n);
+};
+
+?>
\ No newline at end of file

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabaseTree.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabaseTree.php	2006-12-27 20:08:50 UTC (rev 2278)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDDatabaseTree.php	2006-12-28 17:49:40 UTC (rev 2279)
@@ -649,7 +649,7 @@
                 if ( $id == 0 ) {
                     continue;
                 }
-                $query = sprintf(
+                @ $query = sprintf(
                     'update %s set nlevel = %d, nleft = %d, nright = %d where %s = %d',
                     $this->table, $row->nlevel, $row->nleft, $row->nright, $this->fields['id'], $id
                 );

Modified: YDFramework2.0/trunk/YDFramework2/YDClasses/YDFileSystem.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/YDClasses/YDFileSystem.php	2006-12-27 20:08:50 UTC (rev 2278)
+++ YDFramework2.0/trunk/YDFramework2/YDClasses/YDFileSystem.php	2006-12-28 17:49:40 UTC (rev 2279)
@@ -28,6 +28,7 @@
 
     // Includes
     include_once( YD_DIR_HOME_CLS . '/YDUtil.php');
+    include_once( YD_DIR_HOME . '/3rdparty/bmp.php' );
 
     // YDFSImage cropping specific constants
     define( 'YD_FS_CROP_UNCHANGED', 1 );
@@ -444,6 +445,9 @@
             if ( substr( $header, 0, 8 ) == "\211PNG\r\n\032\n" ) {
                 return 'png';
             }
+            if ( substr( $header, 0, 2 ) == "BM" ) {
+                return 'bmp';
+            }
 
             // Not an image
             return false;
@@ -1077,6 +1081,8 @@
                 $src_img = imagecreatefromgif( $this->getAbsolutePath() );
             } elseif ( $img_type == 'png' ) {
                 $src_img = imagecreatefrompng( $this->getAbsolutePath() );
+            } elseif ( $img_type == 'bmp' ) {
+                $src_img = imagecreatefrombmp( $this->getAbsolutePath() );
             } else {
                 $src_img = imagecreatefromjpeg( $this->getAbsolutePath() );
             }



From pclaerhout at mail.berlios.de  Fri Dec 29 21:26:17 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Fri, 29 Dec 2006 21:26:17 +0100
Subject: [ydf-devel] r2280 - YDFramework2.0/trunk/YDFramework2/3rdparty
Message-ID: <200612292026.kBTKQHJl003009@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-29 21:26:16 +0100 (Fri, 29 Dec 2006)
New Revision: 2280

Modified:
   YDFramework2.0/trunk/YDFramework2/3rdparty/bmp.php
Log:
Fixed the short open tag for bmp.php.

Modified: YDFramework2.0/trunk/YDFramework2/3rdparty/bmp.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/3rdparty/bmp.php	2006-12-28 17:49:40 UTC (rev 2279)
+++ YDFramework2.0/trunk/YDFramework2/3rdparty/bmp.php	2006-12-29 20:26:16 UTC (rev 2280)
@@ -1,4 +1,4 @@
-<?
+<?php
 /*
 *------------------------------------------------------------
 *                   BMP Image functions



From pclaerhout at mail.berlios.de  Sat Dec 30 21:00:29 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sat, 30 Dec 2006 21:00:29 +0100
Subject: [ydf-devel] r2281 - in YDFramework2.0/trunk/examples/weblog: .
	include include/languages manage skins/default
	skins/default_with_lightbox
Message-ID: <200612302000.kBUK0TgS011887@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-30 21:00:28 +0100 (Sat, 30 Dec 2006)
New Revision: 2281

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
   YDFramework2.0/trunk/examples/weblog/item.php
   YDFramework2.0/trunk/examples/weblog/manage/__mng_header.tpl
   YDFramework2.0/trunk/examples/weblog/skins/default/item.tpl
   YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/item.tpl
Log:
Added captcha security to the weblog application (just in case, like with yellowduck.be, the akismet service is not available).

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-29 20:26:16 UTC (rev 2280)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-30 20:00:28 UTC (rev 2281)
@@ -585,6 +585,9 @@
         // Add a comment
         function addComment( $values ) {
 
+            // Remove the unneeded values
+            unset( $values['security_code'] );
+
             // Update the values
             $values['userip'] = $_SERVER['REMOTE_ADDR'];
             $values['useragent'] = $_SERVER['HTTP_USER_AGENT'];

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-29 20:26:16 UTC (rev 2280)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-30 20:00:28 UTC (rev 2281)
@@ -99,6 +99,8 @@
 $GLOBALS['t']['choose_no_spam'] = 'Choose "no spam" here';
 $GLOBALS['t']['err_userspam'] = 'Detected a spam attack';
 $GLOBALS['t']['err_duplicate_comment'] = 'Duplicate comment detected';
+$GLOBALS['t']['enter_security_code'] = 'Enter the security code';
+$GLOBALS['t']['err_security_code_not_valid'] = 'The security code is not valid';
 
 // comment_email.tpl
 $GLOBALS['t']['new_comment'] = 'New comment';

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-29 20:26:16 UTC (rev 2280)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-30 20:00:28 UTC (rev 2281)
@@ -99,6 +99,8 @@
 $GLOBALS['t']['choose_no_spam'] = 'Kies hier "geen spam"';
 $GLOBALS['t']['err_userspam'] = 'Detecteerde een spam aanval';
 $GLOBALS['t']['err_duplicate_comment'] = 'Duplicaat commentaar gededecteerd';
+$GLOBALS['t']['enter_security_code'] = 'Geef de veiligheidscode in';
+$GLOBALS['t']['err_security_code_not_valid'] = 'De veiligheidscode is niet correct';
 
 // comment_email.tpl
 $GLOBALS['t']['new_comment'] = 'Nieuw commentaar';

Modified: YDFramework2.0/trunk/examples/weblog/item.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/item.php	2006-12-29 20:26:16 UTC (rev 2280)
+++ YDFramework2.0/trunk/examples/weblog/item.php	2006-12-30 20:00:28 UTC (rev 2281)
@@ -54,10 +54,14 @@
             $form->addElement( 'text', 'username', t( 'name' ) );
             $form->addElement( 'text', 'useremail', t( 'mail_not_published' ) );
             $form->addElement( 'text', 'userwebsite', t( 'website' ) );
+            $elem = & $form->addElement( 'captcha', 'security_code', t( 'enter_security_code' ) );
             $form->addElement( 'textarea', 'comment', '' );
             $form->addElement( 'submit', 'cmdSubmit', t( 'submit_comment' ), array( 'class' => 'button' ) );
             $form->addElement( 'hidden', 'item_id' );
 
+            // Change the text position of the captcha element
+            $elem->setTextPosition( true );
+
             // Set the defaults
             $defaults = array();
             $defaults['item_id']     = $id;
@@ -67,20 +71,19 @@
             $form->setDefaults( $defaults );
 
             // Set the rules
-            $form->addRule( 'username',    'required',      t( 'err_name' ) );
-            $form->addRule( 'username',    'not_email',     t( 'err_name_email' ) );
-            $form->addRule( 'username',    'maxlength',     t( 'err_name_length' ), 35 );
-            $form->addRule( 'useremail',   'email',         t( 'err_email' ) );
-            $form->addRule( 'useremail',   'required',      t( 'err_email' ) );
-            $form->addRule( 'userwebsite', 'httpurl',       t( 'err_website' ) );
-            $form->addRule( 'comment',     'required',      t( 'err_comment' ) );
-            $form->addRule( 'comment',     'maxlength',     t( 'err_comment_length' ), YDConfig::get( 'max_comment_length', 1500 ) );
-            $form->addRule( 'comment',     'maxhyperlinks', t( 'err_comment_links' ), YDConfig::get( 'max_comment_links', 1 ) );
-            $form->addFormRule( array( & $this, 'checkDuplicateComments' ) );
+            $form->addRule( 'username',      'required',      t( 'err_name' ) );
+            $form->addRule( 'username',      'not_email',     t( 'err_name_email' ) );
+            $form->addRule( 'username',      'maxlength',     t( 'err_name_length' ), 35 );
+            $form->addRule( 'useremail',     'email',         t( 'err_email' ) );
+            $form->addRule( 'useremail',     'required',      t( 'err_email' ) );
+            $form->addRule( 'userwebsite',   'httpurl',       t( 'err_website' ) );
+            $form->addRule( 'security_code', 'captcha',       t( 'err_security_code_not_valid' ) );
+            $form->addRule( 'comment',       'required',      t( 'err_comment' ) );
+            $form->addRule( 'comment',       'maxlength',     t( 'err_comment_length' ), YDConfig::get( 'max_comment_length', 1500 ) );
+            $form->addRule( 'comment',       'maxhyperlinks', t( 'err_comment_links' ), YDConfig::get( 'max_comment_links', 1 ) );
 
             // Add the filters
             $form->addFilters( array( 'username', 'useremail', 'userwebsite' ), 'strip_html' );
-            //$form->addFilter( 'comment', 'safe_html' );
 
             // Process the form
             if ( $form->validate() === true ) {
@@ -180,13 +183,18 @@
 
         }
 
-        // Function to check for duplicate comments
-        function checkDuplicateComments( $fields ) {
-            if ( $this->weblog->isDuplicateComment( $fields ) === true ) {
-                return array( '__ALL__' => t( 'err_duplicate_comment' ) );
-            } else {
-                return true;
-            }
+        // Reserved action that creates the image 
+        function actionShowCaptcha() {
+
+            // include captcha lib
+            YDInclude( 'YDCaptcha.php' );
+
+            // Create captcha object 
+            $captcha = new YDCaptcha();
+
+            // Return the image
+            return $captcha->Create();
+
         }
 
     }

Modified: YDFramework2.0/trunk/examples/weblog/manage/__mng_header.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/__mng_header.tpl	2006-12-29 20:26:16 UTC (rev 2280)
+++ YDFramework2.0/trunk/examples/weblog/manage/__mng_header.tpl	2006-12-30 20:00:28 UTC (rev 2281)
@@ -115,6 +115,7 @@
                         <b>{t w="h_contents"}</b><br/>
                         &raquo; <a href="items.php">{t w="a_items"}</a><br/>
                         &raquo; <a href="comments.php">{t w="a_comments"}</a><br/>
+                        &raquo; <a href="comments.php?filter=spam">{t w="a_comments_spam"}</a><br/>
                         &raquo; <a href="pages.php">{t w="a_pages"}</a><br/>
                         &raquo; <a href="links.php">{t w="a_links"}</a><br/>
                         &raquo; <a href="images.php">{t w="a_images"}</a><br/>

Modified: YDFramework2.0/trunk/examples/weblog/skins/default/item.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default/item.tpl	2006-12-29 20:26:16 UTC (rev 2280)
+++ YDFramework2.0/trunk/examples/weblog/skins/default/item.tpl	2006-12-30 20:00:28 UTC (rev 2281)
@@ -142,6 +142,7 @@
         <p>{$comments_form.username.html} <small>{$comments_form.username.label_html}</small></p>
         <p>{$comments_form.useremail.html} <small>{$comments_form.useremail.label_html}</small></p>
         <p>{$comments_form.userwebsite.html} <small>{$comments_form.userwebsite.label_html}</small></p>
+        <p><small>{$comments_form.security_code.label_html}</small><br/>{$comments_form.security_code.html}</p>
 
         <p>{$comments_form.comment.html}</p>
 

Modified: YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/item.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/item.tpl	2006-12-29 20:26:16 UTC (rev 2280)
+++ YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/item.tpl	2006-12-30 20:00:28 UTC (rev 2281)
@@ -136,6 +136,7 @@
         <p>{$comments_form.username.html} <small>{$comments_form.username.label_html}</small></p>
         <p>{$comments_form.useremail.html} <small>{$comments_form.useremail.label_html}</small></p>
         <p>{$comments_form.userwebsite.html} <small>{$comments_form.userwebsite.label_html}</small></p>
+        <p><small>{$comments_form.security_code.label_html}</small><br/>{$comments_form.security_code.html}</p>
 
         <p>{$comments_form.comment.html}</p>
 



From pclaerhout at mail.berlios.de  Sat Dec 30 21:05:33 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sat, 30 Dec 2006 21:05:33 +0100
Subject: [ydf-devel] r2282 - YDFramework2.0/trunk/examples/weblog/include
Message-ID: <200612302005.kBUK5XbC012338@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-30 21:05:33 +0100 (Sat, 30 Dec 2006)
New Revision: 2282

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
Log:
The check for duplicate comments is now performed in the API class.

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-30 20:00:28 UTC (rev 2281)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-30 20:05:33 UTC (rev 2282)
@@ -615,6 +615,11 @@
             // Safe the HTML from the comment
             $values['comment'] = YDFormFilter_safe_html( $values['comment'] );
 
+            // Check for duplicate comments
+            if ( $this->isDuplicateComment( $values ) ) {
+                $values['is_spam'] = '1';
+            }
+
             // Add the comment
             $result = $this->_executeInsert( '#_comments', $values );
             $comment_id = $this->db->getLastInsertID();



From pclaerhout at mail.berlios.de  Sat Dec 30 22:22:16 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sat, 30 Dec 2006 22:22:16 +0100
Subject: [ydf-devel] r2283 - in YDFramework2.0/trunk/examples/weblog:
	include include/Bad-Behavior
	include/Bad-Behavior/bad-behavior include/languages manage
	skins/default skins/default_with_lightbox
Message-ID: <200612302122.kBULMGYt018822@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-30 22:22:13 +0100 (Sat, 30 Dec 2006)
New Revision: 2283

Added:
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/README.txt
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-generic.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-lifetype.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-mediawiki.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-wordpress.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-ydweblog.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/admin.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/banned.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/blackhole.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/blacklist.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/common_tests.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/core.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/functions.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/google.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/housekeeping.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/index.html
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/konqueror.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/lynx.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/movabletype.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/mozilla.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/msie.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/msnbot.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/opera.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/post.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/responses.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/safari.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/screener.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/trackback.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/version.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/whitelist.inc.php
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/index.html
   YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.php
   YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.tpl
Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogRequest.php
   YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
   YDFramework2.0/trunk/examples/weblog/manage/__mng_header.tpl
   YDFramework2.0/trunk/examples/weblog/skins/default/__std_header.tpl
   YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/__std_header.tpl
Log:
Added support for bad behaviour
(see also: http://www.homelandstupidity.us/software/bad-behavior/)

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/README.txt
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/README.txt	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/README.txt	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,28 @@
+=== Bad Behavior ===
+Tags: comment,trackback,referrer,spam,robot,antispam
+Contributors: MichaelHampton,MarkJaquith,FirasDurri,AndySkelton
+
+Bad Behavior is a set of PHP scripts which prevents spambots and other
+malicious accesses to your PHP-based Web site. It prevents comment spam,
+trackback spam, guestbook spam, wiki spam, referrer spam, and some types
+of malicious Web site hacking.
+
+== Installation ==
+
+Bad Behavior has been designed to install on each host software in the
+manner most appropriate to each platform. It's usually sufficient to
+follow the generic instructions for installing any plugin or extension
+for your host software.
+
+For complete documentation and installation instructions, please visit
+http://www.homelandstupidity.us/software/bad-behavior/
+
+== Release Notes ==
+
+= Bad Behavior 2.0 Known Issues =
+
+On WordPress when WP-Cache 2 is enabled, Bad Behavior requires a patch to
+WP-Cache 2 in order to protect cached pages. The patch is available in
+the installation instructions.
+
+Bad Behavior may be unable to protect cached pages on MediaWiki.

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/admin.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/admin.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/admin.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,75 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+function bb2_admin_pages() {
+	if (function_exists('current_user_can')) {
+		// The new 2.x way
+		if (current_user_can('manage_options')) {
+			$bb2_is_admin = true;
+		}
+	} else {
+		// The old 1.x way
+		global $user_ID;
+		if (user_can_edit_user($user_ID, 0)) {
+			$bb2_is_admin = true;
+		}
+	}
+
+	if ($bb2_is_admin) {
+		add_options_page(__("Bad Behavior"), __("Bad Behavior"), 8, 'bb2_options', 'bb2_options');
+	}
+}
+
+function bb2_options()
+{
+	$settings = bb2_read_settings();
+
+	if ($_POST) {
+		if ($_POST['display_stats']) {
+			$settings['display_stats'] = true;
+		} else {
+			$settings['display_stats'] = false;
+		}
+		if ($_POST['strict']) {
+			$settings['strict'] = true;
+		} else {
+			$settings['strict'] = false;
+		}
+		if ($_POST['verbose']) {
+			$settings['verbose'] = true;
+		} else {
+			$settings['verbose'] = false;
+		}
+		bb2_write_settings($settings);
+?>
+	<div id="message" class="updated fade"><p><strong><?php _e('Options saved.') ?></strong></p></div>
+<?php
+	}
+?>
+	<div class="wrap">
+	<h2><?php _e("Bad Behavior"); ?></h2>
+	<form method="post" action="<?php echo $_SERVER['REQUEST_URI']; ?>">
+	<p>For more information please visit the <a href="http://www.homelandstupidity.us/software/bad-behavior/">Bad Behavior</a> homepage.</p>
+	<p>If you find Bad Behavior valuable, please consider making a <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=error%40ioerror%2eus&item_name=Bad%20Behavior%20<?php echo BB2_VERSION; ?>%20%28From%20Admin%29&no_shipping=1&cn=Comments%20about%20Bad%20Behavior&tax=0&currency_code=USD&bn=PP%2dDonationsBF&charset=UTF%2d8">financial contribution</a> to further development of Bad Behavior.</p>
+
+	<fieldset class="options">
+	<legend><?php _e('Statistics'); ?></legend>
+	<?php bb2_insert_stats(true); ?>
+	<p><label><input type="checkbox" name="display_stats" value="true" <?php if ($settings['display_stats']) { ?>checked="checked" <?php } ?>/> <?php _e('Display statistics in blog footer'); ?></label></p>
+	</fieldset>
+
+	<fieldset class="options">
+	<legend><?php _e('Logging'); ?></legend>
+	<p><label><input type="checkbox" name="verbose" value="true" <?php if ($settings['verbose']) { ?>checked="checked" <?php } ?>/> <?php _e('Verbose HTTP request logging'); ?></label></p>
+	<legend><?php _e('Strict Mode'); ?></legend>
+	<p><label><input type="checkbox" name="strict" value="true" <?php if ($settings['strict']) { ?>checked="checked" <?php } ?>/> <?php _e('Strict checking (blocks more spam but may block some people)'); ?></label></p>
+	</fieldset>
+
+	<p class="submit"><input type="submit" name="submit" value="<?php _e('Update &raquo;'); ?>" /></p>
+	</form>
+	</div>
+<?php
+}
+
+add_action('admin_menu', 'bb2_admin_pages');
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/banned.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/banned.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/banned.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,48 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Functions called when a request has been denied
+// This part can be gawd-awful slow, doesn't matter :)
+
+require_once(BB2_CORE . "/responses.inc.php");
+
+function bb2_display_denial($settings, $key, $previous_key = false)
+{
+	if (!$previous_key) $previous_key = $key;
+	if ($key == "e87553e1") {
+		// FIXME: lookup the real key
+	}
+	// Create support key
+	$ip = explode(".", $_SERVER['REMOTE_ADDR']);
+	$ip_hex = "";
+	foreach ($ip as $octet) {
+		$ip_hex .= str_pad(dechex($octet), 2, 0, STR_PAD_LEFT);
+	}
+	$support_key = implode("-", str_split("$ip_hex$key", 4));
+
+	// Get response data
+	$response = bb2_get_response($previous_key);
+	header("HTTP/1.1 " . $response['response'] . " Bad Behavior");
+	header("Status: " . $response['response'] . " Bad Behavior");
+?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<title>HTTP Error <?php echo $response['response']; ?></title>
+</head>
+<body>
+<h1>Error <?php echo $response['response']; ?></h1>
+<p>We're sorry, but we could not fulfill your request for
+<?php echo htmlspecialchars($_SERVER['REQUEST_URI']) ?> on this server.</p>
+<p><?php echo $response['explanation']; ?></p>
+<p>Your technical support key is: <strong><?php echo $support_key; ?></strong></p>
+<p>You can use this key to <a href="http://www.ioerror.us/bb2-support-key?key=<?php echo $support_key; ?>">fix this problem yourself</a>.</p>
+<p>If you are unable to fix the problem yourself, please contact <a href="mailto:<?php echo htmlspecialchars(str_replace("@", "+nospam at nospam.", bb2_email())); ?>"><?php echo htmlspecialchars(str_replace("@", " at ", bb2_email())); ?></a> and be sure to provide the technical support key shown above.</p>
+<?php
+}
+
+function bb2_log_denial($settings, $package, $key, $previous_key=false)
+{
+	bb2_db_query(bb2_insert($settings, $package, $key));
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/blackhole.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/blackhole.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/blackhole.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,37 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Look up address on various blackhole lists.
+// These cannot be used for GET requests under any circumstances!
+function bb2_blackhole($package) {
+	// Only conservative lists
+	$bb2_blackhole_lists = array(
+		"sbl-xbl.spamhaus.org",	// All around nasties
+//		"dnsbl.sorbs.net",	// Old useless data.
+//		"list.dsbl.org",	// Old useless data.
+		"dnsbl.ioerror.us",	// Bad Behavior Blackhole
+	);
+	
+	// Things that shouldn't be blocked, from aggregate lists
+	$bb2_blackhole_exceptions = array(
+		"sbl-xbl.spamhaus.org" => array("127.0.0.4"),	// CBL is problematic
+		"dnsbl.sorbs.net" => array("127.0.0.10",),	// Dynamic IPs only
+		"list.dsbl.org" => array(),
+		"dnsbl.ioerror.us" => array(),
+	);
+
+	// Check the blackhole lists
+	$ip = $package['ip'];
+	$find = implode('.', array_reverse(explode('.', $ip)));
+	foreach ($bb2_blackhole_lists as $dnsbl) {
+		$result = gethostbynamel($find . "." . $dnsbl . ".");
+		if (!empty($result)) {
+			// Got a match and it isn't on the exception list
+			$result = @array_diff($result, $bb2_blackhole_exceptions[$dnsbl]);
+			if (!empty($result)) {
+				return '136673cd';
+			}
+		}
+	}
+	return false;
+}
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/blacklist.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/blacklist.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/blacklist.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,106 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+function bb2_blacklist($package) {
+
+	// Blacklisted user agents
+	// These user agent strings occur at the beginning of the line.
+	$bb2_spambots_0 = array(
+		"<sc",			// XSS exploit attempts
+		"8484 Boston Project",	// video poker/porn spam
+		"adwords",		// referrer spam
+		"autoemailspider",	// spam harvester
+		"blogsearchbot-martin",	// from honeypot
+		"Digger",		// spam harvester
+		"ecollector",		// spam harvester
+		"EmailCollector",	// spam harvester
+		"Email Extractor",	// spam harvester
+		"Email Siphon",		// spam harvester
+		"EmailSiphon",		// spam harvester
+		"grub crawler",		// misc comment/email spam
+		"HttpProxy",		// misc comment/email spam
+		"Internet Explorer",	// XMLRPC exploits seen
+		"Jakarta Commons",	// custommised spambots
+		"Java 1.",		// definitely a spammer
+		"Java/1.",		// definitely a spammer
+		"libwww-perl",		// spambot scripts
+		"LWP",			// spambot scripts
+		"Microsoft URL",	// spam harvester
+		"Missigua",		// spam harvester
+		"Movable Type",		// customised spambots
+		"Mozilla ",		// malicious software
+		"Mozilla/4.0(",		// from honeypot
+		"Mozilla/4.0+(",	// suspicious harvester
+		"MSIE",			// malicious software
+		"OmniExplorer",		// spam harvester
+		"PussyCat ",		// misc comment spam
+		"psycheclone",		// spam harvester
+		"Shockwave Flash",	// spam harvester
+		"User Agent: ",		// spam harvester
+		"User-Agent: ",		// spam harvester
+		"Wordpress Hash Grabber",// malicious software
+		"\"",			// malicious software
+	);
+
+	// These user agent strings occur anywhere within the line.
+	$bb2_spambots = array(
+		"\r",			// A really dumb bot
+		"; Widows ",		// misc comment/email spam
+		"a href=",		// referrer spam
+		"Bad Behavior Test",	// Add this to your user-agent to test BB
+		"compatible ; MSIE",	// misc comment/email spam
+		"compatible-",		// misc comment/email spam
+		"DTS Agent",		// misc comment/email spam
+		"Gecko/25",		// revisit this in 500 years
+		"grub-client",		// search engine ignores robots.txt
+		"hanzoweb",		// very badly behaved crawler
+		"Indy Library",		// misc comment/email spam
+		"larbin at unspecified",	// stealth harvesters
+		"Murzillo compatible",	// comment spam bot
+		".NET CLR 1)",		// free poker, etc.
+		"POE-Component-Client",	// free poker, etc.
+		"Turing Machine",	// www.anonymizer.com abuse
+		"WISEbot",		// spam harvester
+		"WISEnutbot",		// spam harvester
+		"Windows NT 4.0;)",	// wikispam bot
+		"Windows NT 5.0;)",	// wikispam bot
+		"Windows NT 5.1;)",	// wikispam bot
+		"Windows XP 5",		// spam harvester
+		"\\\\)",		// spam harvester
+	);
+
+	// These are regular expression matches.
+	$bb2_spambots_regex = array(
+		"/^[A-Z]{10}$/",	// misc email spam
+		"/^Mozilla...[05]$/i",	// fake user agent/email spam
+		"/[bcdfghjklmnpqrstvwxz ]{8,}/",
+//		"/(;\){1,2}$/",		// misc spammers/harvesters
+//		"/MSIE.*Windows XP/",	// misc comment spam
+	);
+
+	// Do not edit below this line.
+
+	$ua = $package['headers_mixed']['User-Agent'];
+
+	foreach ($bb2_spambots_0 as $spambot) {
+		$pos = stripos($ua, $spambot);
+		if ($pos !== FALSE && $pos == 0) {
+			return "17f4e8c8";
+		}
+	}
+
+	foreach ($bb2_spambots as $spambot) {
+		if (stripos($ua, $spambot) !== FALSE) {
+			return "17f4e8c8";
+		}
+	}
+
+	foreach ($bb2_spambots_regex as $spambot) {
+		if (preg_match($spambot, $ua)) {
+			return "17f4e8c8";
+		}
+	}
+
+	return FALSE;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/common_tests.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/common_tests.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/common_tests.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,113 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Enforce adherence to protocol version claimed by user-agent.
+
+function bb2_protocol($settings, $package)
+{
+	// Is it claiming to be HTTP/1.0?  Then it shouldn't do HTTP/1.1 things
+	// Always run this test; we should never see Expect:
+	if (array_key_exists('Expect', $package['headers_mixed']) && stripos($package['headers_mixed']['Expect'], "100-continue") !== FALSE) {
+		return "a0105122";
+	}
+
+	// Is it claiming to be HTTP/1.1?  Then it shouldn't do HTTP/1.0 things
+	// Blocks some common corporate proxy servers in strict mode
+	if ($settings['strict'] && !strcmp($package['server_protocol'], "HTTP/1.1")) {
+		if (array_key_exists('Pragma', $package['headers_mixed']) && strpos($package['headers_mixed']['Pragma'], "no-cache") !== FALSE && !array_key_exists('Cache-Control', $package['headers_mixed'])) {
+			return "41feed15";
+		}
+	}
+	return false;
+}
+
+function bb2_misc_headers($settings, $package)
+{
+	$ua = $package['headers_mixed']['User-Agent'];
+
+	if (!strcmp($package['request_method'], "POST") && empty($ua)) {
+		return "f9f2b8b9";
+	}
+
+	// Broken spambots send URLs with various invalid characters
+	if (strpos($package['request_uri'], "#") !== FALSE || strpos($package['headers_mixed']['Referer'], "#") !== FALSE) {
+		return "dfd9b1ad";
+	}
+
+	// Range: field exists and begins with 0
+	// Real user-agents do not start ranges at 0
+	// NOTE: this blocks the whois.sc bot. No big loss.
+	if (array_key_exists('Range', $package['headers_mixed']) && strpos($package['headers_mixed']['Range'], "=0-") !== FALSE) {
+		if (strncmp($ua, "MovableType", 11)) {
+			return "7ad04a8a";
+		}
+	}
+
+	// Content-Range is a response header, not a request header
+	if (array_key_exists('Content-Range', $package['headers_mixed'])) {
+		return '7d12528e';
+	}
+
+	// Lowercase via is used by open proxies/referrer spammers
+	if (array_key_exists('via', $package['headers'])) {
+		return "9c9e4979";
+	}
+
+	// pinappleproxy is used by referrer spammers
+	if (array_key_exists('Via', $package['headers_mixed'])) {
+		if (stripos($package['headers_mixed']['Via'], "pinappleproxy") !== FALSE || stripos($package['headers_mixed']['Via'], "PCNETSERVER") !== FALSE || stripos($package['headers_mixed']['Via'], "Invisiware") !== FALSE) {
+			return "939a6fbb";
+		}
+	}
+
+	// TE: if present must have Connection: TE
+	// RFC 2616 14.39
+	// Blocks Microsoft ISA Server 2004 in strict mode. Contact Microsoft
+	// to obtain a hotfix.
+	if ($settings['strict'] && array_key_exists('Te', $package['headers_mixed'])) {
+		if (!preg_match('/\bTE\b/', $package['headers_mixed']['Connection'])) {
+			return "582ec5e4";
+		}
+	}
+
+	if (array_key_exists('Connection', $package['headers_mixed'])) {
+		// Connection: keep-alive and close are mutually exclusive
+		if (preg_match('/\bKeep-Alive\b/i', $package['headers_mixed']['Connection']) && preg_match('/\bClose\b/i', $package['headers_mixed']['Connection'])) {
+			return "a52f0448";
+		}
+		// Close shouldn't appear twice
+		if (preg_match('/\bclose,\s?close\b/i', $package['headers_mixed']['Connection'])) {
+			return "a52f0448";
+		}
+		// Keey-Alive shouldn't appear twice either
+		if (preg_match('/\bkeep-alive,\s?keep-alive\b/i', $package['headers_mixed']['Connection'])) {
+			return "a52f0448";
+		}
+	}
+	
+
+	// Headers which are not seen from normal user agents; only malicious bots
+	if (array_key_exists('X-Aaaaaaaaaaaa', $package['headers_mixed']) || array_key_exists('X-Aaaaaaaaaa', $package['headers_mixed'])) {
+		return "b9cc1d86";
+	}
+	if (array_key_exists('Proxy-Connection', $package['headers_mixed'])) {
+		return "b7830251";
+	}
+
+	if (array_key_exists('Referer', $package['headers_mixed'])) {
+		// Referer, if it exists, must not be blank
+		if (empty($package['headers_mixed'])) {
+			return "69920ee5";
+		}
+
+		// Referer, if it exists, must contain a :
+		// While a relative URL is technically valid in Referer, all known
+		// legit user-agents send an absolute URL
+		if (strpos($package['headers_mixed']['Referer'], ":") === FALSE) {
+			return "45b35e30";
+		}
+	}
+	
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/core.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/core.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/core.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,203 @@
+<?php if (!defined('BB2_CWD')) die("I said no cheating!");
+
+// Bad Behavior entry point is start_bad_behavior().
+// If you're reading this, you are probably lost.
+// Go read the bad-behavior-generic.php file.
+
+define('BB2_CORE', dirname(__FILE__));
+define('BB2_COOKIE', 'bb2_screener_');
+
+require_once(BB2_CORE . "/functions.inc.php");
+
+// Our log table structure
+function bb2_table_structure($name)
+{
+	// It's not paranoia if they really are out to get you.
+	$name_escaped = bb2_db_escape($name);
+	return "CREATE TABLE IF NOT EXISTS `$name_escaped` (
+		`id` INT(11) NOT NULL auto_increment,
+		`ip` TEXT NOT NULL,
+		`date` DATETIME NOT NULL default '0000-00-00 00:00:00',
+		`request_method` TEXT NOT NULL,
+		`request_uri` TEXT NOT NULL,
+		`server_protocol` TEXT NOT NULL,
+		`http_headers` TEXT NOT NULL,
+		`user_agent` TEXT NOT NULL,
+		`request_entity` TEXT NOT NULL,
+		`key` TEXT NOT NULL,
+		INDEX (`ip`(15)),
+		INDEX (`user_agent`(10)),
+		PRIMARY KEY (`id`) );";	// TODO: INDEX might need tuning
+}
+
+// Insert a new record
+function bb2_insert($settings, $package, $key)
+{
+	$ip = bb2_db_escape($package['ip']);
+	$date = bb2_db_date();
+	$request_method = bb2_db_escape($package['request_method']);
+	$request_uri = bb2_db_escape($package['request_uri']);
+	$server_protocol = bb2_db_escape($package['server_protocol']);
+	$user_agent = bb2_db_escape($package['user_agent']);
+	$headers = "$request_method $request_uri $server_protocol\n";
+	foreach ($package['headers'] as $h => $v) {
+		$headers .= bb2_db_escape("$h: $v\n");
+	}
+	$request_entity = "";
+	if (!strcasecmp($request_method, "POST")) {
+		foreach ($package['request_entity'] as $h => $v) {
+			$request_entity .= bb2_db_escape("$h: $v\n");
+		}
+	}
+	return "INSERT INTO `" . bb2_db_escape($settings['log_table']) . "`
+		(`ip`, `date`, `request_method`, `request_uri`, `server_protocol`, `http_headers`, `user_agent`, `request_entity`, `key`) VALUES
+		('$ip', '$date', '$request_method', '$request_uri', '$server_protocol', '$headers', '$user_agent', '$request_entity', '$key')";
+}
+
+// Kill 'em all!
+function bb2_banned($settings, $package, $key, $previous_key=false)
+{
+	// Some spambots hit too hard. Slow them down a bit.
+	sleep(2);
+
+	require_once(BB2_CORE . "/banned.inc.php");
+	bb2_display_denial($settings, $key, $previous_key);
+	bb2_log_denial($settings, $package, $key, $previous_key);
+	if (is_callable('bb2_banned_callback')) {
+		bb2_banned_callback($settings, $package, $key);
+	}
+	// Penalize the spammers some more
+	require_once(BB2_CORE . "/housekeeping.inc.php");
+	bb2_housekeeping($settings, $package);
+	die();
+}
+
+function bb2_approved($settings, $package)
+{
+	// Dirk wanted this
+	if (is_callable('bb2_approved_callback')) {
+		bb2_approved_callback($settings, $package);
+	}
+
+	// Decide what to log on approved requests.
+	if ($settings['verbose'] || empty($package['user_agent'])) {
+		bb2_db_query(bb2_insert($settings, $package, "00000000"));
+	}
+}
+
+// Check the results of a particular test; see below for usage
+// Returns FALSE if test passed (yes this is backwards)
+function bb2_test($settings, $package, $result)
+{
+	if ($result !== FALSE)
+	{
+		bb2_banned($settings, $package, $result);
+		return TRUE;
+	}
+	return FALSE;
+}
+
+
+// Let God sort 'em out!
+function bb2_start($settings)
+{
+	// Gather up all the information we need, first of all.
+	$headers = bb2_load_headers();
+	// Postprocess the headers to mixed-case
+	// FIXME: get the world to stop using PHP as CGI
+	$headers_mixed = array();
+	foreach ($headers as $h => $v) {
+		$headers_mixed[uc_all($h)] = $v;
+	}
+
+	// We use these frequently. Keep a copy close at hand.
+	$ip = $_SERVER['REMOTE_ADDR'];
+	$request_method = $_SERVER['REQUEST_METHOD'];
+	$request_uri = $_SERVER['REQUEST_URI'];
+	$server_protocol = $_SERVER['SERVER_PROTOCOL'];
+	$user_agent = $_SERVER['HTTP_USER_AGENT'];
+
+	// Reconstruct the HTTP entity, if present.
+	$request_entity = array();
+	if (!strcasecmp($request_method, "POST") || !strcasecmp($request_method, "PUT")) {
+		foreach ($_POST as $h => $v) {
+			$request_entity[$h] = $v;
+		}
+	}
+
+	$package = array('ip' => $ip, 'headers' => $headers, 'headers_mixed' => $headers_mixed, 'request_method' => $request_method, 'request_uri' => $request_uri, 'server_protocol' => $server_protocol, 'request_entity' => $request_entity, 'user_agent' => $user_agent, 'is_browser' => false);
+
+	// Please proceed to the security checkpoint and have your
+	// identification and boarding pass ready.
+
+	// First check the whitelist
+	require_once(BB2_CORE . "/whitelist.inc.php");
+	if (!bb2_whitelist($package)) {
+		// Now check the blacklist
+		require_once(BB2_CORE . "/blacklist.inc.php");
+		bb2_test($settings, $package, bb2_blacklist($package));
+
+		// Check for common stuff
+		require_once(BB2_CORE . "/common_tests.inc.php");
+		bb2_test($settings, $package, bb2_protocol($settings, $package));
+		bb2_test($settings, $package, bb2_misc_headers($settings, $package));
+
+		// Specific checks
+		$ua = $headers_mixed['User-Agent'];
+		// MSIE checks
+		if (stripos($ua, "MSIE") !== FALSE) {
+			$package['is_browser'] = true;
+			if (stripos($ua, "Opera") !== FALSE) {
+				require_once(BB2_CORE . "/opera.inc.php");
+				bb2_test($settings, $package, bb2_opera($package));
+			} else {
+				require_once(BB2_CORE . "/msie.inc.php");
+				bb2_test($settings, $package, bb2_msie($package));
+			}
+		} elseif (stripos($ua, "Konqueror") !== FALSE) {
+			$package['is_browser'] = true;
+			require_once(BB2_CORE . "/konqueror.inc.php");
+			bb2_test($settings, $package, bb2_konqueror($package));
+		} elseif (stripos($ua, "Opera") !== FALSE) {
+			$package['is_browser'] = true;
+			require_once(BB2_CORE . "/opera.inc.php");
+			bb2_test($settings, $package, bb2_opera($package));
+		} elseif (stripos($ua, "Safari") !== FALSE) {
+			$package['is_browser'] = true;
+			require_once(BB2_CORE . "/safari.inc.php");
+			bb2_test($settings, $package, bb2_safari($package));
+		} elseif (stripos($ua, "Lynx") !== FALSE) {
+			$package['is_browser'] = true;
+			require_once(BB2_CORE . "/lynx.inc.php");
+			bb2_test($settings, $package, bb2_lynx($package));
+		} elseif (stripos($ua, "MovableType") !== FALSE) {
+			require_once(BB2_CORE . "/movabletype.inc.php");
+			bb2_test($settings, $package, bb2_movabletype($package));
+		} elseif (stripos($ua, "msnbot") !== FALSE || stripos($ua, "MS Search") !== FALSE) {
+			require_once(BB2_CORE . "/msnbot.inc.php");
+			bb2_test($settings, $package, bb2_msnbot($package));
+		} elseif (stripos($ua, "Googlebot") !== FALSE || stripos($ua, "Mediapartners-Google") !== FALSE) {
+			require_once(BB2_CORE . "/google.inc.php");
+			bb2_test($settings, $package, bb2_google($package));
+		} elseif (stripos($ua, "Mozilla") !== FALSE && stripos($ua, "Mozilla" == 0)) {
+			$package['is_browser'] = true;
+			require_once(BB2_CORE . "/mozilla.inc.php");
+			bb2_test($settings, $package, bb2_mozilla($package));
+		}
+
+		// More intensive screening applies to POST requests
+		if (!strcasecmp('POST', $package['request_method'])) {
+			require_once(BB2_CORE . "/post.inc.php");
+			bb2_test($settings, $package, bb2_post($settings, $package));
+		}
+	}
+
+	// Last chance screening.
+	require_once(BB2_CORE . "/screener.inc.php");
+	bb2_screener($settings, $package);
+
+	// And that's about it.
+	bb2_approved($settings, $package);
+	return true;
+}
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/functions.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/functions.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/functions.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,69 @@
+<?php if (!defined('BB2_CORE')) die("I said no cheating!");
+
+// Miscellaneous helper functions.
+
+// stripos() needed because stripos is only present on PHP 5
+if (!function_exists('stripos')) {
+	function stripos($haystack,$needle,$offset = 0) {
+		return(strpos(strtolower($haystack),strtolower($needle),$offset));
+	}
+}
+
+// str_split() needed because str_split is only present on PHP 5
+if (!function_exists('str_split')) {
+	function str_split($string, $split_length=1)
+	{
+		if ($split_length < 1) {
+			return false;
+		}
+
+		for ($pos=0, $chunks = array(); $pos < strlen($string); $pos+=$split_length) {
+			$chunks[] = substr($string, $pos, $split_length);
+		}
+		return $chunks;
+	}
+}
+
+// Convert a string to mixed-case on word boundaries.
+function uc_all($string) {
+	$temp = preg_split('/(\W)/', str_replace("_", "-", $string), -1, PREG_SPLIT_DELIM_CAPTURE);
+	foreach ($temp as $key=>$word) {
+		$temp[$key] = ucfirst(strtolower($word));
+	}
+	return join ('', $temp);
+}
+
+// Determine if an IP address resides in a CIDR netblock or netblocks.
+function match_cidr($addr, $cidr) {
+	$output = false;
+
+	if (is_array($cidr)) {
+		foreach ($cidr as $cidrlet) {
+			if (match_cidr($addr, $cidrlet)) {
+				$output = true;
+			}
+		}
+	} else {
+		list($ip, $mask) = explode('/', $cidr);
+		$mask = 0xffffffff << (32 - $mask);
+		$output = ((ip2long($addr) & $mask) == (ip2long($ip) & $mask));
+	}
+	return $output;
+}
+
+// Obtain all the HTTP headers.
+// NB: on PHP-CGI we have to fake it out a bit, since we can't get the REAL
+// headers. Run PHP as Apache 2.0 module if possible for best results.
+function bb2_load_headers() {
+	if (!is_callable('getallheaders')) {
+		$headers = array();
+		foreach ($_SERVER as $h => $v)
+			if (ereg('HTTP_(.+)', $h, $hp))
+				$headers[str_replace("_", "-", uc_all($hp[1]))] = $v;
+	} else {
+		$headers = getallheaders();
+	}
+	return $headers;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/google.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/google.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/google.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,13 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Analyze user agents claiming to be Googlebot
+
+function bb2_google($package)
+{
+	if (match_cidr($package['ip'], "66.249.64.0/19") === FALSE && match_cidr($package['ip'], "64.233.160.0/19") === FALSE) {
+		return "f1182195";
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/housekeeping.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/housekeeping.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/housekeeping.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,16 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+function bb2_housekeeping($settings, $package)
+{
+	// FIXME Yes, the interval's hard coded (again) for now.
+	$query = "DELETE FROM `" . $settings['log_table'] . "` WHERE `date` < DATE_SUB('" . bb2_db_date() . "', INTERVAL 7 DAY)";
+	bb2_db_query($query);
+
+	// Waste a bunch more of the spammer's time, sometimes.
+	if (rand(1,1000) == 1) {
+		$query = "OPTIMIZE TABLE `" . $settings['log_table'] . "`";
+		bb2_db_query($query);
+	}
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/index.html
===================================================================

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/konqueror.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/konqueror.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/konqueror.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,17 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Analyze user agents claiming to be Konqueror
+
+function bb2_konqueror($package)
+{
+	// CafeKelsa is a dev project at Yahoo which indexes job listings for
+	// Yahoo! HotJobs. It identifies as Konqueror so we skip these checks.
+	if (stripos($package['headers_mixed']['User-Agent'], "YahooSeeker/CafeKelsa") === FALSE || match_cidr($package['ip'], "209.73.160.0/19") === FALSE) {
+		if (!array_key_exists('Accept', $package['headers_mixed'])) {
+			return "17566707";
+		}
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/lynx.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/lynx.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/lynx.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,13 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Analyze user agents claiming to be Lynx
+
+function bb2_lynx($package)
+{
+	if (!array_key_exists('Accept', $package['headers_mixed'])) {
+		return "17566707";
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/movabletype.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/movabletype.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/movabletype.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,14 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+function bb2_movabletype($package)
+{
+	// Is it a trackback?
+	if (strcasecmp($package['request_method'], "POST")) {
+		if (strcmp($package['headers_mixed']['Range'], "bytes=0-99999")) {
+			return "7d12528e";
+		}
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/mozilla.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/mozilla.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/mozilla.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,19 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Analyze user agents claiming to be Mozilla
+
+function bb2_mozilla($package)
+{
+	// First off, workaround for Google Desktop, until they fix it FIXME
+	// Google Desktop fixed it, but apparently some old versions are
+	// still out there. :(
+	// Always check accept header for Mozilla user agents
+	if (strpos($package['headers_mixed']['User-Agent'], "Google Desktop") === FALSE) {
+		if (!array_key_exists('Accept', $package['headers_mixed'])) {
+			return "17566707";
+		}
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/msie.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/msie.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/msie.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,24 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Analyze user agents claiming to be MSIE
+
+function bb2_msie($package)
+{
+	if (!array_key_exists('Accept', $package['headers_mixed'])) {
+		return "17566707";
+	}
+
+	// MSIE does NOT send "Windows ME" or "Windows XP" in the user agent
+	if (strpos($package['headers_mixed']['User-Agent'], "Windows ME") !== FALSE || strpos($package['headers_mixed']['User-Agent'], "Windows XP") !== FALSE || strpos($package['headers_mixed']['User-Agent'], "Windows 2000") !== FALSE || strpos($package['headers_mixed']['User-Agent'], "Win32") !== FALSE) {
+		return "a1084bad";
+	}
+
+	// MSIE does NOT send Connection: TE
+	if (preg_match('/\bTE\b/i', $package['headers_mixed']['Connection'])) {
+		return "2b90f772";
+	}
+
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/msnbot.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/msnbot.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/msnbot.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,13 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Analyze user agents claiming to be msnbot
+
+function bb2_msnbot($package)
+{
+	if (match_cidr($package['ip'], "207.46.0.0/16") === FALSE && match_cidr($package['ip'], "65.52.0.0/14") === FALSE && match_cidr($package['ip'], "207.68.128.0/18") === FALSE && match_cidr($package['ip'], "207.68.192.0/20") === FALSE && match_cidr($package['ip'], "64.4.0.0/18") === FALSE) {
+		return "e4de0453";
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/opera.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/opera.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/opera.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,13 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Analyze user agents claiming to be Opera
+
+function bb2_opera($package)
+{
+	if (!array_key_exists('Accept', $package['headers_mixed'])) {
+		return "17566707";
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/post.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/post.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/post.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,68 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// All tests which apply specifically to POST requests
+function bb2_post($settings, $package)
+{
+	// Check blackhole lists for known spam/malicious activity
+	require_once(BB2_CORE . "/blackhole.inc.php");
+	bb2_test($settings, $package, bb2_blackhole($package));
+
+	// MovableType needs specialized screening
+	if (stripos($package['headers_mixed']['User-Agent'], "MovableType") !== FALSE) {
+		if (strcmp($package['headers_mixed']['Range'], "bytes=0-99999")) {
+			return "7d12528e";
+		}
+	}
+
+	// Trackbacks need special screening
+	$request_entity = $package['request_entity'];
+	if (isset($request_entity['title']) && isset($request_entity['url']) && isset($request_entity['blog_name'])) {
+		require_once(BB2_CORE . "/trackback.inc.php");
+		return bb2_trackback($package);
+	}
+
+	// Catch a few completely broken spambots
+	foreach ($request_entity as $key => $value) {
+		$pos = strpos($key, "	document.write");
+		if ($pos !== FAlSE) {
+			return "dfd9b1ad";
+		}
+	}
+
+	// Screen by cookie/JavaScript form add
+	if (isset($_COOKIE[BB2_COOKIE])) {
+		$screener1 = explode(" ", $_COOKIE[BB2_COOKIE]);
+	}
+	if (isset($_POST[BB2_COOKIE])) {
+		$screener2 = explode(" ", $_POST[BB2_COOKIE]);
+	}
+	$screener = max($screener1[0], $screener2[0]);
+
+	if ($screener > 0) {
+		// Posting too fast? 5 sec
+		// FIXME: even 5 sec is too intrusive
+		// if ($screener + 5 > time())
+		//	return "408d7e72";
+		// Posting too slow? 48 hr
+		if ($screener + 172800 < time())
+			return "b40c8ddc";
+
+		// Screen by IP address
+		$ip = ip2long($package['ip']);
+		$ip_screener = ip2long($screener[1]);
+//		FIXME: This is b0rked, but why?
+//		if ($ip && $ip_screener && abs($ip_screener - $ip) > 256)
+//			return "c1fa729b";
+
+		// Screen for user agent changes
+		// User connected previously with blank user agent
+		$q = bb2_db_query("SELECT `ip` FROM " . $settings['log_table'] . " WHERE (`ip` = '" . $package['ip'] . "' OR `ip` = '" . $screener[1] . "') AND `user_agent` != '" . $package['user_agent'] . "' AND `date` > DATE_SUB('" . bb2_db_date() . "', INTERVAL 5 MINUTE)");
+		// Damnit, too many ways for this to fail :(
+		if ($q !== FALSE && $q != NULL && bb2_db_num_rows($q) > 0)
+			return "799165c2";
+	}
+
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/responses.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/responses.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/responses.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,44 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Defines the responses which Bad Behavior might return.
+
+function bb2_get_response($key) {
+	$bb2_responses = array(
+		'00000000' => array('response' => 200, 'explanation' => '', 'log' => ''),
+		'136673cd' => array('response' => 403, 'explanation' => 'Your Internet Protocol address is listed on a blacklist of addresses involved in malicious or illegal activity. See the listing below for more details on specific blacklists and removal procedures.', 'log' => 'IP address found on external blacklist'),
+		'17566707' => array('response' => 403, 'explanation' => 'An invalid request was received from your browser. This may be caused by a malfunctioning proxy server or browser privacy software.', 'log' => 'Required header \'Accept\' missing'),
+		'17f4e8c8' => array('response' => 403, 'explanation' => 'You do not have permission to access this server.', 'log' => 'User-Agent was found on blacklist'),
+		'21f11d3f' => array('response' => 403, 'explanation' => 'An invalid request was received. You claimed to be a mobile Web device, but you do not actually appear to be a mobile Web device.', 'log' => 'User-Agent claimed to be AvantGo, claim appears false'),
+		'2b90f772' => array('response' => 403, 'explanation' => 'You do not have permission to access this server. If you are using the Opera browser, then Opera must appear in your user agent.', 'log' => 'Connection: TE present, not supported by MSIE'),
+		'408d7e72' => array('response' => 403, 'explanation' => 'You do not have permission to access this server. Before trying again, run anti-virus and anti-spyware software and remove any viruses and spyware from your computer.', 'log' => 'POST comes too quickly after GET'),
+		'41feed15' => array('response' => 400, 'explanation' => 'An invalid request was received. This may be caused by a malfunctioning proxy server. Bypass the proxy server and connect directly, or contact your proxy server administrator.', 'log' => 'Header \'Pragma\' without \'Cache-Control\' prohibited for HTTP/1.1 requests'),
+		'45b35e30' => array('response' => 403, 'explanation' => 'An invalid request was received from your browser. This may be caused by a malfunctioning proxy server or browser privacy software.', 'log' => 'Header \'Referer\' is corrupt'),
+		'57796684' => array('response' => 403, 'explanation' => 'You do not have permission to access this server. Before trying again, run anti-virus and anti-spyware software and remove any viruses and spyware from your computer.', 'log' => 'Prohibited header \'X-Aaaaaaaaaa\' or \'X-Aaaaaaaaaaaa\' present'),
+		'582ec5e4' => array('response' => 400, 'explanation' => 'An invalid request was received. If you are using a proxy server, bypass the proxy server or contact your proxy server administrator. This may also be caused by a bug in the Opera web browser.', 'log' => '"Header \'TE\' present but TE not specified in \'Connection\' header'),
+		'69920ee5' => array('response' => 403, 'explanation' => 'An invalid request was received from your browser. This may be caused by a malfunctioning proxy server or browser privacy software.', 'log' => 'Header \'Referer\' present but blank'),
+		'799165c2' => array('response' => 403, 'explanation' => 'You do not have permission to access this server.', 'log' => 'Rotating user-agents detected'),
+		'7a06532b' => array('response' => 400, 'explanation' => 'An invalid request was received from your browser. This may be caused by a malfunctioning proxy server or browser privacy software.', 'log' => 'Required header \'Accept-Encoding\' missing'),
+		'7ad04a8a' => array('response' => 400, 'explanation' => 'The automated program you are using is not permitted to access this server. Please use a different program or a standard Web browser.', 'log' => 'Prohibited header \'Range\' present'),
+		'7d12528e' => array('response' => 403, 'explanation' => 'You do not have permission to access this server.', 'log' => 'Prohibited header \'Range\' or \'Content-Range\' in POST request'),
+		'939a6fbb' => array('response' => 403, 'explanation' => 'The proxy server you are using is not permitted to access this server. Please bypass the proxy server, or contact your proxy server administrator.', 'log' => 'Banned proxy server in use'),
+		'9c9e4979' => array('response' => 403, 'explanation' => 'The proxy server you are using is not permitted to access this server. Please bypass the proxy server, or contact your proxy server administrator.', 'log' => 'Prohibited header \'via\' present'),
+		'a0105122' => array('response' => 417, 'explanation' => 'Expectation failed. Please retry your request.', 'log' => 'Header \'Expect\' prohibited; resend without Expect'),
+		'a1084bad' => array('response' => 403, 'explanation' => 'You do not have permission to access this server.', 'log' => 'User-Agent claimed to be MSIE, with invalid Windows version'),
+		'a52f0448' => array('response' => 400, 'explanation' => 'An invalid request was received.  This may be caused by a malfunctioning proxy server or browser privacy software. If you are using a proxy server, bypass the proxy server or contact your proxy server administrator.', 'log' => 'Header \'Connection\' contains invalid values'),
+		'b40c8ddc' => array('response' => 403, 'explanation' => 'You do not have permission to access this server. Before trying again, close your browser, run anti-virus and anti-spyware software and remove any viruses and spyware from your computer.', 'log' => 'POST more than two days after GET'),
+		'b7830251' => array('response' => 400, 'explanation' => 'Your proxy server sent an invalid request. Please contact the proxy server administrator to have this problem fixed.', 'log' => 'Prohibited header \'Proxy-Connection\' present'),
+		'b9cc1d86' => array('response' => 403, 'explanation' => 'The proxy server you are using is not permitted to access this server. Please bypass the proxy server, or contact your proxy server administrator.', 'log' => 'Prohibited header \'X-Aaaaaaaaaa\' or \'X-Aaaaaaaaaaaa\' present'),
+		'c1fa729b' => array('response' => 403, 'explanation' => 'You do not have permission to access this server. Before trying again, run anti-virus and anti-spyware software and remove any viruses and spyware from your computer.', 'log' => 'Use of rotating proxy servers detected'),
+		'd60b87c7' => array('response' => 403, 'explanation' => 'You do not have permission to access this server. Before trying again, please remove any viruses or spyware from your computer.', 'log' => 'Trackback received via proxy server'),
+		'dfd9b1ad' => array('response' => 403, 'explanation' => 'You do not have permission to access this server.', 'log' => 'Request contained a malicious JavaScript or SQL injection attack'),
+		'e4de0453' => array('response' => 403, 'explanation' => 'An invalid request was received. You claimed to be a major search engine, but you do not appear to actually be a major search engine.', 'log' => 'User-Agent claimed to be msnbot, claim appears to be false'),
+		'e87553e1' => array('response' => 403, 'explanation' => 'You do not have permission to access this server.', 'log' => 'I know you and I don\'t like you, dirty spammer.'),
+		'f0dcb3fd' => array('response' => 403, 'explanation' => 'You do not have permission to access this server. Before trying again, run anti-virus and anti-spyware software and remove any viruses and spyware from your computer.', 'log' => 'Web browser attempted to send a trackback'),
+		'f1182195' => array('response' => 403, 'explanation' => 'An invalid request was received. You claimed to be a major search engine, but you do not appear to actually be a major search engine.', 'log' => 'User-Agent claimed to be Googlebot, claim appears to be false.'),
+		'f9f2b8b9' => array('response' => 403, 'explanation' => 'You do not have permission to access this server. This may be caused by a malfunctioning proxy server or browser privacy software.', 'log' => 'A User-Agent is required but none was provided.'),
+	);
+
+	if (array_key_exists($key, $bb2_responses)) return $bb2_responses[$key];
+	return array('00000000');
+}
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/safari.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/safari.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/safari.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,13 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Analyze user agents claiming to be Safari
+
+function bb2_safari($package)
+{
+	if (!array_key_exists('Accept', $package['headers_mixed'])) {
+		return "17566707";
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/screener.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/screener.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/screener.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,63 @@
+<?php if (!defined('BB2_CWD')) die("I said no cheating!");
+
+// Bad Behavior browser screener
+
+function bb2_screener_cookie($settings, $package, $cookie_name, $cookie_value)
+{
+	// FIXME: Set the real cookie
+	setcookie($cookie_name, $cookie_value, 0, bb2_relative_path());
+}
+
+function bb2_screener_javascript($settings, $package, $cookie_name, $cookie_value)
+{
+	global $bb2_javascript;
+
+	// FIXME: do something
+	$bb2_javascript = "<script type=\"text/javascript\">
+<!--
+function bb2_addLoadEvent(func) {
+	var oldonload = window.onload;
+	if (typeof window.onload != 'function') {
+		window.onload = func;
+	} else {
+		window.onload = function() {
+			oldonload();
+			func();
+		}
+	}
+}
+
+bb2_addLoadEvent(function() {
+	for ( i=0; i < document.forms.length; i++ ) {
+		if (document.forms[i].method == 'post') {
+			var myElement = document.createElement('input');
+			myElement.setAttribute('type', 'hidden');
+			myElement.name = '$cookie_name';
+			myElement.value = '$cookie_value';
+			document.forms[i].appendChild(myElement);
+		}
+	}
+});
+// --></script>
+		";
+}
+
+function bb2_screener($settings, $package)
+{
+	$cookie_name = BB2_COOKIE;
+
+	// Set up a simple cookie
+	$screener = array(time(), $package['ip']);
+	if (isset($package['headers_mixed']['X-Forwarded-For'])) {
+		array_push($screener, $package['headers_mixed']['X-Forwarded-For']);
+	}
+	if (isset($package['headers_mixed']['Client-Ip'])) {
+		array_push($screener, $package['headers_mixed']['Client-Ip']);
+	}
+
+	$cookie_value = implode(" ", $screener);
+
+	bb2_screener_cookie($settings, $package, BB2_COOKIE, $cookie_value);
+	bb2_screener_javascript($settings, $package, BB2_COOKIE, $cookie_value);
+}
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/trackback.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/trackback.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/trackback.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,18 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+// Specialized screening for trackbacks
+function bb2_trackback($package)
+{
+	// Web browsers don't send trackbacks
+	if ($package['is_browser']) {
+		return 'f0dcb3fd';
+	}
+
+	// Proxy servers don't send trackbacks either
+	if (array_key_exists('Via', $package['headers_mixed']) || array_key_exists('Max-Forwards', $package['headers_mixed']) || array_key_exists('X-Forwarded-For', $package['headers_mixed']) || array_key_exists('Client-Ip', $package['headers_mixed'])) {
+		return 'd60b87c7';
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/version.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/version.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/version.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,3 @@
+<?php if (!defined('BB2_CWD')) die("I said no cheating!");
+define('BB2_VERSION', "2.0.8");
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/whitelist.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/whitelist.inc.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/whitelist.inc.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,57 @@
+<?php if (!defined('BB2_CORE')) die('I said no cheating!');
+
+function bb2_whitelist($package)
+{
+	// DANGER! DANGER! DANGER! DANGER! DANGER! DANGER! DANGER! DANGER!
+
+	// Inappropriate whitelisting WILL expose you to spam, or cause Bad
+	// Behavior to stop functioning entirely!  DO NOT WHITELIST unless you
+	// are 100% CERTAIN that you should.
+
+	// IP address ranges use the CIDR format.
+
+	// Includes four examples of whitelisting by IP address and netblock.
+	$bb2_whitelist_ip_ranges = array(
+		"10.0.0.0/8",
+		"172.16.0.0/12",
+		"192.168.0.0/16",
+//		"127.0.0.1",
+		"208.54.95.129",
+	);
+
+	// DANGER! DANGER! DANGER! DANGER! DANGER! DANGER! DANGER! DANGER!
+
+	// Inappropriate whitelisting WILL expose you to spam, or cause Bad
+	// Behavior to stop functioning entirely!  DO NOT WHITELIST unless you
+	// are 100% CERTAIN that you should.
+
+	// You should not whitelist search engines by user agent. Use the IP
+	// netblock for the search engine instead. See http://whois.arin.net/
+	// to locate the netblocks for an IP.
+
+	// User agents are matched by exact match only.
+
+	// Includes one example of whitelisting by user agent.
+	// All are commented out.
+	$bb2_whitelist_user_agents = array(
+	//	"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) It's me, let me in",
+	);
+
+	// DANGER! DANGER! DANGER! DANGER! DANGER! DANGER! DANGER! DANGER!
+
+	// Do not edit below this line
+
+	if (!empty($bb2_whitelist_ip_ranges)) {
+		foreach ($bb2_whitelist_ip_ranges as $range) {
+			if (match_cidr($package['ip'], $range)) return true;
+		}
+	}
+	if (!empty($bb2_whitelist_user_agents)) {
+		foreach ($bb2_whitelist_user_agents as $user_agent) {
+			if (!strcmp($package['headers_mixed']['User-Agent'], $user_agent)) return true;
+		}
+	}
+	return false;
+}
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-generic.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-generic.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-generic.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,140 @@
+<?php
+/*
+Bad Behavior - detects and blocks unwanted Web accesses
+Copyright (C) 2005-2006 Michael Hampton
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+As a special exemption, you may link this program with any of the
+programs listed below, regardless of the license terms of those
+programs, and distribute the resulting program, without including the
+source code for such programs: ExpressionEngine
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+
+Please report any problems to badbots AT ioerror DOT us
+*/
+
+###############################################################################
+###############################################################################
+
+define('BB2_CWD', dirname(__FILE__));
+
+// Settings you can adjust for Bad Behavior.
+// Most of these are unused in non-database mode.
+$bb2_settings_defaults = array(
+	'log_table' => 'bad_behavior',
+	'display_stats' => true,
+	'strict' => false,
+	'verbose' => false
+);
+
+// Bad Behavior callback functions.
+
+// Return current time in the format preferred by your database.
+function bb2_db_date() {
+	return gmdate('Y-m-d H:i:s');	// Example is MySQL format
+}
+
+// Return affected rows from most recent query.
+function bb2_db_affected_rows() {
+	return false;
+}
+
+// Escape a string for database usage
+function bb2_db_escape($string) {
+	// return mysql_real_escape_string($string);
+	return $string;	// No-op when database not in use.
+}
+
+// Return the number of rows in a particular query.
+function bb2_db_num_rows($result) {
+	if ($result !== FALSE)
+		return count($result);
+	return 0;
+}
+
+// Run a query and return the results, if any.
+// Should return FALSE if an error occurred.
+// Bad Behavior will use the return value here in other callbacks.
+function bb2_db_query($query) {
+	return FALSE;
+}
+
+// Return all rows in a particular query.
+// Should contain an array of all rows generated by calling mysql_fetch_assoc()
+// or equivalent and appending the result of each call to an array.
+function bb2_db_rows($result) {
+	return $result;
+}
+
+// Return emergency contact email address.
+function bb2_email() {
+	// return "example at example.com";	// You need to change this.
+	return "badbots at ioerror.us";	// You need to change this.
+}
+
+// retrieve settings from database
+// Settings are hard-coded for non-database use
+function bb2_read_settings() {
+	global $bb2_settings_defaults;
+	return $bb2_settings_defaults;
+}
+
+// write settings to database
+function bb2_write_settings($settings) {
+	return false;
+}
+
+// installation
+function bb2_install() {
+	return false;
+}
+
+// Screener
+// Insert this into the <head> section of your HTML through a template call
+// or whatever is appropriate. This is optional we'll fall back to cookies
+// if you don't use it.
+function bb2_insert_head() {
+	global $bb2_javascript;
+	echo $bb2_javascript;
+}
+
+// Display stats? This is optional.
+function bb2_insert_stats($force = false) {
+	$settings = bb2_read_settings();
+
+	if ($force || $settings['display_stats']) {
+		$blocked = bb2_db_query("SELECT COUNT(*) FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000'");
+		if ($blocked !== FALSE) {
+			echo sprintf('<p><a href="http://www.homelandstupidity.us/software/bad-behavior/">%1$s</a> %2$s <strong>%3$s</strong> %4$s</p>', __('Bad Behavior'), __('has blocked'), $blocked[0]["COUNT(*)"], __('access attempts in the last 7 days.'));
+		}
+	}
+}
+
+// Return the top-level relative path of wherever we are (for cookies)
+// You should provide in $url the top-level URL for your site.
+function bb2_relative_path() {
+	//$url = parse_url(get_bloginfo('url'));
+	//return $url['path'] . '/';
+	return '/';
+}
+
+// Calls inward to Bad Behavor itself.
+require_once(BB2_CWD . "/bad-behavior/version.inc.php");
+require_once(BB2_CWD . "/bad-behavior/core.inc.php");
+bb2_install();	// FIXME: see above
+
+bb2_start(bb2_read_settings());
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-lifetype.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-lifetype.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-lifetype.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,148 @@
+<?php
+/*
+http://blog.markplace.net
+
+Bad Behavior - LifeType Plugin
+Copyright (C) 2006 Mark Wu http://blog.markplace.net
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+*/
+
+// This file is the entry point for Bad Behavior in LifeType.
+
+if (!defined('PLOG_CLASS_PATH')) die('No cheating!');
+
+define('BB2_CWD', PLOG_CLASS_PATH );
+define('BB2_EMERGENCY_EMAIL', "admin at yourblog.com" );
+
+// Bad Behavior callback functions.
+
+// Return current time in the format preferred by your database.
+function bb2_db_date() {
+	return gmdate('Y-m-d H:i:s');
+}
+
+// Return affected rows from most recent query.
+function bb2_db_affected_rows() {
+	include_once( PLOG_CLASS_PATH."class/database/db.class.php" );
+	$db =& Db::getDb();
+	
+	return $db->Affected_Rows();
+}
+
+// Escape a string for database usage
+function bb2_db_escape($string) {
+    include_once( PLOG_CLASS_PATH."class/database/db.class.php" );    
+
+	return Db::qstr($string);
+}
+
+// Return the number of rows in a particular query.
+function bb2_db_num_rows($result) {
+	return $result->RecordCount();
+}
+
+// Run a query and return the results, if any.
+// Should return FALSE if an error occurred.
+function bb2_db_query($query) {
+	include_once( PLOG_CLASS_PATH."class/database/db.class.php" );    
+	$db =& Db::getDb();
+
+	$result = $db->Execute( $query );
+
+	if (!$result)
+		return false;
+
+	return $result;
+}
+
+// Return all rows in a particular query.
+// Should contain an array of all rows generated by calling mysql_fetch_assoc()
+// or equivalent and appending the result of each call to an array.
+function bb2_db_rows($result) {
+	$rows = array();
+	while( $row = $result->FetchRow()) {
+		$rows[] = $row;
+	}
+
+	return $rows;
+}
+
+// Return emergency contact email address.
+function bb2_email() {
+	return BB2_EMERGENCY_EMAIL;
+}
+
+// retrieve settings from lifetype config
+function bb2_read_settings() {
+	include_once( PLOG_CLASS_PATH."class/database/db.class.php" );
+	include_once( PLOG_CLASS_PATH."class/config/config.class.php" );    
+	$config =& Config::getConfig();
+	$prefix = Db::getPrefix();
+	$displayStats = $config->getValue( 'bb2_display_stats', true );
+	$verbose = $config->getValue( 'bb2_verbose', false );
+	$isInstalled = $config->getValue( 'bb2_installed', false );
+	
+	return array('log_table' => $prefix . 'bad_behavior', 
+				 'display_stats' => $displayStats,
+				 'verbose' => $verbose,
+				 'is_installed' => $isInstalled );
+}
+
+// write settings to lifetype config
+function bb2_write_settings($settings) {
+    include_once( PLOG_CLASS_PATH."class/config/config.class.php" );
+	$config =& Config::getConfig();
+
+	$config->setValue( 'bb2_display_stats', $settings['display_stats'] );
+	$config->setValue( 'bb2_verbose', $settings['verbose'] );
+	$config->setValue( 'bb2_installed', $settings['is_installed'] );
+	$config->save();
+}
+	
+// installation
+function bb2_install() {
+	$settings = bb2_read_settings();
+	if( $settings['is_installed'] == false )
+	{
+		bb2_db_query(bb2_table_structure($settings['log_table']));
+		$settings['is_installed'] = true;
+		bb2_write_settings( $settings );
+	}
+}
+
+// Return the top-level relative path of wherever we are (for cookies)
+function bb2_relative_path() {
+    include_once( PLOG_CLASS_PATH."class/config/config.class.php" );
+	$config =& Config::getConfig();
+	
+	$url = parse_url( $config->getValue( 'base_url' ) );
+	if( empty($url['path']) )
+		return '/';
+	else {
+		if( substr( $url['path'], -1, 1 ) == '/' )
+			return $url['path'];
+		else
+			return $url['path'] . '/';
+	}
+}
+
+// Start Bad Behavior investigation
+require_once(BB2_CWD . "/bad-behavior/version.inc.php");
+require_once(BB2_CWD . "/bad-behavior/core.inc.php");
+bb2_install();
+$settings = bb2_read_settings();
+bb2_start($settings);
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-mediawiki.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-mediawiki.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-mediawiki.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,154 @@
+<?php
+/*
+http://www.homelandstupidity.us/software/bad-behavior/
+
+Bad Behavior - detects and blocks unwanted Web accesses
+Copyright (C) 2005 Michael Hampton
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+*/
+
+// This file is the entry point for Bad Behavior.
+
+if (!defined('MEDIAWIKI')) die();
+
+// Settings you can adjust for Bad Behavior.
+$bb2_settings_defaults = array(
+	'log_table' => $wgDBprefix . 'bad_behavior',
+	'display_stats' => true,
+	'strict' => false,
+	'verbose' => false
+);
+
+define('BB2_CWD', dirname(__FILE__));
+
+// Bad Behavior callback functions.
+
+// Return current time in the format preferred by your database.
+function bb2_db_date() {
+	return gmdate('Y-m-d H:i:s');
+}
+
+// Return affected rows from most recent query.
+function bb2_db_affected_rows($result) {
+	return wfAffectedRows($result);
+}
+
+// Escape a string for database usage
+function bb2_db_escape($string) {
+	// FIXME SECURITY: Get a straight answer from somebody on how MW escapes stuff
+	return addslashes($string);
+}
+
+// Return the number of rows in a particular query.
+function bb2_db_num_rows($result) {
+	return wfNumRows($result);
+}
+
+// Run a query and return the results, if any.
+// Should return FALSE if an error occurred.
+function bb2_db_query($query) {
+	$bb2_last_query = wfQuery($query, DB_WRITE);
+	return $bb2_last_query;
+}
+
+// Return all rows in a particular query.
+// Should contain an array of all rows generated by calling mysql_fetch_assoc()
+// or equivalent and appending the result of each call to an array.
+function bb2_db_rows($result) {
+	$rows = array();
+	while ($row = wfFetchRow($result)) {
+		$rows[] = $row;
+	}
+	return $rows;
+}
+
+// Return emergency contact email address.
+function bb2_email() {
+	global $wgEmergencyContact;
+	return $wgEmergencyContact;
+}
+
+// This Bad Behavior-related function is a stub. You can help MediaWiki by expanding it.
+// retrieve settings from database
+function bb2_read_settings() {
+	global $bb2_settings_defaults;
+	return $bb2_settings_defaults;
+}
+
+// This Bad Behavior-related function is a stub. You can help MediaWiki by expanding it.
+// write settings to database
+function bb2_write_settings($settings) {
+	return;
+}
+
+// In some configurations automatic table creation may fail with the message
+// You must update your load-balancing configuration.
+// You can create the table manually (see query in
+// bad-behavior/database.inc.php) and add this line to your LocalSettings.php:
+//
+//   define('BB2_NO_CREATE', true);
+
+// installation
+function bb2_install() {
+	$settings = bb2_read_settings();
+	if (defined('BB2_NO_CREATE')) return;
+	bb2_db_query(bb2_table_structure($settings['log_table']));
+}
+
+// Return the top-level relative path of wherever we are (for cookies)
+function bb2_relative_path() {
+	// TODO: This might not be the best way, but it seems to work
+	global $wgScript;
+	return dirname($wgScript) . "/";
+}
+
+// Cute timer display
+function bb2_mediawiki_timer(&$parser, &$text) {
+	global $bb2_timer_total;
+	$text = "<!-- Bad Behavior " . BB2_VERSION . " run time: " . number_format(1000 * $bb2_timer_total, 3) . " ms -->" . $text;
+}
+
+function bb2_mediawiki_entry() {
+	global $bb2_timer_total;
+
+	$bb2_mtime = explode(" ", microtime());
+	$bb2_timer_start = $bb2_mtime[1] + $bb2_mtime[0];
+
+	if (php_sapi_name() != 'cli') {
+		require_once(BB2_CWD . "/bad-behavior/core.inc.php");
+		bb2_install();	// FIXME: see above
+		$settings = bb2_read_settings();
+		bb2_start($settings);
+	}
+
+	$bb2_mtime = explode(" ", microtime());
+	$bb2_timer_stop = $bb2_mtime[1] + $bb2_mtime[0];
+	$bb2_timer_total = $bb2_timer_stop - $bb2_timer_start;
+}
+
+require_once(BB2_CWD . "/bad-behavior/version.inc.php");
+$wgExtensionCredits['other'][] = array(
+	'name' => 'Bad Behavior',
+	'version' => BB2_VERSION,
+	'author' => 'Michael Hampton',
+	'description' => 'Detects and blocks unwanted Web accesses',
+	'url' => 'http://www.homelandstupidity.us/software/bad-behavior/'
+);
+
+$wgHooks['ParserAfterTidy'][] = 'bb2_mediawiki_timer';
+$wgExtensionFunctions[] = 'bb2_mediawiki_entry';
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-wordpress.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-wordpress.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-wordpress.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,172 @@
+<?php
+/*
+Plugin Name: Bad Behavior
+Version: 2.0.8
+Description: Deny automated spambots access to your PHP-based Web site.
+Plugin URI: http://www.homelandstupidity.us/software/bad-behavior/
+Author: Michael Hampton
+Author URI: http://www.homelandstupidity.us/
+License: GPL
+
+Bad Behavior - detects and blocks unwanted Web accesses
+Copyright (C) 2005 Michael Hampton
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+As a special exemption, you may link this program with any of the
+programs listed below, regardless of the license terms of those
+programs, and distribute the resulting program, without including the
+source code for such programs: ExpressionEngine
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+
+Please report any problems to badbots AT ioerror DOT us
+*/
+
+###############################################################################
+###############################################################################
+
+if (!defined('ABSPATH')) die("No cheating!");
+
+$bb2_mtime = explode(" ", microtime());
+$bb2_timer_start = $bb2_mtime[1] + $bb2_mtime[0];
+
+define('BB2_CWD', dirname(__FILE__));
+
+// Bad Behavior callback functions.
+
+// Return current time in the format preferred by your database.
+function bb2_db_date() {
+	return get_gmt_from_date(current_time('mysql'));
+}
+
+// Return affected rows from most recent query.
+function bb2_db_affected_rows() {
+	global $wpdb;
+
+	return $wpdb->rows_affected;
+}
+
+// Escape a string for database usage
+function bb2_db_escape($string) {
+	global $wpdb;
+
+	return $wpdb->escape($string);
+}
+
+// Return the number of rows in a particular query.
+function bb2_db_num_rows($result) {
+	if ($result !== FALSE)
+		return count($result);
+	return 0;
+}
+
+// Run a query and return the results, if any.
+// Should return FALSE if an error occurred.
+// Bad Behavior will use the return value here in other callbacks.
+function bb2_db_query($query) {
+	global $wpdb;
+
+	$wpdb->hide_errors();
+	$result = $wpdb->get_results($query, ARRAY_A);
+	$wpdb->show_errors();
+	if (mysql_error()) {
+		return FALSE;
+	}
+	return $result;
+}
+
+// Return all rows in a particular query.
+// Should contain an array of all rows generated by calling mysql_fetch_assoc()
+// or equivalent and appending the result of each call to an array.
+// For WP this is pretty much a no-op.
+function bb2_db_rows($result) {
+	return $result;
+}
+
+// Return emergency contact email address.
+function bb2_email() {
+	return get_bloginfo('admin_email');
+}
+
+// retrieve settings from database
+function bb2_read_settings() {
+	global $wpdb;
+
+	// Add in default settings when they aren't yet present in WP
+	$settings = get_settings('bad_behavior_settings');
+
+	if (!$settings) $settings = array();
+	return array_merge(array('log_table' => $wpdb->prefix . 'bad_behavior', 'display_stats' => true, 'strict' => false, 'verbose' => false), $settings);
+}
+
+// write settings to database
+function bb2_write_settings($settings) {
+	update_option('bad_behavior_settings', $settings);
+}
+
+// installation
+function bb2_install() {
+	$settings = bb2_read_settings();
+	bb2_db_query(bb2_table_structure($settings['log_table']));
+}
+
+// Cute timer display; screener
+function bb2_insert_head() {
+	global $bb2_timer_total;
+	global $bb2_javascript;
+	echo "\n<!-- Bad Behavior " . BB2_VERSION . " run time: " . number_format(1000 * $bb2_timer_total, 3) . " ms -->\n";
+	echo $bb2_javascript;
+}
+
+// Display stats?
+function bb2_insert_stats($force = false) {
+	$settings = bb2_read_settings();
+
+	if ($force || $settings['display_stats']) {
+		$blocked = bb2_db_query("SELECT COUNT(*) FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000'");
+		if ($blocked !== FALSE) {
+			echo sprintf('<p><a href="http://www.homelandstupidity.us/software/bad-behavior/">%1$s</a> %2$s <strong>%3$s</strong> %4$s</p>', __('Bad Behavior'), __('has blocked'), $blocked[0]["COUNT(*)"], __('access attempts in the last 7 days.'));
+		}
+	}
+}
+
+// Return the top-level relative path of wherever we are (for cookies)
+function bb2_relative_path() {
+	$url = parse_url(get_bloginfo('url'));
+	return $url['path'] . '/';
+}
+
+// FIXME: some sort of hack to run install on 1.5 (and older?) blogs
+// FIXME: figure out what's wrong on 2.0 that this doesn't work
+// register_activation_hook(__FILE__, 'bb2_install');
+//add_action('activate_bb2/bad-behavior-wordpress.php', 'bb2_install');
+add_action('wp_head', 'bb2_insert_head');
+add_action('wp_footer', 'bb2_insert_stats');
+
+// Calls inward to Bad Behavor itself.
+require_once(BB2_CWD . "/bad-behavior/version.inc.php");
+require_once(BB2_CWD . "/bad-behavior/core.inc.php");
+bb2_install();	// FIXME: see above
+
+if (is_admin() || strstr($_SERVER['PHP_SELF'], 'wp-admin/')) {	// 1.5 kludge
+	require_once(BB2_CWD . "/bad-behavior/admin.inc.php");
+}
+
+bb2_start(bb2_read_settings());
+
+$bb2_mtime = explode(" ", microtime());
+$bb2_timer_stop = $bb2_mtime[1] + $bb2_mtime[0];
+$bb2_timer_total = $bb2_timer_stop - $bb2_timer_start;
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-ydweblog.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-ydweblog.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-ydweblog.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,136 @@
+<?php
+/*
+Bad Behavior - detects and blocks unwanted Web accesses
+Copyright (C) 2005-2006 Michael Hampton
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+As a special exemption, you may link this program with any of the
+programs listed below, regardless of the license terms of those
+programs, and distribute the resulting program, without including the
+source code for such programs: ExpressionEngine
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+
+Please report any problems to badbots AT ioerror DOT us
+*/
+
+###############################################################################
+###############################################################################
+
+define('BB2_CWD', dirname(__FILE__));
+
+// Settings you can adjust for Bad Behavior.
+// Most of these are unused in non-database mode.
+$bb2_settings_defaults = array(
+	'log_table' => '#_bad_behavior',
+	'display_stats' => true,
+	'strict' => false,
+	'verbose' => true
+);
+
+// Return current time in the format preferred by your database.
+function bb2_db_date() {
+	return gmdate('Y-m-d H:i:s');
+}
+
+// Return affected rows from most recent query.
+function bb2_db_affected_rows() {
+    return mysql_affected_rows( $GLOBALS['db']->_conn );
+}
+
+// Escape a string for database usage
+function bb2_db_escape($string) {
+    return $GLOBALS['db']->escape( $string );
+}
+
+// Return the number of rows in a particular query.
+function bb2_db_num_rows($result) {
+	if ($result !== FALSE)
+		return count($result);
+	return 0;
+}
+
+// Run a query and return the results, if any.
+// Should return FALSE if an error occurred.
+// Bad Behavior will use the return value here in other callbacks.
+function bb2_db_query($query) {
+    return @ $GLOBALS['db']->getRecords( $query );
+}
+
+// Return all rows in a particular query.
+// Should contain an array of all rows generated by calling mysql_fetch_assoc()
+// or equivalent and appending the result of each call to an array.
+function bb2_db_rows($result) {
+	return $result;
+}
+
+// Return emergency contact email address.
+function bb2_email() {
+	return $_SERVER['SERVER_ADMIN'];
+}
+
+// retrieve settings from database
+// Settings are hard-coded for non-database use
+function bb2_read_settings() {
+	global $bb2_settings_defaults;
+	return $bb2_settings_defaults;
+}
+
+// write settings to database
+function bb2_write_settings($settings) {
+	return false;
+}
+
+// installation
+function bb2_install() {
+    $settings = bb2_read_settings();
+    $GLOBALS['db']->executeSql(bb2_table_structure($settings['log_table']));
+}
+
+// Screener
+// Insert this into the <head> section of your HTML through a template call
+// or whatever is appropriate. This is optional we'll fall back to cookies
+// if you don't use it.
+function bb2_insert_head() {
+	global $bb2_timer_total;
+	global $bb2_javascript;
+	return "\n<!-- Bad Behavior " . BB2_VERSION . " run time: " . number_format(1000 * $bb2_timer_total, 3) . " ms -->\n" . $bb2_javascript;
+}
+
+// Display stats? This is optional.
+function bb2_insert_stats($force = false) {
+	$settings = bb2_read_settings();
+
+	if ($force || $settings['display_stats']) {
+		$blocked = bb2_db_query("SELECT COUNT(*) FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000'");
+		if ($blocked !== FALSE) {
+			echo sprintf('<p><a href="http://www.homelandstupidity.us/software/bad-behavior/">%1$s</a> %2$s <strong>%3$s</strong> %4$s</p>', __('Bad Behavior'), __('has blocked'), $blocked[0]["COUNT(*)"], __('access attempts in the last 7 days.'));
+		}
+	}
+}
+
+// Return the top-level relative path of wherever we are (for cookies)
+// You should provide in $url the top-level URL for your site.
+function bb2_relative_path() {
+	return '/';
+}
+
+// Calls inward to Bad Behavor itself.
+require_once(BB2_CWD . "/bad-behavior/version.inc.php");
+require_once(BB2_CWD . "/bad-behavior/core.inc.php");
+bb2_install();
+
+bb2_start(bb2_read_settings());
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/index.html
===================================================================

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -960,6 +960,21 @@
             $this->db->executeSql( $sql );
         }
 
+        // Get the bad behavior requests count
+        function getBadBehaviorRequestsCount() {
+            $settings = bb2_read_settings();
+            return $this->db->getValueByName(
+                "SELECT COUNT(*) AS COUNT FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000'"
+                , 'count'
+            );
+        }
+
+        // Get the bad behavior requests
+        function getBadBehaviorRequests() {
+            $settings = bb2_read_settings();
+            return $this->db->getRecords( "SELECT * FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000' ORDER BY DATE DESC" );
+        }
+
         // Function to resize an uploaded image. Takes a YDFSImage object as it's argument
         function resizeUploadedImage( $image ) {
 

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogRequest.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogRequest.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogRequest.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -149,6 +149,7 @@
             $this->tpl->assign( 'weblog_link_gallery_atom',    YDUrl::makeLinkAbsolute( 'xml.php?do=atomgallery' ) );
             $this->tpl->assign( 'weblog_link_archive',         YDUrl::makeLinkAbsolute( 'archive.php' ) );
             $this->tpl->assign( 'weblog_link_archive_gallery', YDUrl::makeLinkAbsolute( 'archive_gallery.php' ) );
+            $this->tpl->assign( 'bb2_comment',                 trim( bb2_insert_head() ) );
 
             // Add the Google Analytics tag
             if ( YDConfig::get( 'google_analytics', '' ) != '' ) {

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -91,6 +91,9 @@
         YDConfig::get( 'db_pass', '' ), YDConfig::get( 'db_host', 'localhost' )
     );
 
+    // Include bad behaviour
+    @ include_once( dirname( __FILE__ ) . '/Bad-Behavior/bad-behavior-ydweblog.php' );
+
     // Set the right locale
     $language = YDConfig::get( 'weblog_language', 'en' );
     $language = empty( $language ) ? 'en' : $language;

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -147,6 +147,7 @@
 $GLOBALS['t']['a_statistics'] = 'Statistics';
 $GLOBALS['t']['h_logoff'] = 'Logoff';
 $GLOBALS['t']['a_logoff'] = 'Logoff';
+$GLOBALS['t']['a_bad_behavior'] = 'Bad Behavior';
 
 // manage/login.tpl
 $GLOBALS['t']['username'] = 'User';
@@ -375,4 +376,12 @@
 $GLOBALS['t']['schema_version'] = 'Database schema version';
 $GLOBALS['t']['installed_on'] = 'installed on';
 
+// manage/bad_behavior.tpl
+$GLOBALS['t']['total_bad_requests_stopped'] = 'Total Count Of Denied Requests';
+$GLOBALS['t']['requests'] = 'requests';
+$GLOBALS['t']['total_bad_requests_stopped'] = 'Denied Requests';
+$GLOBALS['t']['ip'] = 'IP';
+$GLOBALS['t']['request_method'] = 'Method';
+$GLOBALS['t']['url'] = 'URL';
+
 ?>

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -147,6 +147,7 @@
 $GLOBALS['t']['a_statistics'] = 'Statistieken';
 $GLOBALS['t']['h_logoff'] = 'Afmelden';
 $GLOBALS['t']['a_logoff'] = 'Afmelden';
+$GLOBALS['t']['a_bad_behavior'] = 'Bad Behavior';
 
 // manage/login.tpl
 $GLOBALS['t']['username'] = 'Gebruiker';
@@ -375,4 +376,12 @@
 $GLOBALS['t']['schema_version'] = 'Database schema versie';
 $GLOBALS['t']['installed_on'] = 'ge&iuml;nstalleerd op';
 
+// manage/bad_behavior.tpl
+$GLOBALS['t']['total_bad_requests_stopped'] = 'Total Aantal Geweigerde Requests';
+$GLOBALS['t']['requests'] = 'requests';
+$GLOBALS['t']['bad_requests_stopped'] = 'Geweigerde Requests';
+$GLOBALS['t']['ip'] = 'IP';
+$GLOBALS['t']['request_method'] = 'Methode';
+$GLOBALS['t']['url'] = 'URL';
+
 ?>

Modified: YDFramework2.0/trunk/examples/weblog/manage/__mng_header.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/__mng_header.tpl	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/manage/__mng_header.tpl	2006-12-30 21:22:13 UTC (rev 2283)
@@ -142,6 +142,7 @@
                         <td class="adminRowL">
                             <b>{t w="h_statistics"}</b><br/>
                             &raquo; <a href="https://www.google.com/analytics/home/" target="_blank">{t w="cfg_google_analytics"}</a><br/>
+                            &raquo; <a href="bad_behavior.php">{t w="a_bad_behavior"}</a><br/>
                         </td>
                     </tr>
                 {/if}

Added: YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.php	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.php	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,41 @@
+<?php
+
+    // Include the Yellow Duck Framework
+    include_once( dirname( __FILE__ ) . '/../include/YDWeblog_init.php' );
+
+    // Class definition
+    class bad_behavior extends YDWeblogAdminRequest {
+
+        // Class constructor
+        function bad_behavior() {
+            $this->YDWeblogAdminRequest();
+        }
+
+        // Default action
+        function actionDefault() {
+
+            // Get the count and number of requests
+            $requests_count = $this->weblog->getBadBehaviorRequestsCount();
+            $requests = $this->weblog->getBadBehaviorRequests();
+
+            // Get the pagesize and current page from the URL
+            $page = @ $_GET['page'];
+
+            // Create the YDRecordSet object
+            $requests = new YDRecordSet( $requests, $page, YDConfig::get( 'YD_DB_DEFAULTPAGESIZE', 20 ) );
+
+            // Assign it to the template
+            $this->tpl->assign( 'requests_count', $requests_count );
+            $this->tpl->assign( 'requests', $requests );
+
+            // Display the template
+            $this->display();
+
+        }
+
+    }
+
+    // Process the request
+    YDInclude( 'YDF2_process.php' );
+
+?>

Added: YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.tpl	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.tpl	2006-12-30 21:22:13 UTC (rev 2283)
@@ -0,0 +1,47 @@
+{include file="__mng_header.tpl"}
+
+<p class="title">{t w="h_statistics"} &raquo; {t w="a_bad_behavior"}</p>
+
+{if $YD_ACTION == 'default'}
+
+    <table width="700" cellspacing="0" cellpadding="0" border="0">
+        <tr>
+            <th class="adminRowLG" colspan="7">
+                &raquo; {t w="total_bad_requests_stopped"}
+            </th>
+        </tr>
+        <tr><td colspan="7" class="adminRowL">{$requests_count} {t w="requests"}</td></tr>
+        {if $requests->set}
+            <tr><td colspan="7">&nbsp;</td></tr>
+            <tr>
+                <th class="adminRowLG" colspan="7">
+                    &raquo; {t w="bad_requests_stopped"}
+                </th>
+            </tr>
+            <tr>
+                <th class="adminRowL">{t w="date"}</th>
+                <th class="adminRowL">{t w="ip"}</th>
+                <th class="adminRowL">{t w="request_method"}</th>
+                <th class="adminRowL">{t w="url"}</th>
+            </tr>
+            <tr><td class="adminRowR" colspan="5">{$requests->getBrowseBar()}</td></tr>
+            {foreach from=$requests->set item="request"}
+                <tr onMouseOver="YDRowMouseOver(this);" onMouseOut="YDRowMouseOut(this);" {if $comment.item_is_draft eq '1'}style="color: gray"{/if}>
+                    <td class="adminRowL">{$request.date}</td>
+                    <td class="adminRowL">{$request.ip}</td>
+                    <td class="adminRowL">{$request.request_method}</td>
+                    <td class="adminRowL">{$request.request_uri}</td>
+                </tr>
+            {/foreach}
+            <tr><td class="adminRowR" colspan="5">{$requests->getBrowseBar()}</td></tr>
+            <tr>
+                <td class="adminRowLNB" colspan="5">
+                    <p class="subline">{t w="total"}: {$requests->totalRows}</p>
+                </td>
+            </tr>
+        {/if}
+    </table>
+
+{/if}
+
+{include file="__mng_footer.tpl"}

Modified: YDFramework2.0/trunk/examples/weblog/skins/default/__std_header.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default/__std_header.tpl	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/skins/default/__std_header.tpl	2006-12-30 21:22:13 UTC (rev 2283)
@@ -68,6 +68,8 @@
     //-->
     </script>
 
+    {$bb2_comment}
+
 </head>
 
 <body>

Modified: YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/__std_header.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/__std_header.tpl	2006-12-30 20:05:33 UTC (rev 2282)
+++ YDFramework2.0/trunk/examples/weblog/skins/default_with_lightbox/__std_header.tpl	2006-12-30 21:22:13 UTC (rev 2283)
@@ -74,6 +74,8 @@
     //-->
     </script>
 
+    {$bb2_comment}
+
 </head>
 
 <body>



From pclaerhout at mail.berlios.de  Sat Dec 30 22:28:44 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sat, 30 Dec 2006 22:28:44 +0100
Subject: [ydf-devel] r2284 - YDFramework2.0/trunk/examples/weblog/include
Message-ID: <200612302128.kBULSi4a019197@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-30 22:28:43 +0100 (Sat, 30 Dec 2006)
New Revision: 2284

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php
Log:
Bad behaviour is no longer included in the manage section.

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php	2006-12-30 21:22:13 UTC (rev 2283)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php	2006-12-30 21:28:43 UTC (rev 2284)
@@ -92,7 +92,9 @@
     );
 
     // Include bad behaviour
-    @ include_once( dirname( __FILE__ ) . '/Bad-Behavior/bad-behavior-ydweblog.php' );
+    if ( strtolower( basename( dirname( YD_SELF_SCRIPT ) ) ) != 'manage' ) {
+        @include_once( dirname( __FILE__ ) . '/Bad-Behavior/bad-behavior-ydweblog.php' );
+    }
 
     // Set the right locale
     $language = YDConfig::get( 'weblog_language', 'en' );



From pclaerhout at mail.berlios.de  Sat Dec 30 22:30:28 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sat, 30 Dec 2006 22:30:28 +0100
Subject: [ydf-devel] r2285 - in
	YDFramework2.0/trunk/examples/weblog/include: . Bad-Behavior
Message-ID: <200612302130.kBULUSi3019463@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-30 22:30:27 +0100 (Sat, 30 Dec 2006)
New Revision: 2285

Modified:
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-ydweblog.php
   YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php
Log:
Fixed my previous commit.

Modified: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-ydweblog.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-ydweblog.php	2006-12-30 21:28:43 UTC (rev 2284)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior-ydweblog.php	2006-12-30 21:30:27 UTC (rev 2285)
@@ -131,6 +131,9 @@
 require_once(BB2_CWD . "/bad-behavior/core.inc.php");
 bb2_install();
 
-bb2_start(bb2_read_settings());
+// Not if in the manage section
+if ( strtolower( basename( dirname( YD_SELF_SCRIPT ) ) ) != 'manage' ) {
+    bb2_start(bb2_read_settings());
+}
 
 ?>

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php	2006-12-30 21:28:43 UTC (rev 2284)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblog_init.php	2006-12-30 21:30:27 UTC (rev 2285)
@@ -92,9 +92,7 @@
     );
 
     // Include bad behaviour
-    if ( strtolower( basename( dirname( YD_SELF_SCRIPT ) ) ) != 'manage' ) {
-        @include_once( dirname( __FILE__ ) . '/Bad-Behavior/bad-behavior-ydweblog.php' );
-    }
+    @include_once( dirname( __FILE__ ) . '/Bad-Behavior/bad-behavior-ydweblog.php' );
 
     // Set the right locale
     $language = YDConfig::get( 'weblog_language', 'en' );



From pclaerhout at mail.berlios.de  Sun Dec 31 11:19:04 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 31 Dec 2006 11:19:04 +0100
Subject: [ydf-devel] r2286 - in YDFramework2.0/trunk/examples/weblog:
	include include/Bad-Behavior/bad-behavior include/languages manage
Message-ID: <200612311019.kBVAJ4DP031272@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-31 11:19:04 +0100 (Sun, 31 Dec 2006)
New Revision: 2286

Modified:
   YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/core.inc.php
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
   YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
   YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.php
   YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.tpl
Log:
The bad behavior screen now shows the post requests instead of the denied requests.

Modified: YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/core.inc.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/core.inc.php	2006-12-30 21:30:27 UTC (rev 2285)
+++ YDFramework2.0/trunk/examples/weblog/include/Bad-Behavior/bad-behavior/core.inc.php	2006-12-31 10:19:04 UTC (rev 2286)
@@ -23,7 +23,7 @@
 		`server_protocol` TEXT NOT NULL,
 		`http_headers` TEXT NOT NULL,
 		`user_agent` TEXT NOT NULL,
-		`request_entity` TEXT NOT NULL,
+		`request_entity` TEXT NULL,
 		`key` TEXT NOT NULL,
 		INDEX (`ip`(15)),
 		INDEX (`user_agent`(10)),

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-30 21:30:27 UTC (rev 2285)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-31 10:19:04 UTC (rev 2286)
@@ -964,7 +964,7 @@
         function getBadBehaviorRequestsCount() {
             $settings = bb2_read_settings();
             return $this->db->getValueByName(
-                "SELECT COUNT(*) AS COUNT FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000'"
+                "SELECT COUNT(*) AS COUNT FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '0'"
                 , 'count'
             );
         }
@@ -972,9 +972,15 @@
         // Get the bad behavior requests
         function getBadBehaviorRequests() {
             $settings = bb2_read_settings();
-            return $this->db->getRecords( "SELECT * FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000' ORDER BY DATE DESC" );
+            return $this->db->getRecords( "SELECT * FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '0' ORDER BY DATE DESC" );
         }
 
+        // Get the bad behavior post requests
+        function getBadBehaviorPostRequests() {
+            $settings = bb2_read_settings();
+            return $this->db->getRecords( "SELECT * FROM " . $settings['log_table'] . " WHERE request_method = 'POST' ORDER BY DATE DESC" );
+        }
+
         // Function to resize an uploaded image. Takes a YDFSImage object as it's argument
         function resizeUploadedImage( $image ) {
 

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-30 21:30:27 UTC (rev 2285)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_en.php	2006-12-31 10:19:04 UTC (rev 2286)
@@ -380,6 +380,7 @@
 $GLOBALS['t']['total_bad_requests_stopped'] = 'Total Count Of Denied Requests';
 $GLOBALS['t']['requests'] = 'requests';
 $GLOBALS['t']['total_bad_requests_stopped'] = 'Denied Requests';
+$GLOBALS['t']['post_requests'] = 'POST Requests';
 $GLOBALS['t']['ip'] = 'IP';
 $GLOBALS['t']['request_method'] = 'Method';
 $GLOBALS['t']['url'] = 'URL';

Modified: YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-30 21:30:27 UTC (rev 2285)
+++ YDFramework2.0/trunk/examples/weblog/include/languages/language_nl.php	2006-12-31 10:19:04 UTC (rev 2286)
@@ -380,6 +380,7 @@
 $GLOBALS['t']['total_bad_requests_stopped'] = 'Total Aantal Geweigerde Requests';
 $GLOBALS['t']['requests'] = 'requests';
 $GLOBALS['t']['bad_requests_stopped'] = 'Geweigerde Requests';
+$GLOBALS['t']['post_requests'] = 'POST Requests';
 $GLOBALS['t']['ip'] = 'IP';
 $GLOBALS['t']['request_method'] = 'Methode';
 $GLOBALS['t']['url'] = 'URL';

Modified: YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.php	2006-12-30 21:30:27 UTC (rev 2285)
+++ YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.php	2006-12-31 10:19:04 UTC (rev 2286)
@@ -16,7 +16,8 @@
 
             // Get the count and number of requests
             $requests_count = $this->weblog->getBadBehaviorRequestsCount();
-            $requests = $this->weblog->getBadBehaviorRequests();
+            //$requests = $this->weblog->getBadBehaviorRequests();
+            $requests = $this->weblog->getBadBehaviorPostRequests();
 
             // Get the pagesize and current page from the URL
             $page = @ $_GET['page'];

Modified: YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.tpl
===================================================================
--- YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.tpl	2006-12-30 21:30:27 UTC (rev 2285)
+++ YDFramework2.0/trunk/examples/weblog/manage/bad_behavior.tpl	2006-12-31 10:19:04 UTC (rev 2286)
@@ -15,7 +15,7 @@
             <tr><td colspan="7">&nbsp;</td></tr>
             <tr>
                 <th class="adminRowLG" colspan="7">
-                    &raquo; {t w="bad_requests_stopped"}
+                    &raquo; {t w="post_requests"}
                 </th>
             </tr>
             <tr>
@@ -26,7 +26,7 @@
             </tr>
             <tr><td class="adminRowR" colspan="5">{$requests->getBrowseBar()}</td></tr>
             {foreach from=$requests->set item="request"}
-                <tr onMouseOver="YDRowMouseOver(this);" onMouseOut="YDRowMouseOut(this);" {if $comment.item_is_draft eq '1'}style="color: gray"{/if}>
+                <tr onMouseOver="YDRowMouseOver(this);" onMouseOut="YDRowMouseOut(this);">
                     <td class="adminRowL">{$request.date}</td>
                     <td class="adminRowL">{$request.ip}</td>
                     <td class="adminRowL">{$request.request_method}</td>



From pclaerhout at mail.berlios.de  Sun Dec 31 11:24:46 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 31 Dec 2006 11:24:46 +0100
Subject: [ydf-devel] r2287 - YDFramework2.0/trunk/examples/weblog
Message-ID: <200612311024.kBVAOkUO031790@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-31 11:24:46 +0100 (Sun, 31 Dec 2006)
New Revision: 2287

Modified:
   YDFramework2.0/trunk/examples/weblog/item.php
Log:
The captcha element for the weblog comment now only uses numbers.

Modified: YDFramework2.0/trunk/examples/weblog/item.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/item.php	2006-12-31 10:19:04 UTC (rev 2286)
+++ YDFramework2.0/trunk/examples/weblog/item.php	2006-12-31 10:24:46 UTC (rev 2287)
@@ -191,6 +191,7 @@
 
             // Create captcha object 
             $captcha = new YDCaptcha();
+            $captcha->_img->SetCharSet( "2-4,6,8-9,2-4,6,8-9" );
 
             // Return the image
             return $captcha->Create();



From pclaerhout at mail.berlios.de  Sun Dec 31 14:00:54 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 31 Dec 2006 14:00:54 +0100
Subject: [ydf-devel] r2288 -
	YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump
Message-ID: <200612311300.kBVD0sCu022777@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-31 14:00:54 +0100 (Sun, 31 Dec 2006)
New Revision: 2288

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump/YDMysqlDump.php
Log:
Fixed MySQLDump which would convert text to integers even though they are stored in textual fields.

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump/YDMysqlDump.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump/YDMysqlDump.php	2006-12-31 10:24:46 UTC (rev 2287)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump/YDMysqlDump.php	2006-12-31 13:00:54 UTC (rev 2288)
@@ -256,13 +256,14 @@
                 // test type of element
                 foreach( $row as $element ) {
                 
-                    if ( is_numeric( $element ) ) {
+                    //if ( is_numeric( $element ) ) {
+                    //    
+                    //    // if element is numeric just add it
+                    //    array_push( $insert, $element );
+                    //    
+                    //} else
+                    if ( !$element ) {
                         
-                        // if element is numeric just add it
-                        array_push( $insert, $element );
-                        
-                    } else if ( !$element ) {
-                        
                         // if element is empty insert string NULL
                         array_push( $insert, "NULL" );
                         



From pclaerhout at mail.berlios.de  Sun Dec 31 14:02:14 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 31 Dec 2006 14:02:14 +0100
Subject: [ydf-devel] r2289 - YDFramework2.0/trunk/examples/weblog/include
Message-ID: <200612311302.kBVD2Eej022884@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-31 14:02:14 +0100 (Sun, 31 Dec 2006)
New Revision: 2289

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
Log:
Another fix for the queries for Bad Behaviour.

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-31 13:00:54 UTC (rev 2288)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-31 13:02:14 UTC (rev 2289)
@@ -964,7 +964,7 @@
         function getBadBehaviorRequestsCount() {
             $settings = bb2_read_settings();
             return $this->db->getValueByName(
-                "SELECT COUNT(*) AS COUNT FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '0'"
+                "SELECT COUNT(*) AS COUNT FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000'"
                 , 'count'
             );
         }
@@ -972,7 +972,7 @@
         // Get the bad behavior requests
         function getBadBehaviorRequests() {
             $settings = bb2_read_settings();
-            return $this->db->getRecords( "SELECT * FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '0' ORDER BY DATE DESC" );
+            return $this->db->getRecords( "SELECT * FROM " . $settings['log_table'] . " WHERE `key` NOT LIKE '00000000' ORDER BY DATE DESC" );
         }
 
         // Get the bad behavior post requests



From pclaerhout at mail.berlios.de  Sun Dec 31 14:06:05 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 31 Dec 2006 14:06:05 +0100
Subject: [ydf-devel] r2290 -
	YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump
Message-ID: <200612311306.kBVD65so023150@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-31 14:06:04 +0100 (Sun, 31 Dec 2006)
New Revision: 2290

Modified:
   YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump/YDMysqlDump.php
Log:
Another fix for the mysqldump class.

Modified: YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump/YDMysqlDump.php
===================================================================
--- YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump/YDMysqlDump.php	2006-12-31 13:02:14 UTC (rev 2289)
+++ YDFramework2.0/trunk/YDFramework2/addons/YDMysqlDump/YDMysqlDump.php	2006-12-31 13:06:04 UTC (rev 2290)
@@ -256,14 +256,13 @@
                 // test type of element
                 foreach( $row as $element ) {
                 
-                    //if ( is_numeric( $element ) ) {
-                    //    
-                    //    // if element is numeric just add it
-                    //    array_push( $insert, $element );
-                    //    
-                    //} else
-                    if ( !$element ) {
+                    if ( is_numeric( $element ) ) {
                         
+                        // if element is numeric just add it
+                        array_push( $insert, "'". mysql_escape_string($element) ."'" );
+                        
+                    } else if ( !$element ) {
+                        
                         // if element is empty insert string NULL
                         array_push( $insert, "NULL" );
                         



From pclaerhout at mail.berlios.de  Sun Dec 31 14:13:39 2006
From: pclaerhout at mail.berlios.de (pclaerhout at BerliOS)
Date: Sun, 31 Dec 2006 14:13:39 +0100
Subject: [ydf-devel] r2291 - YDFramework2.0/trunk/examples/weblog/include
Message-ID: <200612311313.kBVDDdmi023922@sheep.berlios.de>

Author: pclaerhout
Date: 2006-12-31 14:13:38 +0100 (Sun, 31 Dec 2006)
New Revision: 2291

Modified:
   YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
Log:
The bad behaviour table is now automatically cleaned up.

Modified: YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php
===================================================================
--- YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-31 13:06:04 UTC (rev 2290)
+++ YDFramework2.0/trunk/examples/weblog/include/YDWeblogAPI.php	2006-12-31 13:13:38 UTC (rev 2291)
@@ -142,6 +142,10 @@
                 $this->db->executeSql( $sql );
             }
 
+            // Cleanup the bad behaviour table
+            $sql = 'DELETE FROM #_bad_behavior WHERE DATE_SUB( `date`, INTERVAL 1 day ) < DATE_SUB( CURDATE(), INTERVAL 1 day ) AND request_method = \'GET\' AND `key` = \'00000000\'';
+            $this->db->executeSql( $sql );
+
             // Check against akismet if a key is there
             if ( YDConfig::get( 'akismet_key', '' ) != '' ) {
 



